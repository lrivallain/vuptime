<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Storage on vUptime.io - Cloud builder(s)</title><link>https://vuptime.io/tags/storage/</link><description>Recent content in Storage on vUptime.io - Cloud builder(s)</description><generator>Hugo -- gohugo.io</generator><language>en</language><copyright>Ludovic Rivallain and blog co-authors</copyright><lastBuildDate>Tue, 05 Nov 2024 00:00:00 +0000</lastBuildDate><atom:link href="https://vuptime.io/tags/storage/feed.xml" rel="self" type="application/rss+xml"/><item><title>Azure Elastic SAN to extend Azure VMware Solution storage</title><link>https://vuptime.io/post/2024-11-05-azure-elasticsan-and-avs/</link><pubDate>Tue, 05 Nov 2024 00:00:00 +0000</pubDate><guid>https://vuptime.io/post/2024-11-05-azure-elasticsan-and-avs/</guid><description>
&lt;p>Azure VMware Solution (AVS) is a managed service that relies mostly on Hyper-converged infrastructure (HCI) and VMware vSAN to provide storage capacity to host Virtual Machines (VMs) workloads. Each host deployed in the solution is providing its local storage devices and capabilities to the distributed storage capacity.&lt;/p>
&lt;p>By default, the scalability of such HCI solutions is based on the addition of new hosts to the cluster, increasing the storage capacity and compute resources available to the VMs.&lt;/p>
&lt;p>However, there are some scenarios where you might need to extend the storage capacity of your AVS cluster without requiring additional compute resources.&lt;/p>
&lt;h1 id="extend-avs-storage-capacity">Extend AVS storage capacity&lt;/h1>
&lt;p>Let's do a quick overview of the different options available to extend the storage capacity of your AVS cluster without expanding the compute resources.&lt;/p>
&lt;h2 id="azure-netapp-files">Azure NetApp Files&lt;/h2>
&lt;p>The initial solution to expand storage capacity was to utilize Azure NetApp Files (ANF) as the storage backend for Azure VMware Solution (AVS). ANF volumes are mounted as NFS datastores on the ESXi hosts within the AVS cluster. Network connectivity is managed through a dedicated Azure Virtual Network (vNet) and subnet, along with an ExpressRoute gateway.&lt;/p>
&lt;div class="notices info">
&lt;div class="label">Note&lt;/div>
&lt;p>ANF is a first party service in Azure.&lt;/p>
&lt;/div>
&lt;p>&lt;a href="https://learn.microsoft.com/en-us/azure/azure-vmware/attach-azure-netapp-files-to-azure-vmware-solution-hosts?tabs=azure-portal">AVS+Azure NetApp Files documentation&lt;/a>&lt;/p>
&lt;h2 id="pure-cloud-block-store">Pure Cloud Block Store&lt;/h2>
&lt;p>A second approach is to rely on Pure Cloud Block Store (CBS) to extend the storage capacity of your AVS cluster. Pure Cloud Block Store is a fully managed service that provides block storage to your AVS cluster.&lt;/p>
&lt;div class="notices info">
&lt;div class="label">Note&lt;/div>
&lt;p>Pure Storage is a third party service in Azure.&lt;/p>
&lt;/div>
&lt;p>&lt;a href="https://learn.microsoft.com/en-us/azure/azure-vmware/configure-pure-cloud-block-store">AVS+Pure Cloud Block Store documentation&lt;/a>&lt;/p>
&lt;h2 id="azure-elastic-san">Azure Elastic SAN&lt;/h2>
&lt;p>GA since October 2024, Azure Elastic SAN integration with AVS provides a new way to extend the storage capacity of your AVS cluster. Azure Elastic SAN is a fully managed service that provides block storage to your AVS cluster.&lt;/p>
&lt;div class="notices info">
&lt;div class="label">Note&lt;/div>
&lt;p>Azure Elastic SAN is a first party service in Azure.&lt;/p>
&lt;/div>
&lt;p>&lt;a href="https://learn.microsoft.com/en-us/azure/azure-vmware/configure-azure-elastic-san">AVS+Azure Elastic SAN documentation&lt;/a>&lt;/p>
&lt;h1 id="azure-elastic-san-and-avs">Azure Elastic SAN and AVS&lt;/h1>
&lt;p>I will not cover all the differences with other available services in this post, but I encourage you to get a look at the &lt;a href="https://learn.microsoft.com/en-us/azure/storage/elastic-san/elastic-san-introduction">Azure Elastic SAN documentation&lt;/a> to get more details.&lt;/p>
&lt;p>From my point of view, the two main benefits of Azure Elastic SAN in AVS storage extension are:&lt;/p>
&lt;ul>
&lt;li>The &lt;strong>performances&lt;/strong>: each provisioned TB of &lt;em>Base&lt;/em> Azure Elastic SAN provides 200MB/s throughput and 5000 IOPS.&lt;/li>
&lt;li>The &lt;strong>cost&lt;/strong> optimization.&lt;/li>
&lt;/ul>
&lt;p>In this post we will see how to integrate Azure Elastic SAN with AVS and benefit from external storage capacity by this way.&lt;/p>
&lt;h2 id="localization">Localization&lt;/h2>
&lt;p>Azure Elastic SAN is &lt;a href="https://learn.microsoft.com/en-us/azure/storage/elastic-san/elastic-san-create">available in multiple Azure regions&lt;/a>. When integrating Azure Elastic SAN with AVS, it is recommended to deploy the storage service in the same Azure region and Availability Zone (AZ) as the AVS cluster to minimize latency and optimize performances.&lt;/p>
&lt;h2 id="network-topology">Network topology&lt;/h2>
&lt;p>&lt;figure>
&lt;picture>
&lt;img
loading="lazy"
decoding="async"
alt="Azure Elastic SAN and AVS: Network topology"
class="image_figure image_internal image_unprocessed"
src="https://vuptime.io/images/avs-esan/eSAN-and-AVS-network-topology.png"
/>
&lt;/picture>
&lt;/figure>
&lt;/p>
&lt;p>The previous illustration shows the network topology when integrating Azure Elastic SAN with AVS.&lt;/p>
&lt;p>ESXi hosts in the AVS cluster are connected to the Azure Elastic SAN service through the following components&lt;/p>
&lt;h3 id="new-vmkernel-interfaces-per-esxi-host-external-storage-block">New VMKernel interfaces per ESXi host: &lt;em>External Storage Block&lt;/em>&lt;/h3>
&lt;p>To use Elastic SAN with AVS, you need to provision a new IP address block/range to configure the SDDC's &lt;em>External Storage Block&lt;/em>. The address block should be a /24 network (&lt;a href="https://learn.microsoft.com/en-us/azure/azure-vmware/configure-azure-elastic-san#configure-external-storage-address-block">Documentation&lt;/a>).&lt;/p>
&lt;p>When configuring the new &lt;em>External Storage Block&lt;/em>, each ESXi host in the AVS cluster will have two VMKernel interfaces configured within the new IP address block:
&lt;figure>
&lt;picture>
&lt;img
loading="lazy"
decoding="async"
alt="New VMKernel interfaces::picture-border"
class="image_figure image_internal image_unprocessed"
src="https://vuptime.io/images/avs-esan/esxi-new-vmkernels.png"
/>
&lt;/picture>
&lt;/figure>
&lt;/p>
&lt;p>The two new network interfaces will be used to initiate the iSCSI connections to the Azure Elastic SAN service by using a newly created iSCSI Software adapter:
&lt;figure>
&lt;picture>
&lt;img
loading="lazy"
decoding="async"
alt="New iSCSI Software adapter::picture-border"
class="image_figure image_internal image_unprocessed"
src="https://vuptime.io/images/avs-esan/esxi-new-storage-adapter.png"
/>
&lt;/picture>
&lt;/figure>
&lt;/p>
&lt;h3 id="avs-express-route-circuit">AVS Express Route circuit&lt;/h3>
&lt;p>Azure VMware Solution uses the concept of Express Route circuit (ER) to provide connectivity out of the boundaries of the NSX-T and management networks. It enables the connection to Azure services like Azure Elastic SAN, and also the connectivity with the on-premises environments if needed.&lt;/p>
&lt;p>In the case of external storage resources, a dedicated Express Route Gateway is recommended to maximize the performances and limit the noisy neighbor effect of other services.&lt;/p>
&lt;p>The Express Route gateway will &amp;quot;land&amp;quot; the AVS ER to an Azure vNet were the connectivity with Elastic SAN can be established. Sizing this component according to the expected throughput and latency requirements is crucial to ensure the performances of the storage service:&lt;/p>
&lt;ul>
&lt;li>AVS Express Route circuit is a 10GBps link&lt;/li>
&lt;li>It is recommended to provision a gateway with the same bandwidth capacity like &lt;code>ErGw3AZ&lt;/code>.&lt;/li>
&lt;/ul>
&lt;div class="notices info">
&lt;div class="label">Note&lt;/div>
&lt;p>As &lt;strong>FastPath&lt;/strong> is &lt;a href="https://learn.microsoft.com/en-us/azure/expressroute/about-fastpath">currently not supported with Private Endpoints&lt;/a>, there is no need to enable it.&lt;/p>
&lt;/div>
&lt;h3 id="azure-vnet-and-private-endpoints">Azure vNet and Private Endpoints&lt;/h3>
&lt;p>In order to connect to the Azure Elastic SAN service, you need to create a Private Endpoint in an Azure vNet.&lt;/p>
&lt;p>To increase performance and reliability, multiple Private Endpoints should be created to establish multiple sessions between hosts and the storage service. The Azure documentation provide a set of recommendations to optimize the performances of the storage service: &lt;a href="https://learn.microsoft.com/en-us/azure/azure-vmware/configure-azure-elastic-san#configuration-recommendations">configuration recommendations&lt;/a>.
&lt;figure>
&lt;picture>
&lt;img
loading="lazy"
decoding="async"
alt="Set of Private Endpoints to access Elastic SAN::picture-border"
class="image_figure image_internal image_unprocessed"
src="https://vuptime.io/images/avs-esan/azure-private-endpoints.png"
/>
&lt;/picture>
&lt;/figure>
&lt;/p>
&lt;p>In the Azure vNet diagram, we can see the Private Endpoints, their Network Interface Cards (NICs), and the connection to the Azure Elastic SAN service.
&lt;figure>
&lt;picture>
&lt;img
loading="lazy"
decoding="async"
alt="Azure vNet and Private Endpoints components in the Azure UI diagram::picture-border"
class="image_figure image_internal image_unprocessed"
src="https://vuptime.io/images/avs-esan/azure-private-endpoints-ui-diagram.png"
/>
&lt;/picture>
&lt;/figure>
&lt;/p>
&lt;h2 id="storage-configuration">Storage configuration&lt;/h2>
&lt;p>Mounting the Elastic SAN on Azure VMware Solution is managed through the Azure Portal or API and the process is quite straightforward: you select the Elastic SAN service, the volume group, then the volume to mount and the target cluster.&lt;/p>
&lt;p>When mounted on nodes, the storage is visible as datastore in both vCenter and Azure Portal.
&lt;figure>
&lt;picture>
&lt;img
loading="lazy"
decoding="async"
alt="Mounted Elastic SAN volume on AVS: from Azure Portal::picture-border"
class="image_figure image_internal image_unprocessed"
src="https://vuptime.io/images/avs-esan/avs-mount-esan-ui.png"
/>
&lt;/picture>
&lt;/figure>
&lt;/p>
&lt;p>&lt;figure>
&lt;picture>
&lt;img
loading="lazy"
decoding="async"
alt="Mounted Elastic SAN volume on AVS: from vCenter UI::picture-border"
class="image_figure image_internal image_unprocessed"
src="https://vuptime.io/images/avs-esan/avs-mount-esan-vcenter.png"
/>
&lt;/picture>
&lt;/figure>
&lt;/p>
&lt;h1 id="conclusion">Conclusion&lt;/h1>
&lt;p>It is now time to migrate workloads to this new storage capacity and benefit from the performances and cost optimization of Azure Elastic SAN. To preserver workload runtime, &lt;strong>Storage vMotion&lt;/strong> is the recommended method to move VMs from one datastore to another.&lt;/p>
&lt;p>Keep in mind that the vSAN cluster will probably provide the best performances for the VMs that require the lowest latency and the highest throughput. Azure Elastic SAN is a good candidate for VMs that require a good balance between performances, capacity and cost optimization.&lt;/p></description></item><item><title>OVH Cloud - Object Storage with cyberduck</title><link>https://vuptime.io/post/2015-06-30-ovh-cloud-object-storage-cyberduck/</link><pubDate>Tue, 30 Jun 2015 00:00:00 +0000</pubDate><guid>https://vuptime.io/2015/06/30/ovh-cloud-object-storage-cyberduck/</guid><description>
&lt;blockquote>
&lt;p>&amp;quot;&lt;em>&lt;strong>Object Storage&lt;/strong> (also known as object-based storage&lt;sup id="cite_ref-1" class="reference">&lt;a href="https://en.wikipedia.org/wiki/Object_storage#cite_note-1">&lt;/a>&lt;/sup>) is a storage architecture that manages data as objects, as opposed to other storage architectures like &lt;a href="https://en.wikipedia.org/wiki/File_systems" title="File systems">file systems&lt;/a> which manage data as a file hierarchy and &lt;a href="https://en.wikipedia.org/wiki/Block_storage" title="Block storage">block storage&lt;/a> which manages data as blocks within sectors and tracks.&lt;/em>&amp;quot; &lt;sub>&lt;em>Source: &lt;a href="https://en.wikipedia.org/wiki/Object_storage">&lt;strong>Wikipedia-en&lt;/strong>&lt;/a>&lt;/em>&lt;/sub>&lt;/p>
&lt;/blockquote>
&lt;p>&lt;a href="https://ovh.com/cloud/" title="OVH.com - cloud offers">ovh.com&lt;/a> has been providing for a few weeks, an offer on it's public cloud to manage Object-Storage. A very good way to store many things:&lt;/p>
&lt;ul>
&lt;li>Backup with private containers&lt;/li>
&lt;li>Static content for web site pictures&lt;/li>
&lt;li>Shared content for large binaries download&lt;/li>
&lt;li>...&lt;/li>
&lt;/ul>
&lt;p>You can use many ways to push/get file on the object-storage as the OVH manager, the Openstack's Horizon Manager or a swift compatible client:&lt;/p>
&lt;p>&lt;figure>&lt;img src="https://vuptime.io/images/swift_ovhcloud/swift_ovhcloud_00.png">&lt;figcaption>
&lt;h4>OVH.com Cloud Object Storage Schema&lt;/h4>
&lt;/figcaption>
&lt;/figure>
© OVH.com&lt;/p>
&lt;p>Here, I'll show how to use the provided swift API with Cyberduck (download it at: &lt;a href="https://cyberduck.io/" title="CyberDuck">cyberduck.io&lt;/a>) to manage your uploaded files from your macOS or windows desk.&lt;/p>
&lt;h1 id="create-your-container">Create your container&lt;/h1>
&lt;p>First thing to do, is to create an OVH account, then, go to the manager: &lt;a href="https://www.ovh.com/manager/cloud/" title="Manager - cloud">https://www.ovh.com/manager/cloud/&lt;/a>. Now you can create your first storage container. A container is an entity where a &amp;quot;public/static/private&amp;quot; policy can be applied.&lt;/p>
&lt;p>Example, for a backup container, we chose a private type policy.&lt;/p>
&lt;figure>&lt;img src="https://vuptime.io/images/swift_ovhcloud/swift_ovhcloud_01.png">&lt;figcaption>
&lt;h4>Create a container&lt;/h4>
&lt;/figcaption>
&lt;/figure>
&lt;figure>&lt;img src="https://vuptime.io/images/swift_ovhcloud/swift_ovhcloud_02.png">&lt;figcaption>
&lt;h4>Create a container&lt;/h4>
&lt;/figcaption>
&lt;/figure>
&lt;p>Now it should be displayed on container list. You can push file through the manager, but it's not an easy way to daily manage files on your new storage location.&lt;/p>
&lt;h1 id="create-your-credentials">Create your credentials&lt;/h1>
&lt;p>Now you need to create credentials in order to connect through a swift client. It'll also provide access to Horizon, an Openstack manager.&lt;/p>
&lt;p>Click on &amp;quot;&lt;em>Openstack&lt;/em>&amp;quot; tab on Manager and create a new user:&lt;/p>
&lt;figure>&lt;img src="https://vuptime.io/images/swift_ovhcloud/swift_ovhcloud_03.png">&lt;figcaption>
&lt;h4>Create an user&lt;/h4>
&lt;/figcaption>
&lt;/figure>
&lt;p>You only need to provide a description as username and password are randomly generated:&lt;/p>
&lt;figure>&lt;img src="https://vuptime.io/images/swift_ovhcloud/swift_ovhcloud_04.png">&lt;figcaption>
&lt;h4>Enter a description&lt;/h4>
&lt;/figcaption>
&lt;/figure>
&lt;p>Then you have to remember credentials as it the only time you'll be able to see it:&lt;/p>
&lt;figure>&lt;img src="https://vuptime.io/images/swift_ovhcloud/swift_ovhcloud_05.png">&lt;figcaption>
&lt;h4>Note credentials&lt;/h4>
&lt;/figcaption>
&lt;/figure>
&lt;h2 id="get-other-informations">Get other informations&lt;/h2>
&lt;p>From that point, you should be able to join the Horizon manager for next step:&lt;/p>
&lt;figure>&lt;img src="https://vuptime.io/images/swift_ovhcloud/swift_ovhcloud_06.png">&lt;figcaption>
&lt;h4>Click on link to join horizon manager&lt;/h4>
&lt;/figcaption>
&lt;/figure>
&lt;p>And log-in with credentials created previously:&lt;/p>
&lt;figure>&lt;img src="https://vuptime.io/images/swift_ovhcloud/swift_ovhcloud_11.png">&lt;figcaption>
&lt;h4>Log-in&lt;/h4>
&lt;/figcaption>
&lt;/figure>
&lt;p>In &amp;quot;&lt;em>Access&amp;amp;Security&lt;/em>&amp;quot; tab, select the &amp;quot;&lt;em>API Access&lt;/em>&amp;quot; and download the OpenStack RC file:&lt;/p>
&lt;figure>&lt;img src="https://vuptime.io/images/swift_ovhcloud/swift_ovhcloud_08.png">&lt;figcaption>
&lt;h4>Openstack RC file download&lt;/h4>
&lt;/figcaption>
&lt;/figure>
&lt;p>In the downloaded file you will need:&lt;/p>
&lt;ul>
&lt;li>the OS_AUTH_URL : &lt;a href="https://auth.cloud.ovh.net/v2.0" title="Auth URL">https://auth.cloud.ovh.net/v2.0&lt;/a>&lt;/li>
&lt;li>the OS_TENANT_ID&lt;/li>
&lt;li>the OS_USERNAME = = the username previously created&lt;/li>
&lt;/ul>
&lt;p>Now you can open Cyberduck :-)&lt;/p>
&lt;h1 id="connect-with-cyberduck">Connect with cyberduck&lt;/h1>
&lt;p>On cyberduck, select a new connection with &amp;quot;swift&amp;quot; type and enter :&lt;/p>
&lt;ul>
&lt;li>URL =&amp;gt; &lt;a href="https://auth.cloud.ovh.net/v2.0" title="Auth URL">https://auth.cloud.ovh.net/v2.0&lt;/a>&lt;/li>
&lt;li>Username =&amp;gt; OS_TENANT_ID : OS_USERNAME &lt;em>(do not forget the &amp;quot;:&amp;quot; sign between both informations)&lt;/em>&lt;/li>
&lt;li>Prompted password =&amp;gt; the password of the OS_USERNAME&lt;/li>
&lt;/ul>
&lt;figure>&lt;img src="https://vuptime.io/images/swift_ovhcloud/swift_ovhcloud_09.png">&lt;figcaption>
&lt;h4>Cyberduck settings&lt;/h4>
&lt;/figcaption>
&lt;/figure>
&lt;h2 id="push-a-file">Push a file&lt;/h2>
&lt;p>Once you are connected you can download and push file easily :&lt;/p>
&lt;figure>&lt;img src="https://vuptime.io/images/swift_ovhcloud/swift_ovhcloud_10.png">&lt;figcaption>
&lt;h4>Push a file&lt;/h4>
&lt;/figcaption>
&lt;/figure>
&lt;p>Great, your first file is pushed on the OVH public cloud !&lt;/p></description></item></channel></rss>