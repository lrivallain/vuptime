<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>director on vUptime.io - Cloud builder(s)</title><link>https://vuptime.io/tags/director/</link><description>Recent content in director on vUptime.io - Cloud builder(s)</description><generator>Hugo -- gohugo.io</generator><language>en</language><copyright>Ludovic Rivallain and blog co-authors</copyright><lastBuildDate>Wed, 17 Feb 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://vuptime.io/tags/director/feed.xml" rel="self" type="application/rss+xml"/><item><title>Use VMware Container Service Extension with a corporate proxy</title><link>https://vuptime.io/post/2020-11-26-vmware-container-service-extension-with-a-proxy/</link><pubDate>Thu, 26 Nov 2020 00:00:00 +0000</pubDate><guid>https://vuptime.io/2020/11/26/vmware-container-service-extension-with-a-proxy/</guid><description>
&lt;p>The current post is a quickstart to VMware open-source project Container Service Extension (CSE), a Kubernetes as a Service for VMware vCloud Director.&lt;/p>
&lt;p>The project is already well documented (&lt;a href="https://vmware.github.io/container-service-extension/">CSE documentation&lt;/a>) and you should not have any trouble to set it up by following the installation steps.&lt;/p>
&lt;p>Except... if you plan to use it behind a corporate proxy to access to Internet. The goal of this post is to be a reminder to me for this kind of setup.&lt;/p>
&lt;h2 id="cse-server-appliance">CSE server appliance&lt;/h2>
&lt;p>The first step to setup CSE is to prepare an appliance that will host the CSE server component. In my case, I used a freshly deployed Ubuntu 20.04 LTS server, deployed from the ubuntu cloud images repository: &lt;a href="https://cloud-images.ubuntu.com/focal/current/focal-server-cloudimg-amd64.ova">https://cloud-images.ubuntu.com/focal/current/focal-server-cloudimg-amd64.ova&lt;/a>&lt;/p>
&lt;p>Once the appliance is up and running, I setup the proxy information:&lt;/p>
&lt;p>&lt;code>W.X.Y.Z&lt;/code> is the IP address of my HTTP based proxy.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="ln">1&lt;/span>&lt;span class="cl">&lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;HTTP_PROXY=W.X.Y.Z:3128
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">2&lt;/span>&lt;span class="cl">&lt;span class="s2">HTTPS_PROXY=W.X.Y.Z:3128
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">3&lt;/span>&lt;span class="cl">&lt;span class="s2">NO_PROXY=.vlab.lcl,192.168.0.0/16,127.0.0.1,localhost&amp;#34;&lt;/span> &lt;span class="p">|&lt;/span> sudo tee -a /etc/environment &amp;gt;/dev/null
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">4&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">5&lt;/span>&lt;span class="cl">&lt;span class="nb">export&lt;/span> &lt;span class="nv">HTTP_PROXY&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;W.X.Y.Z:3128&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">6&lt;/span>&lt;span class="cl">&lt;span class="nb">export&lt;/span> &lt;span class="nv">HTTPS_PROXY&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;W.X.Y.Z:3128&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">7&lt;/span>&lt;span class="cl">&lt;span class="nb">export&lt;/span> &lt;span class="nv">NO_PROXY&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;.vlab.lcl,192.168.0.0/16,127.0.0.1,localhost&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">8&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">9&lt;/span>&lt;span class="cl">&lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;Acquire::http::proxy \&amp;#34;http://W.X.Y.Z:3128\&amp;#34;;&amp;#34;&lt;/span> &lt;span class="p">|&lt;/span> sudo tee -a /etc/apt/apt.conf &amp;gt;/dev/null
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>A quick test:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="ln">1&lt;/span>&lt;span class="cl">curl https://google.com
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">2&lt;/span>&lt;span class="cl">&amp;lt;HTML&amp;gt;&amp;lt;HEAD&amp;gt;&amp;lt;meta http-equiv&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;content-type&amp;#34;&lt;/span> &lt;span class="nv">content&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;text/html;charset=utf-8&amp;#34;&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">3&lt;/span>&lt;span class="cl">&amp;lt;TITLE&amp;gt;301 Moved&amp;lt;/TITLE&amp;gt;&amp;lt;/HEAD&amp;gt;&amp;lt;BODY&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">4&lt;/span>&lt;span class="cl">&amp;lt;H1&amp;gt;301 Moved&amp;lt;/H1&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">5&lt;/span>&lt;span class="cl">The document has moved
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">6&lt;/span>&lt;span class="cl">&amp;lt;A &lt;span class="nv">HREF&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;https://www.google.com/&amp;#34;&lt;/span>&amp;gt;here&amp;lt;/A&amp;gt;.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">7&lt;/span>&lt;span class="cl">&amp;lt;/BODY&amp;gt;&amp;lt;/HTML&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>It works.&lt;/p>
&lt;h3 id="cse-server-components">CSE server components&lt;/h3>
&lt;p>Let's install software components required for CSE:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="ln">1&lt;/span>&lt;span class="cl">&lt;span class="c1"># vcd-cli + CSE&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">2&lt;/span>&lt;span class="cl">sudo apt-get install python3-pip gcc -y
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">3&lt;/span>&lt;span class="cl">sudo pip3 install vcd-cli
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">4&lt;/span>&lt;span class="cl">sudo pip3 install container-service-extension&lt;span class="o">==&lt;/span>2.6.1
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Yep, still using CSE 2.6 for backwards compatibility.&lt;/p>
&lt;p>Next, we install &lt;code>kubectl&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="ln">1&lt;/span>&lt;span class="cl">&lt;span class="c1"># kubectl&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">2&lt;/span>&lt;span class="cl">curl -LO &lt;span class="s2">&amp;#34;https://storage.googleapis.com/kubernetes-release/release/&lt;/span>&lt;span class="k">$(&lt;/span>curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt&lt;span class="k">)&lt;/span>&lt;span class="s2">/bin/linux/amd64/kubectl&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">3&lt;/span>&lt;span class="cl">chmod +x ./kubectl
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">4&lt;/span>&lt;span class="cl">sudo mv ./kubectl /usr/local/bin/kubectl
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">5&lt;/span>&lt;span class="cl">&lt;span class="c1"># Test it:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">6&lt;/span>&lt;span class="cl">kubectl version --client
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="vcd-cli-integration">&lt;code>vcd&lt;/code> CLI integration&lt;/h3>
&lt;p>Quick method to integrate the &lt;code>cse&lt;/code> CLI to the &lt;code>vcd&lt;/code> CLI:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="ln">1&lt;/span>&lt;span class="cl">mkdir -p ~/.vcd-cli/
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">2&lt;/span>&lt;span class="cl">&lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;extensions:
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">3&lt;/span>&lt;span class="cl">&lt;span class="s2">- container_service_extension.client.cse&amp;#34;&lt;/span> &amp;gt;&amp;gt; ~/.vcd-cli/profiles.yaml
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">4&lt;/span>&lt;span class="cl">&lt;span class="c1"># Test it:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">5&lt;/span>&lt;span class="cl">vcd cse version
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="authentication-key-pairs">Authentication key pairs&lt;/h3>
&lt;p>If needed, create a SSH key pair to be used from this appliance, to the K8S nodes for maintenance:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="ln">1&lt;/span>&lt;span class="cl">ssh-keygen
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="cse-configuration">CSE configuration&lt;/h2>
&lt;p>Once our appliance is ready to host CSE server, we can configure it:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="ln">1&lt;/span>&lt;span class="cl">mkdir ~/.cse
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">2&lt;/span>&lt;span class="cl">cse sample -o ~/.cse/decrypted-config.yaml
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>This command will create a &lt;code>~/.cse/decrypted-config.yaml&lt;/code> file to configure according to the &lt;a href="https://vmware.github.io/container-service-extension/cse2_6/CSE_CONFIG.html">reference documentation&lt;/a>.&lt;/p>
&lt;p>To ease the testing, I made a &lt;em>fork&lt;/em> of the &lt;a href="https://github.com/vmware/container-service-extension-templates">official templates repository&lt;/a> to my GitHub workspace with &lt;a href="https://github.com/lrivallain/container-service-extension-templates">only one ubuntu based template&lt;/a>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="ln"> 1&lt;/span>&lt;span class="cl">&lt;span class="nt">templates&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 2&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">compute_policy&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 3&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">cpu&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">2&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 4&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">deprecated&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">false&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 5&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">description&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;Ubuntu 16.04, Docker-ce 19.03.12, Kubernetes 1.18.6, weave 2.6.5&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 6&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">mem&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">2048&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 7&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">ubuntu-16.04_k8-1.18_weave-2.6.5&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 8&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">revision&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">1&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 9&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">kind&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">native&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">10&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">sha256_ova&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">3c1bec8e2770af5b9b0462e20b7b24633666feedff43c099a6fb1330fcc869a9&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">11&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">source_ova&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;https://cloud-images.ubuntu.com/releases/xenial/release-20180418/ubuntu-16.04-server-cloudimg-amd64.ova&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">12&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">source_ova_name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">ubuntu-16.04-server-cloudimg-amd64.ova&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">13&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">os&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;ubuntu-16.04&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">14&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">docker_version&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;19.03.12&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">15&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">kubernetes&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;upstream&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">16&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">kubernetes_version&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;1.18.6&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">17&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">cni&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;weave&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">18&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">cni_version&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;2.6.5&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">19&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">upgrade_from&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">20&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="s2">&amp;#34;ubuntu-16.04_k8-1.17_weave-2.6.0&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">21&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="s2">&amp;#34;ubuntu-16.04_k8-1.18_weave-2.6.5&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Now we encrypt the file:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="ln">1&lt;/span>&lt;span class="cl">cse encrypt ~/.cse/decrypted-config.yaml --output ~/.cse/config.yaml
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">2&lt;/span>&lt;span class="cl">chmod &lt;span class="m">600&lt;/span> config.yaml
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">3&lt;/span>&lt;span class="cl">rm ~/.cse/decrypted-config.yaml &lt;span class="c1"># otherwise it will be useless to encrypt it&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>If you need to decrypt it (for example to edit the content):&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="ln">1&lt;/span>&lt;span class="cl">cse decrypt ~/.cse/config.yaml --output ~/.cse/decrypted-config.yaml
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Then you can run the install process...&lt;/p>
&lt;blockquote>
&lt;p>&lt;strong>!!!BUT!!!&lt;/strong> We will kill it when the process will download the OVA file(s) in order to hack the content of customization scripts:&lt;/p>
&lt;/blockquote>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="ln">1&lt;/span>&lt;span class="cl">cse install -c ~/.cse/config.yaml --ssh-key ~/.ssh/id_rsa.pub
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">2&lt;/span>&lt;span class="cl">&lt;span class="c1"># !! cut the execution when the OVA is downloading !! CTRL+C&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>When the script is stopped, it is possible to edit the content of customization scripts to insert the proxy settings. In my case:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="ln">1&lt;/span>&lt;span class="cl">vi ~/.cse_scripts/ubuntu-16.04_k8-1.18_weave-2.6.5_rev1/cust.sh
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>I added the following lines at the beginning of the file, just after the line &lt;code>set -e&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="ln"> 1&lt;/span>&lt;span class="cl">&lt;span class="c1"># proxy setup&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 2&lt;/span>&lt;span class="cl">&lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;HTTP_PROXY=W.X.Y.Z:3128
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 3&lt;/span>&lt;span class="cl">&lt;span class="s2">HTTPS_PROXY=W.X.Y.Z:3128
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 4&lt;/span>&lt;span class="cl">&lt;span class="s2">NO_PROXY=.vlab.lcl,192.168.0.0/16,127.0.0.1,localhost&amp;#34;&lt;/span> &amp;gt;&amp;gt; /etc/environment
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 5&lt;/span>&lt;span class="cl">&lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;Acquire::http::proxy \&amp;#34;http://W.X.Y.Z:3128\&amp;#34;;&amp;#34;&lt;/span> &amp;gt;&amp;gt; /etc/apt/apt.conf
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 6&lt;/span>&lt;span class="cl">&lt;span class="nb">export&lt;/span> &lt;span class="nv">HTTP_PROXY&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;W.X.Y.Z:3128&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 7&lt;/span>&lt;span class="cl">&lt;span class="nb">export&lt;/span> &lt;span class="nv">HTTPS_PROXY&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;W.X.Y.Z:3128&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 8&lt;/span>&lt;span class="cl">&lt;span class="nb">export&lt;/span> &lt;span class="nv">NO_PROXY&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;.vlab.lcl,192.168.0.0/16,127.0.0.1,localhost&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 9&lt;/span>&lt;span class="cl">&lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;[Service]
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">10&lt;/span>&lt;span class="cl">&lt;span class="s2">Environment=\&amp;#34;HTTP_PROXY=http://W.X.Y.Z:3128\&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">11&lt;/span>&lt;span class="cl">&lt;span class="s2">Environment=\&amp;#34;HTTPS_PROXY=http://W.X.Y.Z:3128\&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">12&lt;/span>&lt;span class="cl">&lt;span class="s2">Environment=\&amp;#34;NO_PROXY=.vlab.lcl,192.168.0.0/16,127.0.0.1,localhost\&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">13&lt;/span>&lt;span class="cl">&lt;span class="s2">&amp;#34;&lt;/span> &amp;gt;&amp;gt; /etc/systemd/system/docker.service.d/override.conf
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Save+quit etc. And we re-run the CSE initialisation command:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="ln">1&lt;/span>&lt;span class="cl">cse install -c ~/.cse/config.yaml --ssh-key ~/.ssh/id_rsa.pub
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>And your template will now being built using the HTTP proxy you specified. After the template preparation, the template is added to the available ones:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="ln">1&lt;/span>&lt;span class="cl">cse template list -c ~/.cse/config.yaml
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">2&lt;/span>&lt;span class="cl">Password &lt;span class="k">for&lt;/span> config file decryption:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">3&lt;/span>&lt;span class="cl">Decrypting &lt;span class="s1">&amp;#39;config.yaml&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">4&lt;/span>&lt;span class="cl">name revision compute_policy &lt;span class="nb">local&lt;/span> remote
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">5&lt;/span>&lt;span class="cl">-------------------------------- ---------- ---------------- ------- --------
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">6&lt;/span>&lt;span class="cl">ubuntu-16.04_k8-1.18_weave-2.6.5 &lt;span class="m">1&lt;/span> Yes Yes
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;blockquote>
&lt;p>&lt;em>(I removed some columns to ease the post reading)&lt;/em>&lt;/p>
&lt;/blockquote>
&lt;h3 id="patching-pika-for-python-38">Patching Pika for Python 3.8&lt;/h3>
&lt;p>In the next steps, if you use Python version 3.8 (you can check it by running &lt;code> python3 -V&lt;/code> command), you may have an issue with an error message like:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="ln">1&lt;/span>&lt;span class="cl">vcd cse template list
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">2&lt;/span>&lt;span class="cl">Usage: vcd cse template list &lt;span class="o">[&lt;/span>OPTIONS&lt;span class="o">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">3&lt;/span>&lt;span class="cl">Try &lt;span class="s2">&amp;#34;vcd cse template list -h&amp;#34;&lt;/span> &lt;span class="k">for&lt;/span> help.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">4&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">5&lt;/span>&lt;span class="cl">Error: maximum recursion depth exceeded
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>You can patch the Pika library by applying a patch made from this &lt;a href="https://github.com/pika/pika/pull/1254">Pull request from @lukebakken&lt;/a>.&lt;/p>
&lt;p>Two choices:&lt;/p>
&lt;ol>
&lt;li>Download manually this &lt;a href="https://gist.github.com/lrivallain/be77cd8ffd731649705ae7b1e139d8d3#file-pika-1254-patch">patch file&lt;/a> and run &lt;code>patch&lt;/code> command:&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="ln">1&lt;/span>&lt;span class="cl">sudo patch /usr/local/lib/python3.8/dist-packages/pika/compat.py &amp;lt; pika-1254.patch
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="2">
&lt;li>All in one command (you should check the content of a downloaded file before applying it to you environment):&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="ln">1&lt;/span>&lt;span class="cl">curl -s &lt;span class="s1">&amp;#39;https://gist.githubusercontent.com/lrivallain/be77cd8ffd731649705ae7b1e139d8d3/raw/d35069fab35f179dd1a76f29607367424d87314a/pika-1254.patch&amp;#39;&lt;/span> &lt;span class="p">|&lt;/span> sudo patch /usr/local/lib/python3.8/dist-packages/pika/compat.py
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="tests">Tests&lt;/h3>
&lt;p>The following command will run the CSE server services in foreground mode&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="ln">1&lt;/span>&lt;span class="cl">cse run -c ~/.cse/config.yaml
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>After a series of checks, the process should display a message like:&lt;/p>
&lt;blockquote>
&lt;p>&lt;code>waiting for requests (ctrl+c to close)&lt;/code>&lt;/p>
&lt;/blockquote>
&lt;p>You can test it by running the following commands from another terminal instance:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="ln">1&lt;/span>&lt;span class="cl">vcd login vcd.vlab.lcl &amp;lt;org&amp;gt; &amp;lt;username&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">2&lt;/span>&lt;span class="cl">vcd cse template list
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>And you should get a list of templates ready for deployment:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="ln">1&lt;/span>&lt;span class="cl">name revision is_default catalog
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">2&lt;/span>&lt;span class="cl">-------------------------------- ---------- ------------ ---------
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">3&lt;/span>&lt;span class="cl">ubuntu-16.04_k8-1.18_weave-2.6.5 &lt;span class="m">1&lt;/span> Yes cse
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;blockquote>
&lt;p>&lt;em>(I removed some columns to ease the post reading)&lt;/em>&lt;/p>
&lt;/blockquote>
&lt;h3 id="finalize-installation">Finalize installation&lt;/h3>
&lt;p>Using the CSE server in foreground mode is not the easiest way for day-to-day operations, so we will enable it as a system service:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="ln">1&lt;/span>&lt;span class="cl">&lt;span class="c1"># get the service files from the CSE repository&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">2&lt;/span>&lt;span class="cl">curl -L https://github.com/vmware/container-service-extension/raw/2.6.1_ga/cse.service &amp;gt; ~/.cse/cse.service
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">3&lt;/span>&lt;span class="cl">curl -L https://github.com/vmware/container-service-extension/raw/2.6.1_ga/cse.sh &amp;gt; ~/.cse/cse.sh
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">4&lt;/span>&lt;span class="cl">chmod +x ~/.cse/cse.sh
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Edit the &lt;code>CSE_CONFIG_PATH&lt;/code> value of &lt;code>~/.cse/cse.sh&lt;/code> according to the path where is stored your configuration file. For my setup:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="ln">1&lt;/span>&lt;span class="cl">&lt;span class="nv">CSE_CONFIG_PATH&lt;/span>&lt;span class="o">=&lt;/span>/home/ubuntu/.cse/config.yaml
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Edit the &lt;code>ExecStart&lt;/code>, &lt;code>User&lt;/code>, &lt;code>WorkingDirectory&lt;/code> value of &lt;code>~/.cse/cse.service&lt;/code> according to your environment. I also add an &lt;code>Environment&lt;/code> statement to store the password of the configuration file and my proxy settings.&lt;/p>
&lt;p>For my setup:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-ini" data-lang="ini">&lt;span class="line">&lt;span class="ln"> 1&lt;/span>&lt;span class="cl">&lt;span class="k">[Unit]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 2&lt;/span>&lt;span class="cl">&lt;span class="na">Description&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">Container Service Extension for VMware vCloud Director&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 3&lt;/span>&lt;span class="cl">&lt;span class="na">Wants&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">network-online.target&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 4&lt;/span>&lt;span class="cl">&lt;span class="na">After&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">network-online.target&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 5&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 6&lt;/span>&lt;span class="cl">&lt;span class="k">[Service]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 7&lt;/span>&lt;span class="cl">&lt;span class="na">ExecStart&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">/home/ubuntu/.cse/cse.sh&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 8&lt;/span>&lt;span class="cl">&lt;span class="na">User&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">ubuntu&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 9&lt;/span>&lt;span class="cl">&lt;span class="na">WorkingDirectory&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">/home/ubuntu/.cse/&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">10&lt;/span>&lt;span class="cl">&lt;span class="na">Type&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">simple&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">11&lt;/span>&lt;span class="cl">&lt;span class="na">Restart&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">always&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">12&lt;/span>&lt;span class="cl">&lt;span class="na">Environment&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">CSE_CONFIG_PASSWORD=&amp;#34;VMware1!&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">13&lt;/span>&lt;span class="cl">&lt;span class="na">Environment&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">HTTP_PROXY=&amp;#34;W.X.Y.Z:3128&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">14&lt;/span>&lt;span class="cl">&lt;span class="na">Environment&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">HTTPS_PROXY=&amp;#34;W.X.Y.Z:3128&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">15&lt;/span>&lt;span class="cl">&lt;span class="na">Environment&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">NO_PROXY=&amp;#34;.vlab.lcl,192.168.0.0/16,127.0.0.1,localhost&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">16&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">17&lt;/span>&lt;span class="cl">&lt;span class="k">[Install]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">18&lt;/span>&lt;span class="cl">&lt;span class="na">WantedBy&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">default.target&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Then you can enable, start and check this new service:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="ln">1&lt;/span>&lt;span class="cl">sudo cp .cse/cse.service /etc/systemd/system/
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">2&lt;/span>&lt;span class="cl">sudo systemctl &lt;span class="nb">enable&lt;/span> cse
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">3&lt;/span>&lt;span class="cl">sudo systemctl start cse
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">4&lt;/span>&lt;span class="cl">sudo systemctl status cse
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="conclusion">Conclusion&lt;/h2>
&lt;p>You now have a fully working CSE appliance, running behind a corporate proxy and you can use it from any location with an access to the vCD instance.&lt;/p>
&lt;p>You can find more details on the way to create/manage CSE K8S clusters in the &lt;a href="https://vmware.github.io/container-service-extension/cse2_6/CLUSTER_MANAGEMENT.html">CSE documentation&lt;/a>.&lt;/p>
&lt;p>Of course, if you can afford to store a fork of the &lt;a href="https://github.com/vmware/container-service-extension-templates">official templates repository&lt;/a> with your proxy informations and your customisations, it could ease the deployment of new templates when needed: for example by setting up a &lt;em>private&lt;/em> or &lt;em>internal&lt;/em> git repository.&lt;/p></description></item><item><title>Object notfound in vRO using the vCloud Director plugin</title><link>https://vuptime.io/post/2020-04-25-vro-vcd-plugin-object-not-found/</link><pubDate>Sat, 25 Apr 2020 00:00:00 +0000</pubDate><guid>https://vuptime.io/2020/04/25/vro-vcd-plugin-object-not-found/</guid><description>
&lt;p>A strange behavior has happened just after vRO installation and vCloud director plugin configuration, I wasn't able to interact with any objects managed by the vcloud director plugin.&lt;/p>
&lt;p>I created a simple workflow on my lab to illustrate the issue.&lt;/p>
&lt;p>The workflow cannot be more basic as it has only a single line of code to display the name of the &lt;em>vcloud:organization&lt;/em> object provided on the input.&lt;/p>
&lt;figure>&lt;img src="https://vuptime.io/images/vro-vcd-object-notfound/start_workflow_to_get_org_name.png"/>&lt;figcaption>
&lt;h4>Display organization&lt;/h4>
&lt;/figcaption>
&lt;/figure>
&lt;figure>&lt;img src="https://vuptime.io/images/vro-vcd-object-notfound/result_workflow_to_get_org_name.png"/>&lt;figcaption>
&lt;h4>Display organization name&lt;/h4>
&lt;/figcaption>
&lt;/figure>
&lt;p>This simple workflow cannot display the organization name even if I respected the documentation. The attribut &lt;em>name&lt;/em> should be present on a object of type : &lt;em>vcloud:organization&lt;/em>&lt;/p>
&lt;figure>&lt;img src="https://vuptime.io/images/vro-vcd-object-notfound/api_doc_vcloud_organization.png"/>&lt;figcaption>
&lt;h4>vcloud:organization-doc&lt;/h4>
&lt;/figcaption>
&lt;/figure>
&lt;p>So I tryied to display the object &lt;em>vcloud:organization&lt;/em> to be sure that the object is correctly fetched.&lt;/p>
&lt;figure>&lt;img src="https://vuptime.io/images/vro-vcd-object-notfound/result_workflow_to_get_org.png"/>&lt;figcaption>
&lt;h4>Display organization&lt;/h4>
&lt;/figcaption>
&lt;/figure>
&lt;p>vRO was not even able to display the &lt;em>vcloud:organization&lt;/em> object itself and I was facing the same kind of issue for the organization-vdcs and the virtual machines objects. That's weird. Espacially when the vcloud inventory seems to work.&lt;/p>
&lt;figure>&lt;img src="https://vuptime.io/images/vro-vcd-object-notfound/vro_inventory_vcd.png"/>&lt;figcaption>
&lt;h4>Display organization&lt;/h4>
&lt;/figcaption>
&lt;/figure>
&lt;p>I struggled to fix to issue, I registered the vcloud director connector, change the API versions, reinstall the vcloud director plugin, change to version of the plugin, nothing works.&lt;/p>
&lt;p>I checked the vcloud director configuration and I found on the &lt;em>public addresses&lt;/em> tab that the &lt;em>HTTP base URL&lt;/em> attribut was different than the &lt;em>HTTP Rest API base URL&lt;/em>. It was prefixed by &lt;em>api-&lt;/em>.&lt;/p>
&lt;figure>&lt;img src="https://vuptime.io/images/vro-vcd-object-notfound/vcloud_director_public_addresses.png"/>&lt;figcaption>
&lt;h4>public_addresses&lt;/h4>
&lt;/figcaption>
&lt;/figure>
&lt;p>Remember that the &lt;em>HTTP Rest API base URL&lt;/em> are used to change the base URL on the REST API (obvious) and can be different that the &lt;em>HTTP base UR&lt;/em>L:&lt;/p>
&lt;figure>&lt;img src="https://vuptime.io/images/vro-vcd-object-notfound/vcd_api_results.png"/>&lt;figcaption>
&lt;h4>public_addresses&lt;/h4>
&lt;/figcaption>
&lt;/figure>
&lt;p>I registered the vcloud director on vRO using the &lt;em>HTTP base URL&lt;/em> but not with the API one.&lt;/p>
&lt;p>So I reconfigured the connector, try again the workflow and magic happens. I'm now able to fetch the organization and display it's name :&lt;/p>
&lt;figure>&lt;img src="https://vuptime.io/images/vro-vcd-object-notfound/result_workflow_to_get_org_successful.png"/>&lt;figcaption>
&lt;h4>Display organization&lt;/h4>
&lt;/figcaption>
&lt;/figure>
&lt;figure>&lt;img src="https://vuptime.io/images/vro-vcd-object-notfound/result_workflow_to_get_org_name_successful.png"/>&lt;figcaption>
&lt;h4>Display organization name&lt;/h4>
&lt;/figcaption>
&lt;/figure>
&lt;p>vRO was probably trying to get the organization by building it's href (&lt;em>&lt;a href="https://vcd.lab65.local/org.ea1bc7eb-d39c-48b5-acd2-2c3a78990567">https://vcd.lab65.local/org.ea1bc7eb-d39c-48b5-acd2-2c3a78990567&lt;/a>&lt;/em>) using the connector URL but was not able to get it as it was registered on the inventory with the API base URL (&lt;em>&lt;a href="https://api-vcd.lab65.local/org.ea1bc7eb-d39c-48b5-acd2-2c3a78990567">https://api-vcd.lab65.local/org.ea1bc7eb-d39c-48b5-acd2-2c3a78990567&lt;/a>&lt;/em>) as displayed on the vcd plugin inventory.&lt;/p>
&lt;figure>&lt;img src="https://vuptime.io/images/vro-vcd-object-notfound/vro_inventory_vcd_api_2.png"/>&lt;figcaption>
&lt;h4>Display organization name&lt;/h4>
&lt;/figcaption>
&lt;/figure>
&lt;p>I had also to troubleshoot the same kind of issue on an another platform, even if the HTTP base URL was the same that the API one. The first letter of the API base URL was in capital letter instead of the HTTP base URL that was not. A small difference probably due a wrong copy-paste that had a huge impact on the platform.&lt;/p>
&lt;p>Hope it helps.&lt;/p></description></item><item><title>Extending VMware vCloud Director functionalities</title><link>https://vuptime.io/post/2019-05-06-extending-vcloud-director-functionalities/</link><pubDate>Mon, 06 May 2019 00:00:00 +0000</pubDate><guid>https://vuptime.io/2019/05/06/extending-vcloud-director-functionalities/</guid><description>
&lt;p>This post is the English translation of the one published on &lt;a href="https://blog.groupe-sii.com/etendre-les-capacites-du-portail-vmware-vcloud-director/">blog.groupe-sii.com&lt;/a> to present a new kind of development activities in SII Group: the extension of the &lt;em>VMware vCloud Director&lt;/em> portal.&lt;/p>
&lt;p>The post will explain the concept that enables the extension of this VMware product to add new functionalities to the native portal and to provide a consistent user experience to final customers.&lt;/p>
&lt;h2 id="introduction-to-vmware-vcloud-director">Introduction to VMware vCloud Director&lt;/h2>
&lt;p>VMware vCloud Director is a quite common reference in virtualized infrastructures, especially for &lt;em>Service Providers&lt;/em> (for mutualized cloud hosting) or major companies with sizable infrastructure.&lt;/p>
&lt;p>Its concept is based on a simplified view, targeting VM users, to consume IaaS (&lt;em>Infrastructure-as-a-Service&lt;/em>) resources with tenant or service-based restrictions.&lt;/p>
&lt;p>Natively, vCloud Director (vCD) interface is an overlay of other VMware's product as vCenter/vSphere, et NSX-V (for &lt;em>Software-Defined Networking&lt;/em>) and its features are limited to the consumption of VM, storage and network resources (both &lt;em>L2&lt;/em> &amp;amp; &lt;em>L3&lt;/em>).&lt;/p>
&lt;h2 id="vmware-vcloud-director-extensions">VMware vCloud Director extensions&lt;/h2>
&lt;p>Since the 9.1 version (&lt;a href="https://docs.vmware.com/en/vCloud-Director/9.1/rn/rel_notes_vcloud_director_91.html">2018, march&lt;/a>), vCloud Director cames with an extensibility feature. This allows to the platform administrator to extend the features perimeter.&lt;/p>
&lt;p>Indeed, through a dedicated development, it is possible to create the technical context to execute the automation linked to new features to add to the vCD portal (UI, API, backend, third party interconnect...).&lt;/p>
&lt;blockquote>
&lt;p>&lt;strong>Example&lt;/strong> : Provide to end-users a &lt;a href="https://github.com/vmware/vcd-ext-sdk/tree/master/ui/samples/ticketing">support-ticketing-interface integrated to the vCD portal&lt;/a>.&lt;/p>
&lt;/blockquote>
&lt;p>The publication perimeter for a custom extension can be set according to the plateform needs and the extension. So it is possible to publish it for:&lt;/p>
&lt;ul>
&lt;li>Platform system administrators&lt;/li>
&lt;li>Customer's organizations with, at choice:
&lt;ul>
&lt;li>All organizations at the same time&lt;/li>
&lt;li>Only some selected organizations&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;figure>&lt;img src="https://vuptime.io/images/lumext-for-vcd/vcd_extensionpublish.png"/>&lt;figcaption>
&lt;h4>Example of the choice for extension&amp;#39;s publication&lt;/h4>
&lt;/figcaption>
&lt;/figure>
&lt;h3 id="extend-vcds-ui">Extend vCD's UI&lt;/h3>
&lt;p>Probably the most obvious benefit of the extensibility feature of vCloud Director is the capacity to integrate in a single user interface (&lt;em>UI&lt;/em>), new sections to give access to added features.&lt;/p>
&lt;p>This includes the addition of a customized item in the main navigation menu:&lt;/p>
&lt;figure>&lt;img src="https://vuptime.io/images/lumext-for-vcd/vcd_extensionmenu.png"/>&lt;figcaption>
&lt;h4>Example of navigation menu extension&lt;/h4>
&lt;/figcaption>
&lt;/figure>
&lt;p>It also includes the ability to add custom pages to display the content of extension(s). As those pages are loaded inside the vCD UI, it is recommended to reuse style and components of the native interface to offer an unified user experience (&lt;em>UX&lt;/em>).&lt;/p>
&lt;p>As vCD uses the open-source &lt;a href="https://clarity.design/">Clarity&lt;/a> framework, mainly developed by VMware, for the HTML5 interface, it is possible to reuse its components (&lt;strong>Angular&lt;/strong>), styles and best practices.&lt;/p>
&lt;h3 id="extend-vcds-api">Extend vCD's API&lt;/h3>
&lt;p>A second possibility offer by the extensibility kit of vCloud Director is to extend the perimeter of URI allowed in the vCloud API. With this API extension, it is now possible to use a standard vCloud API path (&lt;code>https://&amp;lt;vcloudserver&amp;gt;/api/&lt;/code>) to request information and actions for an extension.&lt;/p>
&lt;p>Let's take an example:&lt;/p>
&lt;blockquote>
&lt;p>Our &lt;code>coffee&lt;/code> extension aims to provide a feature to create &lt;em>coffee machine&lt;/em> order through vCD portal.&lt;/p>
&lt;p>Requests sent to vCloud API at this path : &lt;code>https://&amp;lt;vcloudserver&amp;gt;/api/coffee/order&lt;/code> and for instance, a &lt;code>POST&lt;/code> request type (and its appropriate parameters) will start a new order to the coffee machine. A &lt;code>GET&lt;/code> request will list the previous commands etc.&lt;/p>
&lt;/blockquote>
&lt;p>To handle the extension related customized requests, a backend server is necessary. This server can be hosted on a dedicated host (or the vCD server (&lt;em>cell&lt;/em>) but not recommended) and can be written in any language of your choice (Python, Java, Node etc.). Messages received by vCD on the extension path (&lt;code>coffee&lt;/code>) will be forwarded to an intermediate RabbitMQ server to be consumed by the extension backend. Once the request content is processed, response content is sent to the AMQP server and consumed by vCD to provide an answer.&lt;/p>
&lt;p>For our example:&lt;/p>
&lt;figure>&lt;img src="https://vuptime.io/images/lumext-for-vcd/architecture_overview.png"/>&lt;figcaption>
&lt;h4>Used paths for requests on Coffee extension&lt;/h4>
&lt;/figcaption>
&lt;/figure>
&lt;ol>
&lt;li>The user initiates a request (through the UI or directly through the exposed API extension).&lt;/li>
&lt;li>vCD compiles this request to an AMQP message with an extension-specific routing key fro the RabbitMQ server.&lt;/li>
&lt;li>The Extension's backend server can consume the message, make appropriate pre-checks (rights management, pre-requisites, open external connections etc.)&lt;/li>
&lt;li>One or many API requests are sent to the &lt;em>coffee machine&lt;/em> to create the order.&lt;/li>
&lt;li>The &lt;em>Coffee machine&lt;/em> answers with appropriate data: Ex: &lt;em>&amp;quot;Order preparation in progress&amp;quot;&lt;/em> or the list of previous orders.&lt;/li>
&lt;li>Extension's backend server process the data from the &lt;em>Coffee machine&lt;/em> (formatting, selection of items etc.) and is able to sent back the answer to initial vCD message through a dedicated queue (known from &lt;code>reply-to&lt;/code> field in initial AMQP message).&lt;/li>
&lt;li>vCD can now consume the answer from RabbitMQ and use the content as a response from the API call initiated by the user.&lt;/li>
&lt;/ol>
&lt;h3 id="extensibility-kit-of-vcloud-director">Extensibility kit of vCloud Director&lt;/h3>
&lt;p>To help the development of vCD's extensions, VMware provides a &lt;em>SDK&lt;/em> that contains:&lt;/p>
&lt;ul>
&lt;li>Minimal code for a UI extension (&lt;a href="https://github.com/vmware/vcd-ext-sdk/tree/master/ui/vcd-plugin-seed">&lt;em>vcd-plugin-seed&lt;/em>&lt;/a>).&lt;/li>
&lt;li>Some simple &lt;a href="https://github.com/vmware/vcd-ext-sdk/tree/master/ui/samples">extensions samples&lt;/a>:
&lt;ul>
&lt;li>&lt;em>About page&lt;/em>: no API&lt;/li>
&lt;li>&lt;em>Ticketing&lt;/em>: Extension to create and display support tickets with a non-persistent API in Python.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h2 id="practical-implementation-from-sii-group-lumext">Practical implementation from SII Group: LUMExt&lt;/h2>
&lt;p>As the &lt;em>coffee machine&lt;/em> is purely fictitious (even if it could be very useful ☺️), but the need for extensions in vCloud Director is not lacking.&lt;/p>
&lt;p>At SII Group, we had chosen to develop an interface to manage LDAP based users trough the vCloud Director portal.&lt;/p>
&lt;h3 id="présentation">Présentation&lt;/h3>
&lt;p>Natively, vCloud Director supports the authentication from both local and LDAP based users. Sadly, for LDAP based users, it is not possible to edit user's information or to create new one from vCD. Only attachment to an organization is possible.&lt;/p>
&lt;p>If you are a &lt;em>Service Provider&lt;/em> hosting customers that do not want to manage their own LDAP server to create users for vCD access, but aim to use a single source of authentication for multiple usages (vCD, VM's OS etc.): a mutualized LDAP server can be a useful service.&lt;/p>
&lt;p>&lt;strong>LUMExt&lt;/strong> (&lt;strong>L&lt;/strong>DAP &lt;strong>U&lt;/strong>ser &lt;strong>M&lt;/strong>anagement &lt;strong>Ext&lt;/strong>ension for vCloud Director) aims to provide a vCD-integrated management of LDAP-based users.&lt;/p>
&lt;p>Once a user is created in the LDAP server, it is possible to associate it with an organization and a role to allow its connection to the vCD portal.&lt;/p>
&lt;h3 id="api">API&lt;/h3>
&lt;p>This extension API is based on a Python script &lt;code>lumext&lt;/code> that initiates a new applicative &lt;em>thread&lt;/em> for each request from the AMQP queue. In the benefits of using per-request Python &lt;em>thread&lt;/em>, we can mention:&lt;/p>
&lt;ul>
&lt;li>Processing of multiples requests at the same time&lt;/li>
&lt;li>The process of a request does not affect the process of other request (current or future ones), even in case of error.&lt;/li>
&lt;/ul>
&lt;p>To consume and publish (&lt;em>consumer/publisher&lt;/em> roles) messages with AMQP protocol, we use the &lt;a href="https://pypi.org/project/kombu/">&lt;code>Kombu&lt;/code>&lt;/a> Python package as it turns out to be very reliable and to provide easy support for &lt;em>thread&lt;/em> usage.&lt;/p>
&lt;blockquote>
&lt;p>&lt;strong>Note :&lt;/strong> VMware's examples use the &lt;a href="https://pypi.org/project/pika/">&lt;code>Pika&lt;/code>&lt;/a> module for the same kind of usage.&lt;/p>
&lt;/blockquote>
&lt;p>We also have developed a &lt;em>MessageWorker&lt;/em> named &lt;a href="https://pypi.org/project/VcdExtMessageWorker/">&lt;code>VcdExtMessageWorker&lt;/code>&lt;/a> to start business-related threads. These extension-&lt;em>threads&lt;/em> represent the potential complexity of the feature to add to vCD (applicative workflow, data analysis, third party requests, etc.). &lt;em>MessageWorker&lt;/em> is generic and can be attached to other kind of extension-threads for other kind of purposes.&lt;/p>
&lt;p>In the case of &lt;strong>LUMExt&lt;/strong>, &lt;code>VcdExtMessageWorker&lt;/code> initiates a new thread of &lt;em>lumext worker&lt;/em> for each request. This one is in charge of the request-analysis (is it a listing request or a user-creation one, user-edition ?). Once the request is processed, the answer is published to the &lt;code>reply-to&lt;/code> queue of the RabbitMQ server and consumed by vCD.&lt;/p>
&lt;p>REST API extension provides the following paths to the users:&lt;/p>
&lt;ul>
&lt;li>&lt;code>/api&lt;/code> : root of vCD APIs (native)
&lt;ul>
&lt;li>&lt;code>/api/{org_id}&lt;/code> : root of an organization (native)
&lt;ul>
&lt;li>&lt;code>/api/{org_id}/lumext&lt;/code> : root of the extension (lumext)
&lt;ul>
&lt;li>&lt;code>/api/{org_id}/lumext/user&lt;/code> : (lumext)
&lt;ul>
&lt;li>&lt;code>GET&lt;/code> : list users&lt;/li>
&lt;li>&lt;code>POST&lt;/code> : create user&lt;/li>
&lt;li>&lt;code>/api/{org_id}/lumext/user/{login}&lt;/code> : (lumext)
&lt;ul>
&lt;li>&lt;code>DELETE&lt;/code> : delete current user&lt;/li>
&lt;li>&lt;code>PUT&lt;/code> : edit current user&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>Same API is available for both organization's administrators to setup automation tools (to create users, for example) and for the UI that fully relies on this API to access data.&lt;/p>
&lt;p>Finally, the usage of AMQP protocol, &lt;em>stateless threads&lt;/em> and our &lt;em>MessageWorker&lt;/em> based on Kombu allows to horizontally scale our extension backend to multiple nodes if necessary (to ensure high availability or load balancing).&lt;/p>
&lt;h3 id="ui">UI&lt;/h3>
&lt;p>The &lt;strong>LUMExt&lt;/strong> user interface is fully integrated to the vCD portal and is based on the same UI components (&lt;em>Angular&lt;/em>) and the same graphic charter (based on open-source &lt;a href="https://clarity.design/">Clarity&lt;/a> framework from VMware).&lt;/p>
&lt;p>The main navigation menu is supplemented with a new link to access to the &lt;strong>LUMExt&lt;/strong> pages.&lt;/p>
&lt;figure>&lt;img src="https://vuptime.io/images/lumext-for-vcd/preview_menu.png"/>&lt;figcaption>
&lt;h4>Main navigation menu&lt;/h4>
&lt;/figcaption>
&lt;/figure>
&lt;p>By default, LDAP based users list is displayed:&lt;/p>
&lt;figure>&lt;img src="https://vuptime.io/images/lumext-for-vcd/preview_userlisting.png"/>&lt;figcaption>
&lt;h4>LUMExt, users list&lt;/h4>
&lt;/figcaption>
&lt;/figure>
&lt;p>In the following screenshot, it is interesting to notice that only the middle part is developed for the extension. Navigation menu on top and tasks list on the bottom are vCD natives (and cannot be modified).&lt;/p>
&lt;figure>&lt;img src="https://vuptime.io/images/lumext-for-vcd/preview_userlisting_zoning_en.png"/>&lt;figcaption>
&lt;h4>LUMExt, users list - Zoning&lt;/h4>
&lt;/figcaption>
&lt;/figure>
&lt;p>To create a new user, some form fields are requested:&lt;/p>
&lt;ul>
&lt;li>Login&lt;/li>
&lt;li>Name&lt;/li>
&lt;li>Password (customized or client-side generated with minimal security requirements)&lt;/li>
&lt;li>Password confirmation&lt;/li>
&lt;li>Description (optional)&lt;/li>
&lt;/ul>
&lt;p>The data are sent to the backend and store in the LDAP server in appropriate directory fields.&lt;/p>
&lt;figure>&lt;img src="https://vuptime.io/images/lumext-for-vcd/preview_usercreation.png"/>&lt;figcaption>
&lt;h4>LUMExt, user creation&lt;/h4>
&lt;/figcaption>
&lt;/figure>
&lt;p>&lt;strong>LUMExt&lt;/strong> UI also provides user edition and user deletion and a specific wizard for password reset operation.&lt;/p>
&lt;blockquote>
&lt;p>&lt;strong>Note :&lt;/strong> LDAP based groups support is intended but not yet developed.&lt;/p>
&lt;/blockquote>
&lt;h2 id="conclusion">Conclusion&lt;/h2>
&lt;p>&lt;strong>LUMExt&lt;/strong> is an internal SII project that we &amp;quot;opensource&amp;quot; (MIT license) on &lt;a href="https://github.com/groupe-sii/lumext">github&lt;/a> to demonstrate the extensibility abilities of vCloud Director with a technical and complete use-case.&lt;/p>
&lt;p>Since about 6 months, our teams have working on these kind of &lt;em>plugins&lt;/em> development for our customers to extend the available features of the vCD portal with tools for their customers (as &lt;em>&amp;quot;Service Provider&amp;quot;&lt;/em>).&lt;/p>
&lt;p>It is also a great example of the combined work of developers and infrastrucure engineering in our teams, when, in computer science history, both jobs are more and more linked together.&lt;/p>
&lt;p>Illustration credits go to:&lt;/p>
&lt;ul>
&lt;li>Applications-ristretto.svg - &lt;a href="https://commons.wikimedia.org/wiki/File:Applications-ristretto.svg">Sebastian Kraft - GPL&lt;/a>&lt;/li>
&lt;li>RRZE-icon-set - &lt;a href="https://github.com/RRZE-PP/rrze-icon-set/">Regional Computing Centre of Erlangen (RRZE) - CC-by-sa/3.0&lt;/a>&lt;/li>
&lt;li>Screenshots from LUMExt are SII group own work&lt;/li>
&lt;/ul></description></item><item><title>VMware vCloud Director – Change SSL certificates</title><link>https://vuptime.io/post/2018-07-24-vmware-vcloud-director-change-ssl-certificates/</link><pubDate>Tue, 24 Jul 2018 00:00:00 +0000</pubDate><guid>https://vuptime.io/2018/07/24/vmware-vcloud-director-change-ssl-certificates/</guid><description>
&lt;p>The following procedure is a self-reminder of How-To replace the certificates of a VMware &lt;strong>vCloud Director&lt;/strong> deployment.&lt;/p>
&lt;h1 id="prepare-informations">Prepare informations&lt;/h1>
&lt;p>Here is a configuration sample for a single cell deployment. Change settings according to your needs:&lt;/p>
&lt;blockquote>
&lt;p>If you are using multi-cells deployment, I stronlgy recommend you to extend informations in the &lt;code>-ext &amp;quot;san=dns:...&amp;quot;&lt;/code> parameter of the certificate creation to include each cell DNS and IP and the VIP FQDN at least.&lt;/p>
&lt;/blockquote>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="ln"> 1&lt;/span>&lt;span class="cl">&lt;span class="nv">DOMAIN&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;lri.lcl&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 2&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 3&lt;/span>&lt;span class="cl">&lt;span class="c1"># API and HTTP host info&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 4&lt;/span>&lt;span class="cl">&lt;span class="nv">HTTP_HOSTNAME&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;vuptime-vcd&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 5&lt;/span>&lt;span class="cl">&lt;span class="nv">HTTP_IP&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;10.10.110.3&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 6&lt;/span>&lt;span class="cl">&lt;span class="nv">HTTP_FQDN&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="nv">$HTTP_HOSTNAME&lt;/span>&lt;span class="s2">.&lt;/span>&lt;span class="nv">$DOMAIN&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 7&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 8&lt;/span>&lt;span class="cl">&lt;span class="c1"># Console proxy host info&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 9&lt;/span>&lt;span class="cl">&lt;span class="nv">CONSOLE_PROXY_HOSTNAME&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;vuptime-vcd-vmrc&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">10&lt;/span>&lt;span class="cl">&lt;span class="nv">CONSOLE_PROXY_IP&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;10.10.110.4&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">11&lt;/span>&lt;span class="cl">&lt;span class="nv">CONSOLE_PROXY_FQDN&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="nv">$CONSOLE_PROXY_HOSTNAME&lt;/span>&lt;span class="s2">.&lt;/span>&lt;span class="nv">$DOMAIN&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">12&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">13&lt;/span>&lt;span class="cl">&lt;span class="c1"># Others certificates information&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">14&lt;/span>&lt;span class="cl">&lt;span class="nv">VALIDITY&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="m">365&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">15&lt;/span>&lt;span class="cl">&lt;span class="nv">CERT_DNAME_INFO&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;OU=vUptime-IO, O=Example Corp, L=Rennes, S=Britain, C=FR&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">16&lt;/span>&lt;span class="cl">&lt;span class="nv">CA_CERT_PATH&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;/tmp/ca-root.cert&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">17&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">18&lt;/span>&lt;span class="cl">&lt;span class="c1"># Keytool informations&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">19&lt;/span>&lt;span class="cl">&lt;span class="nv">KEYTOOL_BIN&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="nv">$VCLOUD_JAVA_HOME&lt;/span>&lt;span class="s2">/bin/keytool&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">20&lt;/span>&lt;span class="cl">&lt;span class="nv">KS_PATH&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="nv">$VCLOUD_HOME&lt;/span>&lt;span class="s2">/data/transfer/certificates.ks&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">21&lt;/span>&lt;span class="cl">&lt;span class="nv">KS_PASSWORD&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;VMware1!&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="create-unsigned-certificates">Create unsigned certificates&lt;/h1>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="ln"> 1&lt;/span>&lt;span class="cl">&lt;span class="nv">$KEYTOOL_BIN&lt;/span> &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 2&lt;/span>&lt;span class="cl">&lt;span class="se">&lt;/span> -keystore &lt;span class="nv">$KS_PATH&lt;/span> &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 3&lt;/span>&lt;span class="cl">&lt;span class="se">&lt;/span> -alias http &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 4&lt;/span>&lt;span class="cl">&lt;span class="se">&lt;/span> -storepass &lt;span class="nv">$KS_PASSWORD&lt;/span> &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 5&lt;/span>&lt;span class="cl">&lt;span class="se">&lt;/span> -keypass &lt;span class="nv">$KS_PASSWORD&lt;/span> &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 6&lt;/span>&lt;span class="cl">&lt;span class="se">&lt;/span> -storetype JCEKS &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 7&lt;/span>&lt;span class="cl">&lt;span class="se">&lt;/span> -genkeypair &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 8&lt;/span>&lt;span class="cl">&lt;span class="se">&lt;/span> -keyalg RSA &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 9&lt;/span>&lt;span class="cl">&lt;span class="se">&lt;/span> -keysize &lt;span class="m">2048&lt;/span> &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">10&lt;/span>&lt;span class="cl">&lt;span class="se">&lt;/span> -validity &lt;span class="nv">$VALIDITY&lt;/span> &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">11&lt;/span>&lt;span class="cl">&lt;span class="se">&lt;/span> -dname &lt;span class="s2">&amp;#34;CN=&lt;/span>&lt;span class="nv">$HTTP_FQDN&lt;/span>&lt;span class="s2">, &lt;/span>&lt;span class="nv">$CERT_DNAME_INFO&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span> &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">12&lt;/span>&lt;span class="cl">&lt;span class="se">&lt;/span> -ext &lt;span class="s2">&amp;#34;san=dns:&lt;/span>&lt;span class="nv">$HTTP_FQDN&lt;/span>&lt;span class="s2">,dns:&lt;/span>&lt;span class="nv">$HTTP_HOSTNAME&lt;/span>&lt;span class="s2">,ip:&lt;/span>&lt;span class="nv">$HTTP_IP&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">13&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">14&lt;/span>&lt;span class="cl">&lt;span class="nv">$KEYTOOL_BIN&lt;/span> &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">15&lt;/span>&lt;span class="cl">&lt;span class="se">&lt;/span> -keystore &lt;span class="nv">$KS_PATH&lt;/span> &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">16&lt;/span>&lt;span class="cl">&lt;span class="se">&lt;/span> -alias consoleproxy &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">17&lt;/span>&lt;span class="cl">&lt;span class="se">&lt;/span> -storepass &lt;span class="nv">$KS_PASSWORD&lt;/span> &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">18&lt;/span>&lt;span class="cl">&lt;span class="se">&lt;/span> -keypass &lt;span class="nv">$KS_PASSWORD&lt;/span> &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">19&lt;/span>&lt;span class="cl">&lt;span class="se">&lt;/span> -storetype JCEKS &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">20&lt;/span>&lt;span class="cl">&lt;span class="se">&lt;/span> -keyalg RSA &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">21&lt;/span>&lt;span class="cl">&lt;span class="se">&lt;/span> -genkeypair &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">22&lt;/span>&lt;span class="cl">&lt;span class="se">&lt;/span> -keysize &lt;span class="m">2048&lt;/span> &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">23&lt;/span>&lt;span class="cl">&lt;span class="se">&lt;/span> -validity &lt;span class="nv">$VALIDITY&lt;/span> &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">24&lt;/span>&lt;span class="cl">&lt;span class="se">&lt;/span> -dname &lt;span class="s2">&amp;#34;CN=&lt;/span>&lt;span class="nv">$CONSOLE_PROXY_FQDN&lt;/span>&lt;span class="s2">, &lt;/span>&lt;span class="nv">$CERT_DNAME_INFO&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span> &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">25&lt;/span>&lt;span class="cl">&lt;span class="se">&lt;/span> -ext &lt;span class="s2">&amp;#34;san=dns:&lt;/span>&lt;span class="nv">$CONSOLE_PROXY_FQDN&lt;/span>&lt;span class="s2">,dns:&lt;/span>&lt;span class="nv">$CONSOLE_PROXY_HOSTNAME&lt;/span>&lt;span class="s2">,ip:&lt;/span>&lt;span class="nv">$CONSOLE_PROXY_IP&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="create-certificate-requests-for-ca-signing">Create certificate requests for CA-signing&lt;/h1>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="ln"> 1&lt;/span>&lt;span class="cl">&lt;span class="nv">$KEYTOOL_BIN&lt;/span> &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 2&lt;/span>&lt;span class="cl">&lt;span class="se">&lt;/span> -keystore &lt;span class="nv">$KS_PATH&lt;/span> &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 3&lt;/span>&lt;span class="cl">&lt;span class="se">&lt;/span> -storetype JCEKS &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 4&lt;/span>&lt;span class="cl">&lt;span class="se">&lt;/span> -storepass &lt;span class="nv">$KS_PASSWORD&lt;/span> &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 5&lt;/span>&lt;span class="cl">&lt;span class="se">&lt;/span> -certreq &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 6&lt;/span>&lt;span class="cl">&lt;span class="se">&lt;/span> -alias http &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 7&lt;/span>&lt;span class="cl">&lt;span class="se">&lt;/span> -file &lt;span class="nv">$HTTP_FQDN&lt;/span>.csr &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 8&lt;/span>&lt;span class="cl">&lt;span class="se">&lt;/span> -ext &lt;span class="s2">&amp;#34;san=dns:&lt;/span>&lt;span class="nv">$HTTP_FQDN&lt;/span>&lt;span class="s2">,dns:&lt;/span>&lt;span class="nv">$HTTP_HOSTNAME&lt;/span>&lt;span class="s2">,ip:&lt;/span>&lt;span class="nv">$HTTP_IP&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 9&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">10&lt;/span>&lt;span class="cl">&lt;span class="nv">$KEYTOOL_BIN&lt;/span> &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">11&lt;/span>&lt;span class="cl">&lt;span class="se">&lt;/span> -keystore &lt;span class="nv">$KS_PATH&lt;/span> &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">12&lt;/span>&lt;span class="cl">&lt;span class="se">&lt;/span> -storetype JCEKS &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">13&lt;/span>&lt;span class="cl">&lt;span class="se">&lt;/span> -storepass &lt;span class="nv">$KS_PASSWORD&lt;/span> &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">14&lt;/span>&lt;span class="cl">&lt;span class="se">&lt;/span> -certreq &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">15&lt;/span>&lt;span class="cl">&lt;span class="se">&lt;/span> -alias consoleproxy &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">16&lt;/span>&lt;span class="cl">&lt;span class="se">&lt;/span> -file &lt;span class="nv">$CONSOLE_PROXY_FQDN&lt;/span>.csr &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">17&lt;/span>&lt;span class="cl">&lt;span class="se">&lt;/span> -ext &lt;span class="s2">&amp;#34;san=dns:&lt;/span>&lt;span class="nv">$CONSOLE_PROXY_FQDN&lt;/span>&lt;span class="s2">,dns:&lt;/span>&lt;span class="nv">$CONSOLE_PROXY_HOSTNAME&lt;/span>&lt;span class="s2">,ip:&lt;/span>&lt;span class="nv">$CONSOLE_PROXY_IP&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Send CSR files to your (internal/external) CA for signing, and copy them to cell:&lt;/p>
&lt;ul>
&lt;li>&lt;code>ca-root.crt&lt;/code>: the CA certificate&lt;/li>
&lt;li>&lt;code>vuptime-vcd.lri.lcl.crt&lt;/code>: HTTP certificate&lt;/li>
&lt;li>&lt;code>vuptime-vcd-vmrc.lri.lcl.crt&lt;/code>: ConsoleProxy certificate&lt;/li>
&lt;/ul>
&lt;h1 id="import-signed-certificates-in-the-keystore">Import signed certificates in the keystore&lt;/h1>
&lt;p>First, we import the CA certificate:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="ln">1&lt;/span>&lt;span class="cl">&lt;span class="nv">$KEYTOOL_BIN&lt;/span> &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">2&lt;/span>&lt;span class="cl">&lt;span class="se">&lt;/span> -keystore &lt;span class="nv">$KS_PATH&lt;/span> &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">3&lt;/span>&lt;span class="cl">&lt;span class="se">&lt;/span> -storetype JCEKS &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">4&lt;/span>&lt;span class="cl">&lt;span class="se">&lt;/span> -storepass &lt;span class="nv">$KS_PASSWORD&lt;/span> &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">5&lt;/span>&lt;span class="cl">&lt;span class="se">&lt;/span> -import &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">6&lt;/span>&lt;span class="cl">&lt;span class="se">&lt;/span> -alias root &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">7&lt;/span>&lt;span class="cl">&lt;span class="se">&lt;/span> -file &lt;span class="nv">$CA_CERT_PATH&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Then the 2 applications certificates:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="ln"> 1&lt;/span>&lt;span class="cl">&lt;span class="nv">$KEYTOOL_BIN&lt;/span> &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 2&lt;/span>&lt;span class="cl">&lt;span class="se">&lt;/span> -keystore &lt;span class="nv">$KS_PATH&lt;/span> &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 3&lt;/span>&lt;span class="cl">&lt;span class="se">&lt;/span> -storetype JCEKS &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 4&lt;/span>&lt;span class="cl">&lt;span class="se">&lt;/span> -storepass &lt;span class="nv">$KS_PASSWORD&lt;/span> &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 5&lt;/span>&lt;span class="cl">&lt;span class="se">&lt;/span> -import &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 6&lt;/span>&lt;span class="cl">&lt;span class="se">&lt;/span> -alias http &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 7&lt;/span>&lt;span class="cl">&lt;span class="se">&lt;/span> -file &lt;span class="nv">$HTTP_FQDN&lt;/span>.crt
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 8&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 9&lt;/span>&lt;span class="cl">&lt;span class="nv">$KEYTOOL_BIN&lt;/span> &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">10&lt;/span>&lt;span class="cl">&lt;span class="se">&lt;/span> -keystore &lt;span class="nv">$KS_PATH&lt;/span> &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">11&lt;/span>&lt;span class="cl">&lt;span class="se">&lt;/span> -storetype JCEKS &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">12&lt;/span>&lt;span class="cl">&lt;span class="se">&lt;/span> -storepass &lt;span class="nv">$KS_PASSWORD&lt;/span> &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">13&lt;/span>&lt;span class="cl">&lt;span class="se">&lt;/span> -import &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">14&lt;/span>&lt;span class="cl">&lt;span class="se">&lt;/span> -alias consoleproxy &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">15&lt;/span>&lt;span class="cl">&lt;span class="se">&lt;/span> -file &lt;span class="nv">$CONSOLE_PROXY_FQDN&lt;/span>.crt
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="ln">1&lt;/span>&lt;span class="cl">&lt;span class="nv">$KEYTOOL_BIN&lt;/span> &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">2&lt;/span>&lt;span class="cl">&lt;span class="se">&lt;/span> -storetype JCEKS &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">3&lt;/span>&lt;span class="cl">&lt;span class="se">&lt;/span> -storepass &lt;span class="nv">$KS_PASSWORD&lt;/span> &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">4&lt;/span>&lt;span class="cl">&lt;span class="se">&lt;/span> -keystore &lt;span class="nv">$KS_PATH&lt;/span> &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">5&lt;/span>&lt;span class="cl">&lt;span class="se">&lt;/span> -list
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="apply-certificates-to-the-services">Apply certificates to the services&lt;/h1>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="ln">1&lt;/span>&lt;span class="cl">chown vcloud: &lt;span class="nv">$KS_PATH&lt;/span> &lt;span class="c1"># Set owner of the keystore to vcloud user&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">2&lt;/span>&lt;span class="cl">&lt;span class="nv">$VCLOUD_HOME&lt;/span>/bin/cell-management-tool certificates -j -k &lt;span class="nv">$KS_PATH&lt;/span> -w &lt;span class="nv">$KS_PASSWORD&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">3&lt;/span>&lt;span class="cl">service vmware-vcd restart
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item></channel></rss>