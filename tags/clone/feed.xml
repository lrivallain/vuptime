<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>clone on vUptime.io - Cloud builder(s)</title><link>https://vuptime.io/tags/clone/</link><description>Recent content in clone on vUptime.io - Cloud builder(s)</description><generator>Hugo -- gohugo.io</generator><copyright>Ludovic Rivallain and blog co-authors</copyright><lastBuildDate>Thu, 26 Feb 2015 00:00:00 +0000</lastBuildDate><atom:link href="https://vuptime.io/tags/clone/feed.xml" rel="self" type="application/rss+xml"/><item><title>Play with VM snapshots and linked-clones with ESXi command line tools</title><link>https://vuptime.io/post/2015-02-26-play-vm-snapshots-esxi-command-line-tools/</link><pubDate>Thu, 26 Feb 2015 00:00:00 +0000</pubDate><guid>https://vuptime.io/2015/02/26/play-vm-snapshots-esxi-command-line-tools/</guid><description>
&lt;p>In this article, we will see how to create, commit, revert-to virtual machine snapshots from ESXi command line. We will also talk about the very useful &amp;quot;linked clones&amp;quot; that are related to the snapshot feature.&lt;/p>
&lt;h1 id="prerequisites">Prerequisites&lt;/h1>
&lt;p>You only need to have a running VM on the ESXi and to know its Vmid:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="ln">1&lt;/span> $ vim-cmd vmsvc/getallvms
&lt;span class="ln">2&lt;/span> Vmid Name File Guest OS Version Annotation
&lt;span class="ln">3&lt;/span> &lt;span class="m">3&lt;/span> CentosTest &lt;span class="o">[&lt;/span>LocalDatastore_001&lt;span class="o">]&lt;/span> CentosTest/CentosTest.vmx otherLinuxGuest vmx-10&lt;/code>&lt;/pre>&lt;/div>
&lt;h1 id="snapshots">Snapshots&lt;/h1>
&lt;p>Here is the VMware definition of VM snapshot feature (&lt;a href="https://www.vmware.com/support/ws4/doc/preserve_snapshot_ws.html" title="Snapshot definition">source&lt;/a>):&lt;/p>
&lt;blockquote>
&lt;p>The snapshot feature is most useful when you want to preserve the state of the virtual machine so you can return to the same state repeatedly.&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;p>You can take a snapshot of a virtual machine at any time and revert to that snapshot at any time.&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;p>You can take a snapshot while a virtual machine is powered on, powered off or suspended. A snapshot preserves the virtual machine just as it was when you took the snapshot - the state of the data on all the virtual machine's disks and whether the virtual machine was powered on, powered off or suspended.&lt;/p>
&lt;/blockquote>
&lt;h2 id="create-snapshots">Create snapshots&lt;/h2>
&lt;p>To create a snapshot, you can use the 'vim-cmd' command:&lt;/p>
&lt;pre>&lt;code>$ vim-cmd vmsvc/snapshot.create 3 snap01 'snap01 description'
&lt;/code>&lt;/pre>
&lt;p>Command usage is:&lt;/p>
&lt;blockquote>
&lt;p>Usage: snapshot.create vmid [snapshotName] [snapshotDescription] [includeMemory] [quiesced]&lt;/p>
&lt;/blockquote>
&lt;p>So you can make a snapshot with VM memory and quiesced:&lt;/p>
&lt;pre>&lt;code>vim-cmd vmsvc/snapshot.create 3 &amp;quot;SnapName&amp;quot; &amp;quot;Snap Description&amp;quot; 1 1
&lt;/code>&lt;/pre>
&lt;h2 id="get-snapshots-list">Get snapshot(s) list&lt;/h2>
&lt;p>You may need to get the list of VM snapshots:&lt;/p>
&lt;pre>&lt;code>$ vim-cmd vmsvc/snapshot.get 3
Get Snapshot:
|-ROOT
--Snapshot Name : snap01
--Snapshot Id : 1
--Snapshot Desciption : snap01 description
--Snapshot Created On : 2/23/2015 18:12:50
--Snapshot State : powered on
--|-CHILD
----Snapshot Name : snap02
----Snapshot Id : 2
----Snapshot Desciption : snap02 description
----Snapshot Created On : 2/23/2015 18:13:15
----Snapshot State : powered off
----|-CHILD
------Snapshot Name : snap03
------Snapshot Id : 3
------Snapshot Desciption : snap03 description
------Snapshot Created On : 2/23/2015 18:13:32
------Snapshot State : powered off
------|-CHILD
--------Snapshot Name : snap04
--------Snapshot Id : 4
--------Snapshot Desciption : snap04 description
--------Snapshot Created On : 2/23/2015 18:13:59
--------Snapshot State : powered off
&lt;/code>&lt;/pre>
&lt;p>The list is displayed as a tree according to the parents or children of a snapshot.&lt;/p>
&lt;h2 id="removecommit-a-snapshot">Remove/Commit a snapshot&lt;/h2>
&lt;p>As you can create and list snapshot(s) for a VM, you can remove them. Deletion operation is also called the &amp;quot;commit&amp;quot; as all recent changes made from the moment the snapshot is taken, are committed to the based disk or the parent snapshot disk file.&lt;/p>
&lt;p>To remove or commit a snapshot for a VM:&lt;/p>
&lt;blockquote>
&lt;p>Usage: snapshot.remove vmid snapId&lt;/p>
&lt;/blockquote>
&lt;pre>&lt;code>$ vim-cmd vmsvc/snapshot.remove 3 4
Remove Snapshot:
|-ROOT
--Snapshot Name : snap01
--Snapshot Id : 1
--Snapshot Desciption : snap01 description
--Snapshot Created On : 2/23/2015 18:12:50
--Snapshot State : powered off
--|-CHILD
----Snapshot Name : snap02
----Snapshot Id : 2
----Snapshot Desciption : snap02 description
----Snapshot Created On : 2/23/2015 18:13:15
----Snapshot State : powered off
----|-CHILD
------Snapshot Name : snap03
------Snapshot Id : 3
------Snapshot Desciption : snap03 description
------Snapshot Created On : 2/23/2015 18:13:32
------Snapshot State : powered off
&lt;/code>&lt;/pre>
&lt;p>There is also a &lt;code>snapshot.removeall&lt;/code> argument to remove... all snapshots on a VM. \o/&lt;/p>
&lt;h2 id="revert-to-a-snapshot">Revert to a snapshot&lt;/h2>
&lt;p>Goal of VM snapshot is not to only create, list or remove snapshots... It's to be able to revert the VM state to the moment you take the snapshot. To do so, you can use the &lt;code>snapshot.revert&lt;/code> argument.&lt;/p>
&lt;blockquote>
&lt;p>Usage: snapshot.revert vmid snapshotId suppressPowerOff&lt;/p>
&lt;/blockquote>
&lt;p>So to revert to the first snapshot of the VM with Vmid 3:&lt;/p>
&lt;pre>&lt;code>$ vim-cmd vmsvc/snapshot.revert 3 1 0
Revert Snapshot:
|-ROOT
--Snapshot Name : snap01
--Snapshot Id : 1
--Snapshot Desciption : snap01 description
--Snapshot Created On : 2/23/2015 18:12:50
--Snapshot State : powered on
...
&lt;/code>&lt;/pre>
&lt;p>This will restore VM, powered-on (!), at the state where you take the first snapshot. Last option is to revert to snapshot with or without memory content:&lt;/p>
&lt;pre>&lt;code>suppressPowerOff = 0
|-&amp;gt; With RAM content
|-&amp;gt; Virtual machine is restored with power-on state
suppressPowerOff = 1
|-&amp;gt; Without RAM content
|-&amp;gt; Virtual machine is restored with power-off state
&lt;/code>&lt;/pre>
&lt;h1 id="linked-clone">Linked clone&lt;/h1>
&lt;p>Linked-clone definition (&lt;a href="https://pubs.vmware.com/workstation-9/index.jsp?topic=%2Fcom.vmware.ws.using.doc%2FGUID-BA264A65-C50F-4345-A787-DCC5C5324DD1.html" title="Linked clone definition">source&lt;/a>):&lt;/p>
&lt;blockquote>
&lt;p>A linked clone is a copy of a virtual machine that shares virtual disks with the parent virtual machine in an ongoing manner.&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;p>Because a linked clone is made from a snapshot of the parent, disk space is conserved and multiple virtual machines can use the same software installation. All files available on the parent at the moment you take the snapshot continue to remain available to the linked clone.&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;p>Ongoing changes to the virtual disk of the parent do not affect the linked clone, and changes to the disk of the linked clone do not affect the parent. A linked clone must have access to the parent. Without access to the parent, you cannot use a linked clone.&lt;/p>
&lt;/blockquote>
&lt;h2 id="create-a-linked-clone">Create a linked clone&lt;/h2>
&lt;p>Create a reference snapshot on a source VM. This will be our base for clones.&lt;/p>
&lt;pre>&lt;code>$ vim-cmd vmsvc/snapshot.create 3 &amp;quot;ReferenceSnapshot&amp;quot; &amp;quot;Used for linked clones of Centos VM&amp;quot;
Create Snapshot:
$ vim-cmd vmsvc/snapshot.get 3
Get Snapshot:
|-ROOT
--Snapshot Name : ReferenceSnapshot
--Snapshot Id : 7
--Snapshot Desciption : Used for linked clones of Centos VM
--Snapshot Created On : 2/24/2015 21:22:25
--Snapshot State : powered off
&lt;/code>&lt;/pre>
&lt;p>To have more understandable command lines, we set in variable the reference and destination path:&lt;/p>
&lt;pre>&lt;code>src=&amp;quot;/vmfs/volumes/LocalDatastore_001/CentosTest&amp;quot;
dst=&amp;quot;/vmfs/volumes/LocalDatastore_001/LinkedClone1&amp;quot;
&lt;/code>&lt;/pre>
&lt;p>First step for a linked clone from command line, is to create a destination folder :&lt;/p>
&lt;pre>&lt;code>mkdir $dst
&lt;/code>&lt;/pre>
&lt;p>Then we copy reference VM's &lt;code>.vmx&lt;/code> file and the &lt;code>.vmdk&lt;/code> (including the &lt;code>-delta&lt;/code> file) corresponding to our reference snapshot:&lt;/p>
&lt;pre>&lt;code>$ cat $src/CentosTest.vmx | grep fileName
ide1:0.fileName = &amp;quot;cdrom0&amp;quot;
scsi0:0.fileName = &amp;quot;CentosTest-000001.vmdk&amp;quot; **cp $src/CentosTest-000001*.vmdk $dst/
$ cp $src/CentosTest.vmx $dst/
$ ls $dst
CentosTest-000001-delta.vmdk CentosTest-000001.vmdk CentosTest.vmx
&lt;/code>&lt;/pre>
&lt;p>Then we rename files:&lt;/p>
&lt;pre>&lt;code>$ mv $dst/*-delta.vmdk $dst/LinkedClone1-000001-delta.vmdk
mv $dst/*000001.vmdk $dst/LinkedClone1-000001.vmdk
mv $dst/*.vmx $dst/LinkedClone1.vmx
$ ls $dst
LinkedClone1-000001-delta.vmdk LinkedClone1-000001.vmdk LinkedClone1.vmx
&lt;/code>&lt;/pre>
&lt;p>Great ! Now we need to edit &lt;code>LinkedClone1.vmx&lt;/code> file to made some changes:&lt;/p>
&lt;ul>
&lt;li>remove &lt;code>sched.swap.derivedName&lt;/code> line&lt;/li>
&lt;li>remove &lt;code>uuid.location&lt;/code> line&lt;/li>
&lt;li>remove &lt;code>uuid.bios&lt;/code> line&lt;/li>
&lt;li>remove &lt;code>ethernet0.generatedAddress&lt;/code> line (if generated mac address)&lt;/li>
&lt;li>remove &lt;code>extendedConfigFile&lt;/code> line if present&lt;/li>
&lt;/ul>
&lt;p>Then, edit the following lines:&lt;/p>
&lt;ul>
&lt;li>&lt;code>displayName&lt;/code> according to the name you whant to display in ESXi list of VMs&lt;/li>
&lt;li>&lt;code>scsi0:0.fileName&lt;/code> with vmdk new name&lt;/li>
&lt;li>&lt;code>ethernet0.address&lt;/code> if not a generated address&lt;/li>
&lt;/ul>
&lt;p>Last changes to made are in on the &lt;code>LinkedClone1-000001.vmdk&lt;/code> file:&lt;/p>
&lt;ul>
&lt;li>&lt;code>Extent description&lt;/code>, adapt the file name according to the delta file name of you linked clone.&lt;/li>
&lt;li>&lt;code>parentFileNameHint&lt;/code> with absolute path of the source vmdk file: ex: &lt;code>/vmfs/volumes/LocalDatastore_001/CentosTest/CentosTest.vmdk&lt;/code>&lt;/li>
&lt;/ul>
&lt;p>Last step is to register and start our VM:&lt;/p>
&lt;pre>&lt;code>$ vim-cmd solo/registervm $dst/LinkedClone1.vmx
$ vim-cmd vmsvc/getallvms
Vmid Name File Guest OS Version
3 CentosTest [LocalDatastore_001] CentosTest/CentosTest.vmx otherLinuxGuest vmx-10
6 CentosTest [LocalDatastore_001] LinkedClone1/LinkedClone1.vmx otherLinuxGuest vmx-10
$ vim-cmd vmsvc/power.on 6 &amp;amp;&amp;amp; echo &amp;quot;Powered ON&amp;quot;
Powering on VM:
Powered ON
&lt;/code>&lt;/pre>
&lt;p>You can now check the benefits of a linked clone by looking at the size of the vdisk of this new VM:&lt;/p>
&lt;pre>&lt;code>$ ls -lh delta.vmdk
-rw------- 1 root root 16.0M Feb 24 22:19 LinkedClone1-000001-delta.vmdk
&lt;/code>&lt;/pre>
&lt;p>And if we modify or create some file in the linkedClone VM, the vdisk usage increase:&lt;/p>
&lt;pre>&lt;code>$ ls -lh delta.vmdk
-rw------- 1 root root 32.0M Feb 24 22:24 LinkedClone1-000001-delta.vmdk
&lt;/code>&lt;/pre>
&lt;p>Very useful to have tiny VM for specific usage !&lt;/p>
&lt;h2 id="convert-a-linked-clone-to-a-full-clone">Convert a linked clone to a full clone&lt;/h2>
&lt;p>If you need to convert your LinkedClone VM to a virtual machine without link to the reference VM, you can use the vmkfstool:&lt;/p>
&lt;pre>&lt;code>$ vmkfstools -d thin -i /vmfs/volumes/LocalDatastore_001/LinkedClone1/LinkedClone1-000001.vmdk /vmfs/volumes/LocalDatastore_001/LinkedClone1/LinkedClone1_full.vmdk
Destination disk format: VMFS thin-provisioned
Cloning disk '/vmfs/volumes/LocalDatastore_001/LinkedClone1/LinkedClone1-000001.vmdk'...
Clone: 100% done.
&lt;/code>&lt;/pre>
&lt;p>Then you can compare the &lt;code>linked-cloned&lt;/code> and the &lt;code>full-cloned&lt;/code> vmdk(s):&lt;/p>
&lt;pre>&lt;code>$ ls -lh *.vmdk
-rw------- 1 root root 32.0M Feb 25 01:23 LinkedClone1-000001-delta.vmdk
-rw------- 1 root root 369 Feb 24 22:17 LinkedClone1-000001.vmdk
-rw------- 1 root root 8.0G Feb 25 18:34 LinkedClone1_full-flat.vmdk
-rw------- 1 root root 528 Feb 25 18:34 LinkedClone1_full.vmdk
&lt;/code>&lt;/pre>
&lt;p>Finally you can (with powered-off VM) change vmdk path on the vmx file to use the newly created vmdk, and reload the vmx by using:&lt;/p>
&lt;pre>&lt;code>$ vim-cmd vmsvc/reload 6
&lt;/code>&lt;/pre>
&lt;p>End ! Enjoy with VM snapshots and linked clones !&lt;/p></description></item></channel></rss>