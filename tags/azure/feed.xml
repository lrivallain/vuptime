<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>azure on vUptime.io - Cloud builder(s)</title><link>https://vuptime.io/tags/azure/</link><description>Recent content in azure on vUptime.io - Cloud builder(s)</description><generator>Hugo -- gohugo.io</generator><copyright>Ludovic Rivallain and blog co-authors</copyright><lastBuildDate>Wed, 22 Feb 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://vuptime.io/tags/azure/feed.xml" rel="self" type="application/rss+xml"/><item><title>Mock-up Azure VMware Solution in Hub-and-Spoke topology – Part 1</title><link>https://vuptime.io/post/2023-02-22-mockup-avs-in-hub-and-spoke-topology-part1/</link><pubDate>Wed, 22 Feb 2023 00:00:00 +0000</pubDate><guid>https://vuptime.io/post/2023-02-22-mockup-avs-in-hub-and-spoke-topology-part1/</guid><description>
&lt;p>If you are using &lt;a href="https://vuptime.io/tags/azure-vmware-solution/">Azure VMware Solution&lt;/a> to run your VMware workloads on Azure, you might wonder how to connect it with other Azure resources in a secure and efficient way. One option is to use a &lt;a href="https://learn.microsoft.com/en-us/azure/architecture/reference-architectures/hybrid-networking/hub-spoke">hub-and-spoke network topology&lt;/a>, which is a design pattern that consists of a central virtual network (the &lt;strong>hub&lt;/strong>) that acts as a gateway for multiple &lt;strong>spoke&lt;/strong> virtual networks. In this blog post, we will investigate how to make Azure VMware Solution work with hub and spoke topology and what are the challenges of this approach.&lt;/p>
&lt;p>By using a hub and spoke topology with Azure VMware Solution, you can achieve several benefits such as improved security &amp;amp; isolation of cloud hosted workloads. However, you also need to consider some challenges such as complexity, latency, bandwidth limitations, routing complexity, firewall rules management, etc. Therefore, it is important to plan your network design carefully according to your specific requirements.&lt;/p>
&lt;p>The official Azure documentation already provides a set of scenarios related to network connectivity for Azure VMware Solution. You can find them &lt;a href="https://learn.microsoft.com/en-us/azure/cloud-adoption-framework/scenarios/azure-vmware/example-architectures">here&lt;/a>. In this blog post series, we will reproduce, step-by-step, a mock-up scenario very close from the &lt;a href="https://learn.microsoft.com/en-us/azure/cloud-adoption-framework/scenarios/azure-vmware/example-architectures#network-virtual-appliance-in-azure-virtual-network-to-inspect-all-network-traffic">&lt;em>Network virtual appliance in Azure Virtual Network to inspect all network traffic&lt;/em>&lt;/a> one.&lt;/p>
&lt;blockquote>
&lt;p>The components and network design described in this blog post are only for demonstration purposes. They are not intended to be used in a production environment and does not represent Azure best practices. They are provided as-is for mock-up and learning purposes only.&lt;/p>
&lt;/blockquote>
&lt;h2 id="materials">Materials&lt;/h2>
&lt;p>To illustrate this blog post series, I created a &lt;a href="https://github.com/lrivallain/azure-labs-and-scripts/tree/master/hub-and-spoke-avs-transit-step-by-step">GitHub repository&lt;/a> to host Terraform code to reproduce each step of the process documented here.&lt;/p>
&lt;p>Using this Terraform content provides a repeatable way to deploy the same environment on Azure but all the steps described in this blog post can also be reproduced using the Azure Portal or Azure CLI.&lt;/p>
&lt;h3 id="azure-vmware-solution-deployment">Azure VMware Solution deployment&lt;/h3>
&lt;p>The deployment and configuration of Azure VMware Solution is out of the scope of this blog post. We consider that the AVS environment is already deployed and configured. We will cover the mandatory settings for Hub and Spoke topology in a section of this series.&lt;/p>
&lt;h2 id="stage-0--basic-setup">Stage 0 – Basic setup&lt;/h2>
&lt;p>As a first step, we will start our lab setup with some very basic components like:&lt;/p>
&lt;ul>
&lt;li>A hub vNET: &lt;code>hub-vnet&lt;/code>
&lt;ul>
&lt;li>A VM (to be NVA)&lt;/li>
&lt;li>A Virtual Network Gateway
&lt;ul>
&lt;li>I choose a VPN one to simulate an On Premises behavior without having a costing Express Route circuit at my disposal&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>2 spokes vNET: &lt;code>spoke1-vnet&lt;/code> and &lt;code>spoke2-vnet&lt;/code>
&lt;ul>
&lt;li>With a spoke VM in each one&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>A P2S VPN Subnet will act as an On-Premises based workload&lt;/li>
&lt;/ul>
&lt;p>&lt;figure>
&lt;picture>
&lt;img
loading="lazy"
decoding="async"
alt="Hub and Spoke components of Stage 0"
class="image_figure image_internal image_unprocessed"
src="https://vuptime.io/images/avs-nva/stage0/hub_and_spoke_avs-Step0.drawio.png"
/>
&lt;/picture>
&lt;/figure>
&lt;/p>
&lt;h3 id="routes-analysis">Routes analysis&lt;/h3>
&lt;p>Once this setup is built, we can have a look at routing configuration between components:&lt;/p>
&lt;p>Effective routes on &lt;code>hub-nva.nic[0]&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="ln">1&lt;/span>&lt;span class="cl">az network nic show-effective-route-table &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">2&lt;/span>&lt;span class="cl">&lt;span class="se">&lt;/span> --ids /subscriptions/&amp;lt;sub-id&amp;gt;/resourceGroups/nva-testing-RG/providers/Microsoft.Network/networkInterfaces/hub-nva-nic &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">3&lt;/span>&lt;span class="cl">&lt;span class="se">&lt;/span> -o table
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">4&lt;/span>&lt;span class="cl">&lt;span class="c1"># output&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">5&lt;/span>&lt;span class="cl">Source State Address Prefix Next Hop Type Next Hop IP
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">6&lt;/span>&lt;span class="cl">-------------------- - ------ - ---------------- -------------------- - ------------ -
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">7&lt;/span>&lt;span class="cl">Default Active 10.100.200.0/24 VnetLocal
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">8&lt;/span>&lt;span class="cl">VirtualNetworkGateway Active 10.100.204.0/24 VirtualNetworkGateway 20.16.121.157
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">9&lt;/span>&lt;span class="cl">Default Active 0.0.0.0/0 Internet
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>From UI:
&lt;figure>
&lt;picture>
&lt;img
loading="lazy"
decoding="async"
alt="Effective routes on hub-nva.nic[0]"
class="image_figure image_internal image_unprocessed"
src="https://vuptime.io/images/avs-nva/stage0/effectives-routes-hub-nva.png"
/>
&lt;/picture>
&lt;/figure>
&lt;/p>
&lt;p>Effective routes on &lt;code>spoke-1-vm.nic[0]&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="ln">1&lt;/span>&lt;span class="cl">az network nic show-effective-route-table &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">2&lt;/span>&lt;span class="cl">&lt;span class="se">&lt;/span> --ids /subscriptions/&amp;lt;sub-id&amp;gt;/resourceGroups/nva-testing-RG/providers/Microsoft.Network/networkInterfaces/spoke-1-vnet-vm-nic &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">3&lt;/span>&lt;span class="cl">&lt;span class="se">&lt;/span> -o table
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">4&lt;/span>&lt;span class="cl">&lt;span class="c1"># output&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">5&lt;/span>&lt;span class="cl">Source State Address Prefix Next Hop Type Next Hop IP
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">6&lt;/span>&lt;span class="cl">-------- ------ - ---------------- -------------- - ------------ -
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">7&lt;/span>&lt;span class="cl">Default Active 10.100.201.0/24 VnetLocal
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">8&lt;/span>&lt;span class="cl">Default Active 0.0.0.0/0 Internet
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>From UI:
&lt;figure>
&lt;picture>
&lt;img
loading="lazy"
decoding="async"
alt="Effective routes on spoke-1-vm.nic[0]"
class="image_figure image_internal image_unprocessed"
src="https://vuptime.io/images/avs-nva/stage0/effectives-routes-spoke-1-vm.png"
/>
&lt;/picture>
&lt;/figure>
&lt;/p>
&lt;p>As you can already guess from both diagram and routes listing, the communication between distinct vNets is not possible:
Example, from &lt;code>hub-nva&lt;/code> to &lt;code>spoke-1-vm&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="ln">1&lt;/span>&lt;span class="cl">ubuntu@hub-nva:~$ ping 10.100.201.4 -c3
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">2&lt;/span>&lt;span class="cl">&lt;span class="c1"># output&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">3&lt;/span>&lt;span class="cl">PING 10.100.201.4 &lt;span class="o">(&lt;/span>10.100.201.4&lt;span class="o">)&lt;/span> 56&lt;span class="o">(&lt;/span>84&lt;span class="o">)&lt;/span> bytes of data.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">4&lt;/span>&lt;span class="cl">-- - 10.100.201.4 ping statistics ---
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">5&lt;/span>&lt;span class="cl">&lt;span class="m">3&lt;/span> packets transmitted, &lt;span class="m">0&lt;/span> received, 100% packet loss, &lt;span class="nb">time&lt;/span> 2036ms
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>If we try to communicate between spokes, the result will be the same: their is no connectivity between vNets.&lt;/p>
&lt;h3 id="additional-information-about-azure-routing">Additional information about Azure Routing&lt;/h3>
&lt;p>If you need to learn more about network &amp;amp; routing in Azure, I strongly recommend you to read the following amazing blog posts:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://blog.cloudtrooper.net/2023/01/21/azure-networking-is-not-like-your-on-onprem-network/">Azure Networking is not like your on-onprem network&lt;/a> by Jose Moreno&lt;/li>
&lt;li>&lt;a href="https://github.com/cynthiatreger/az-routing-guide-ep2-nic-routing">NIC Routing &amp;amp; Azure routes&lt;/a> by Cynthia Treger&lt;/li>
&lt;/ul>
&lt;h2 id="stage-1--peering-spokes">Stage 1 – Peering spokes&lt;/h2>
&lt;p>In this stage, we will add a peering between &lt;code>spoke1-vnet&lt;/code>, &lt;code>spoke2-vnet&lt;/code> and &lt;code>hub-vnet&lt;/code> to enable communication.&lt;/p>
&lt;p>&lt;figure>
&lt;picture>
&lt;img
loading="lazy"
decoding="async"
alt="Hub and Spoke components of Stage 1"
class="image_figure image_internal image_unprocessed"
src="https://vuptime.io/images/avs-nva/stage1/hub_and_spoke_avs-Step1.drawio.png"
/>
&lt;/picture>
&lt;/figure>
&lt;/p>
&lt;h3 id="routes-analysis-s1">Routes analysis (s1)&lt;/h3>
&lt;p>Once this setup is built, we can have a look at routing configuration between components:&lt;/p>
&lt;p>Effective routes on &lt;code>hub-nva.nic[0]&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="ln"> 1&lt;/span>&lt;span class="cl">az network nic show-effective-route-table &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 2&lt;/span>&lt;span class="cl">&lt;span class="se">&lt;/span> --ids /subscriptions/&amp;lt;sub-id&amp;gt;/resourceGroups/nva-testing-RG/providers/Microsoft.Network/networkInterfaces/hub-nva-nic &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 3&lt;/span>&lt;span class="cl">&lt;span class="se">&lt;/span> -o table
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 4&lt;/span>&lt;span class="cl">&lt;span class="c1"># output&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 5&lt;/span>&lt;span class="cl">Source State Address Prefix Next Hop Type Next Hop IP
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 6&lt;/span>&lt;span class="cl">--------------------- ------- ---------------- --------------------- -------------
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 7&lt;/span>&lt;span class="cl">Default Active 10.100.200.0/24 VnetLocal
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 8&lt;/span>&lt;span class="cl">Default Active 10.100.201.0/24 VNetPeering
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 9&lt;/span>&lt;span class="cl">Default Active 10.100.202.0/24 VNetPeering
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">10&lt;/span>&lt;span class="cl">VirtualNetworkGateway Active 10.100.204.0/24 VirtualNetworkGateway 20.16.121.157
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">11&lt;/span>&lt;span class="cl">Default Active 0.0.0.0/0 Internet
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;figure>
&lt;picture>
&lt;img
loading="lazy"
decoding="async"
alt="Effective routes on hub-nva.nic[0]"
class="image_figure image_internal image_unprocessed"
src="https://vuptime.io/images/avs-nva/stage1/effectives-routes-hub-nva.png"
/>
&lt;/picture>
&lt;/figure>
&lt;/p>
&lt;p>Effective routes on &lt;code>spoke-1-vm.nic[0]&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="ln"> 1&lt;/span>&lt;span class="cl">az network nic show-effective-route-table &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 2&lt;/span>&lt;span class="cl">&lt;span class="se">&lt;/span> --ids /subscriptions/&amp;lt;sub-id&amp;gt;/resourceGroups/nva-testing-RG/providers/Microsoft.Network/networkInterfaces/spoke-1-vnet-vm-nic &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 3&lt;/span>&lt;span class="cl">&lt;span class="se">&lt;/span> -o table
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 4&lt;/span>&lt;span class="cl">&lt;span class="c1"># output&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 5&lt;/span>&lt;span class="cl">Source State Address Prefix Next Hop Type Next Hop IP
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 6&lt;/span>&lt;span class="cl">-------------------- - ------ - ---------------- -------------------- - ------------ -
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 7&lt;/span>&lt;span class="cl">Default Active 10.100.201.0/24 VnetLocal
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 8&lt;/span>&lt;span class="cl">Default Active 10.100.200.0/24 VNetPeering
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 9&lt;/span>&lt;span class="cl">VirtualNetworkGateway Active 10.100.204.0/24 VirtualNetworkGateway 20.16.121.157
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">10&lt;/span>&lt;span class="cl">Default Active 0.0.0.0/0 Internet
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;figure>
&lt;picture>
&lt;img
loading="lazy"
decoding="async"
alt="Effective routes on spoke-1-vm.nic[0]"
class="image_figure image_internal image_unprocessed"
src="https://vuptime.io/images/avs-nva/stage1/effectives-routes-spoke-1-vm.png"
/>
&lt;/picture>
&lt;/figure>
&lt;/p>
&lt;p>The VM in hub-vnet can now ping VMs on peered networks: Example, from &lt;code>hub-nva&lt;/code> to &lt;code>spoke-1-vm&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="ln"> 1&lt;/span>&lt;span class="cl">ubuntu@hub-nva:~$ ping 10.100.201.4 -c3
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 2&lt;/span>&lt;span class="cl">&lt;span class="c1"># output&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 3&lt;/span>&lt;span class="cl">PING 10.100.201.4 &lt;span class="o">(&lt;/span>10.100.201.4&lt;span class="o">)&lt;/span> 56&lt;span class="o">(&lt;/span>84&lt;span class="o">)&lt;/span> bytes of data.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 4&lt;/span>&lt;span class="cl">&lt;span class="m">64&lt;/span> bytes from 10.100.201.4: &lt;span class="nv">icmp_seq&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="m">1&lt;/span> &lt;span class="nv">ttl&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="m">64&lt;/span> &lt;span class="nv">time&lt;/span>&lt;span class="o">=&lt;/span>1.74 ms
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 5&lt;/span>&lt;span class="cl">&lt;span class="m">64&lt;/span> bytes from 10.100.201.4: &lt;span class="nv">icmp_seq&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="m">2&lt;/span> &lt;span class="nv">ttl&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="m">64&lt;/span> &lt;span class="nv">time&lt;/span>&lt;span class="o">=&lt;/span>1.14 ms
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 6&lt;/span>&lt;span class="cl">&lt;span class="m">64&lt;/span> bytes from 10.100.201.4: &lt;span class="nv">icmp_seq&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="m">3&lt;/span> &lt;span class="nv">ttl&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="m">64&lt;/span> &lt;span class="nv">time&lt;/span>&lt;span class="o">=&lt;/span>0.975 ms
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 7&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 8&lt;/span>&lt;span class="cl">-- - 10.100.201.4 ping statistics ---
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 9&lt;/span>&lt;span class="cl">&lt;span class="m">3&lt;/span> packets transmitted, &lt;span class="m">3&lt;/span> received, 0% packet loss, &lt;span class="nb">time&lt;/span> 2003ms
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">10&lt;/span>&lt;span class="cl">rtt min/avg/max/mdev &lt;span class="o">=&lt;/span> 0.975/1.284/1.744/0.331 ms
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>But VM on different spokes cannot communicate together: Example, from &lt;code>spoke-1-vm&lt;/code> to &lt;code>spoke-2-vm&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="ln">1&lt;/span>&lt;span class="cl">ubuntu@spoke-1-vm:~$ ping 10.100.202.4 -c3
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">2&lt;/span>&lt;span class="cl">&lt;span class="c1"># output&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">3&lt;/span>&lt;span class="cl">PING 10.100.202.4 &lt;span class="o">(&lt;/span>10.100.202.4&lt;span class="o">)&lt;/span> 56&lt;span class="o">(&lt;/span>84&lt;span class="o">)&lt;/span> bytes of data.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">4&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">5&lt;/span>&lt;span class="cl">-- - 10.100.202.4 ping statistics ---
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">6&lt;/span>&lt;span class="cl">&lt;span class="m">3&lt;/span> packets transmitted, &lt;span class="m">0&lt;/span> received, 100% packet loss, &lt;span class="nb">time&lt;/span> 2029ms
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>From a VPN client, we can now see the routes to all networks:&lt;/p>
&lt;ul>
&lt;li>10.100.202.0/24: &lt;code>spoke2-vnet&lt;/code>&lt;/li>
&lt;li>10.100.201.0/24: &lt;code>spoke1-vnet&lt;/code>&lt;/li>
&lt;li>10.100.200.0/24: &lt;code>hub-vnet&lt;/code>&lt;/li>
&lt;li>10.100.204.0/24: &lt;code>VPN client range&lt;/code>&lt;/li>
&lt;/ul>
&lt;h3 id="additional-information-about-azure-peering">Additional information about Azure Peering&lt;/h3>
&lt;p>If you need to learn more about network peering in Azure, I strongly recommend you to read the following posts:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://blog.cloudtrooper.net/2021/06/18/vnet-peering-settings-those-familiar-strangers/">VNet peering settings, those familiar strangers&lt;/a> by Jose Moreno&lt;/li>
&lt;li>&lt;a href="https://learn.microsoft.com/en-us/azure/virtual-network/virtual-network-peering-overview">Virtual network peering&lt;/a> in Azure documentation&lt;/li>
&lt;/ul>
&lt;h2 id="stage-2--user-defined-route-on-spokes--gw-propagation-true">Stage 2 – User Defined Route on spokes / GW propagation true&lt;/h2>
&lt;p>In this stage, we will add a UDR on &lt;code>spoke1-vnet&lt;/code> and &lt;code>spoke2-vnet&lt;/code> to enable communication between spokes.&lt;/p>
&lt;p>&lt;figure>
&lt;picture>
&lt;img
loading="lazy"
decoding="async"
alt="Hub and Spoke components of Stage 2"
class="image_figure image_internal image_unprocessed"
src="https://vuptime.io/images/avs-nva/stage2/hub_and_spoke_avs-Step2.drawio.png"
/>
&lt;/picture>
&lt;/figure>
&lt;/p>
&lt;p>For each spoke subnet, we will add a UDR with the following configuration:&lt;/p>
&lt;ul>
&lt;li>0.0.0.0/0 via &lt;code>nva-vm.nic[0].ipaddress&lt;/code>&lt;/li>
&lt;li>&lt;code>disable_bgp_route_propagation = false&lt;/code>&lt;/li>
&lt;/ul>
&lt;p>From UI, it looks like this:&lt;/p>
&lt;p>&lt;figure>
&lt;picture>
&lt;img
loading="lazy"
decoding="async"
alt="UDR on spoke vNets"
class="image_figure image_internal image_unprocessed"
src="https://vuptime.io/images/avs-nva/stage2/UserDefinedRoute-spoke.png"
/>
&lt;/picture>
&lt;/figure>
&lt;/p>
&lt;p>The next hop address is the IP address of the &lt;code>hub-nva&lt;/code> VM NIC in the hub-vnet.&lt;/p>
&lt;p>We also setup the following &lt;em>Gateway route propagation&lt;/em> configuration:&lt;/p>
&lt;p>&lt;figure>
&lt;picture>
&lt;img
loading="lazy"
decoding="async"
alt="UDR route propagation configuration on spoke vNets"
class="image_figure image_internal image_unprocessed"
src="https://vuptime.io/images/avs-nva/stage2/UserDefinedRouteConfiguration-spoke.png"
/>
&lt;/picture>
&lt;/figure>
&lt;/p>
&lt;div class="notices warning">
&lt;div class="label">disable&amp;#43;false&lt;/div>
&lt;p>You may notice a difference in wording between Azure UI and Terraform regarding &lt;em>Gateway route propagation&lt;/em> setting. In Azure UI, the option is called &lt;code>Propagate gateway route&lt;/code>. In API based tools like Terraform, Bicep and ARM, the option is called &lt;code>disableBgpRoutePropagation&lt;/code> (ARM/Bicep) or &lt;code>disable_bgp_route_propagation&lt;/code> (Terraform).&lt;/p>
&lt;p>This can be confusing when related to boolean values. In this case, &lt;code>false&lt;/code> means that the routes from &lt;em>Gateway&lt;/em> components will be propagated to the subnets associated with the UDR.&lt;/p>
&lt;/div>
&lt;h3 id="routes-analysis-s2">Routes analysis (s2)&lt;/h3>
&lt;p>Effective routes on &lt;code>spoke-1-vm.nic[0]&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="ln">1&lt;/span>&lt;span class="cl">az network nic show-effective-route-table --ids /subscriptions/b58ee7d0-4b78-47f8-8777-3a833e5d0818/resourceGroups/nva-testing-RG/providers/Microsoft.Network/networkInterfaces/spoke-1-vnet-vm-nic -o table
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">2&lt;/span>&lt;span class="cl">&lt;span class="c1"># output&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">3&lt;/span>&lt;span class="cl">Source State Address Prefix Next Hop Type Next Hop IP
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">4&lt;/span>&lt;span class="cl">--------------------- ------- ---------------- --------------------- -------------
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">5&lt;/span>&lt;span class="cl">Default Active 10.100.201.0/24 VnetLocal
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">6&lt;/span>&lt;span class="cl">Default Active 10.100.200.0/24 VNetPeering
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">7&lt;/span>&lt;span class="cl">VirtualNetworkGateway Active 10.100.204.0/24 VirtualNetworkGateway 20.16.121.157
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">8&lt;/span>&lt;span class="cl">Default Invalid 0.0.0.0/0 Internet
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">9&lt;/span>&lt;span class="cl">User Active 0.0.0.0/0 VirtualAppliance 10.100.200.68
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;figure>
&lt;picture>
&lt;img
loading="lazy"
decoding="async"
alt="Effective routes on spoke-1-vm.nic[0]"
class="image_figure image_internal image_unprocessed"
src="https://vuptime.io/images/avs-nva/stage2/effectives-routes-spoke-1-vm.png"
/>
&lt;/picture>
&lt;/figure>
&lt;/p>
&lt;p>VM on different spokes can communicate together: Example, from &lt;code>spoke-1-vm&lt;/code> to &lt;code>spoke-2-vm&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="ln"> 1&lt;/span>&lt;span class="cl">ubuntu@spoke-1-vnet-vm:~$ ping 10.100.202.4 -c3
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 2&lt;/span>&lt;span class="cl">&lt;span class="c1"># output&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 3&lt;/span>&lt;span class="cl">PING 10.100.202.4 &lt;span class="o">(&lt;/span>10.100.202.4&lt;span class="o">)&lt;/span> 56&lt;span class="o">(&lt;/span>84&lt;span class="o">)&lt;/span> bytes of data.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 4&lt;/span>&lt;span class="cl">&lt;span class="m">64&lt;/span> bytes from 10.100.202.4: &lt;span class="nv">icmp_seq&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="m">1&lt;/span> &lt;span class="nv">ttl&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="m">63&lt;/span> &lt;span class="nv">time&lt;/span>&lt;span class="o">=&lt;/span>4.05 ms
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 5&lt;/span>&lt;span class="cl">&lt;span class="m">64&lt;/span> bytes from 10.100.202.4: &lt;span class="nv">icmp_seq&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="m">2&lt;/span> &lt;span class="nv">ttl&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="m">63&lt;/span> &lt;span class="nv">time&lt;/span>&lt;span class="o">=&lt;/span>1.59 ms
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 6&lt;/span>&lt;span class="cl">&lt;span class="m">64&lt;/span> bytes from 10.100.202.4: &lt;span class="nv">icmp_seq&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="m">3&lt;/span> &lt;span class="nv">ttl&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="m">63&lt;/span> &lt;span class="nv">time&lt;/span>&lt;span class="o">=&lt;/span>2.18 ms
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 7&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 8&lt;/span>&lt;span class="cl">-- - 10.100.202.4 ping statistics ---
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 9&lt;/span>&lt;span class="cl">&lt;span class="m">3&lt;/span> packets transmitted, &lt;span class="m">3&lt;/span> received, 0% packet loss, &lt;span class="nb">time&lt;/span> 2001ms
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">10&lt;/span>&lt;span class="cl">rtt min/avg/max/mdev &lt;span class="o">=&lt;/span> 1.587/2.604/4.049/1.049 ms
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>From the &lt;code>hub-nva&lt;/code> VM, we can see the traffic going through:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="ln">1&lt;/span>&lt;span class="cl">IP 10.100.201.4 &amp;gt; 10.100.202.4: ICMP echo request, id 8, seq 1, length 64
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">2&lt;/span>&lt;span class="cl">IP 10.100.200.68 &amp;gt; 10.100.202.4: ICMP echo request, id 8, seq 1, length 64
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">3&lt;/span>&lt;span class="cl">IP 10.100.202.4 &amp;gt; 10.100.200.68: ICMP echo reply, id 8, seq 1, length 64
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">4&lt;/span>&lt;span class="cl">IP 10.100.202.4 &amp;gt; 10.100.201.4: ICMP echo reply, id 8, seq 1, length 6
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>From a VPN connection we can reach spoke resources:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="ln">1&lt;/span>&lt;span class="cl">ubuntu@vpn-client:~$ ping 10.100.201.4 -c3
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">2&lt;/span>&lt;span class="cl">&lt;span class="c1"># output&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">3&lt;/span>&lt;span class="cl">PING 10.100.201.4 &lt;span class="o">(&lt;/span>10.100.201.4&lt;span class="o">)&lt;/span> 56&lt;span class="o">(&lt;/span>84&lt;span class="o">)&lt;/span> bytes of data.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">4&lt;/span>&lt;span class="cl">&lt;span class="m">64&lt;/span> bytes from 10.100.201.4: &lt;span class="nv">icmp_seq&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="m">1&lt;/span> &lt;span class="nv">ttl&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="m">63&lt;/span> &lt;span class="nv">time&lt;/span>&lt;span class="o">=&lt;/span>24.1 ms
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">5&lt;/span>&lt;span class="cl">&lt;span class="m">64&lt;/span> bytes from 10.100.201.4: &lt;span class="nv">icmp_seq&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="m">2&lt;/span> &lt;span class="nv">ttl&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="m">63&lt;/span> &lt;span class="nv">time&lt;/span>&lt;span class="o">=&lt;/span>22.7 ms
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">6&lt;/span>&lt;span class="cl">&lt;span class="m">64&lt;/span> bytes from 10.100.201.4: &lt;span class="nv">icmp_seq&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="m">3&lt;/span> &lt;span class="nv">ttl&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="m">63&lt;/span> &lt;span class="nv">time&lt;/span>&lt;span class="o">=&lt;/span>24.9 ms
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>But… if we look from the &lt;code>hub-nva&lt;/code> VM, there is no match for this network traffic. Meaning that the traffic is, as we can guess from the effective routes tables on spokes VMs, going directly from spokes VMs to the VPN Gateway and vice&amp;amp;versa.&lt;/p>
&lt;p>We will try to mitigate this in the next steps by forcing the traffic to go through the &lt;code>hub-nva&lt;/code> VM.&lt;/p>
&lt;h3 id="additional-information-about-azure-udr">Additional information about Azure UDR&lt;/h3>
&lt;p>If you need to learn more about UDR in Azure, I strongly recommend you to read the following posts:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://learn.microsoft.com/en-us/azure/virtual-network/virtual-networks-udr-overview#user-defined">User Defined Routes&lt;/a> in Azure documentation&lt;/li>
&lt;li>&lt;a href="https://learn.microsoft.com/en-us/azure/virtual-network/virtual-networks-udr-overview#how-azure-selects-a-route">How Azure selects a route&lt;/a> in Azure documentation&lt;/li>
&lt;li>&lt;a href="https://blog.cloudtrooper.net/2020/11/28/dont-let-your-azure-routes-bite-you/">Don’t let your Azure Routes bite you&lt;/a> by Jose Moreno&lt;/li>
&lt;/ul>
&lt;h2 id="stage-3--user-defined-route-on-spokes--gw-propagation-false">Stage 3 – User Defined Route on spokes / GW propagation false&lt;/h2>
&lt;p>In this stage, we will start mitigating the issue we have in the previous stage about the network traffic, related to VPN, bypassing our NVA device.&lt;/p>
&lt;p>The first thing we can try is to disable &lt;em>Gateway route propagation&lt;/em> on the UDRs we have created in the previous stage.&lt;/p>
&lt;p>&lt;figure>
&lt;picture>
&lt;img
loading="lazy"
decoding="async"
alt="Hub and Spoke components of Stage 3"
class="image_figure image_internal image_unprocessed"
src="https://vuptime.io/images/avs-nva/stage3/hub_and_spoke_avs-Step3.drawio.png"
/>
&lt;/picture>
&lt;/figure>
&lt;/p>
&lt;p>For each spoke subnet, we will add a UDR with the following configuration:&lt;/p>
&lt;ul>
&lt;li>0.0.0.0/0 via &lt;code>nva-vm.nic[0].ipaddress&lt;/code>&lt;/li>
&lt;li>&lt;code>disable_bgp_route_propagation = true&lt;/code>&lt;/li>
&lt;/ul>
&lt;p>From UI, it looks like this:&lt;/p>
&lt;p>&lt;figure>
&lt;picture>
&lt;img
loading="lazy"
decoding="async"
alt="UDR route propagation configuration on spoke vNets"
class="image_figure image_internal image_unprocessed"
src="https://vuptime.io/images/avs-nva/stage2/UserDefinedRouteConfiguration-spoke.png"
/>
&lt;/picture>
&lt;/figure>
&lt;/p>
&lt;div class="notices warning">
&lt;div class="label">disable&amp;#43;false&lt;/div>
&lt;p>As mentioned earlier, if you use an automation tool to setup this configuration value, you will notice a confusing wording. In Azure UI, the option is called &lt;code>Propagate gateway route&lt;/code>. In API based tools like Terraform, Bicep and ARM, the option is called &lt;code>disableBgpRoutePropagation&lt;/code> (ARM/Bicep) or &lt;code>disable_bgp_route_propagation&lt;/code> (Terraform).&lt;/p>
&lt;p>In this case, &lt;code>true&lt;/code> means that the routes from &lt;em>Gateway&lt;/em> components will not be propagated to the subnets associated with the UDR.&lt;/p>
&lt;/div>
&lt;h3 id="routes-analysis-s3">Routes analysis (s3)&lt;/h3>
&lt;p>Effective routes on &lt;code>spoke-1-vm.nic[0]&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="ln"> 1&lt;/span>&lt;span class="cl">az network nic show-effective-route-table &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 2&lt;/span>&lt;span class="cl">&lt;span class="se">&lt;/span> --ids /subscriptions/b58ee7d0-4b78-47f8-8777-3a833e5d0818/resourceGroups/nva-testing-RG/providers/Microsoft.Network/networkInterfaces/spoke-1-vnet-vm-nic &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 3&lt;/span>&lt;span class="cl">&lt;span class="se">&lt;/span> -o table
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 4&lt;/span>&lt;span class="cl">&lt;span class="c1"># output&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 5&lt;/span>&lt;span class="cl">Source State Address Prefix Next Hop Type Next Hop IP
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 6&lt;/span>&lt;span class="cl">-------- ------ - ---------------- ---------------- ------------ -
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 7&lt;/span>&lt;span class="cl">Default Active 10.100.201.0/24 VnetLocal
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 8&lt;/span>&lt;span class="cl">Default Active 10.100.200.0/24 VNetPeering
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 9&lt;/span>&lt;span class="cl">Default Invalid 0.0.0.0/0 Internet
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">10&lt;/span>&lt;span class="cl">User Active 0.0.0.0/0 VirtualAppliance 10.100.200.68
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;figure>
&lt;picture>
&lt;img
loading="lazy"
decoding="async"
alt="Effective routes on spoke-1-vm.nic[0]"
class="image_figure image_internal image_unprocessed"
src="https://vuptime.io/images/avs-nva/stage3/effectives-routes-spoke-1-vm.png"
/>
&lt;/picture>
&lt;/figure>
&lt;/p>
&lt;p>According to the new UDR setting: The route to the VPN subnet is no more directly published in the effective routes for &lt;code>spoke-1-vm&lt;/code> NIC.
If &lt;code>spoke-1-vm&lt;/code> need to communicate with a VPN based resource, the default &lt;code>0/0&lt;/code> path will be used, going through the &lt;code>hub-nva&lt;/code> VM.&lt;/p>
&lt;p>If we try a ping from VPN client to &lt;code>spoke-1-vm&lt;/code>, it works…&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="ln"> 1&lt;/span>&lt;span class="cl">ubuntu@vpn-client:~$ ping 10.100.201.4 -c3
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 2&lt;/span>&lt;span class="cl">&lt;span class="c1"># output&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 3&lt;/span>&lt;span class="cl">PING 10.100.201.4 &lt;span class="o">(&lt;/span>10.100.201.4&lt;span class="o">)&lt;/span> 56&lt;span class="o">(&lt;/span>84&lt;span class="o">)&lt;/span> bytes of data.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 4&lt;/span>&lt;span class="cl">&lt;span class="m">64&lt;/span> bytes from 10.100.201.4: &lt;span class="nv">icmp_seq&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="m">1&lt;/span> &lt;span class="nv">ttl&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="m">62&lt;/span> &lt;span class="nv">time&lt;/span>&lt;span class="o">=&lt;/span>23.6 ms
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 5&lt;/span>&lt;span class="cl">&lt;span class="m">64&lt;/span> bytes from 10.100.201.4: &lt;span class="nv">icmp_seq&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="m">2&lt;/span> &lt;span class="nv">ttl&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="m">62&lt;/span> &lt;span class="nv">time&lt;/span>&lt;span class="o">=&lt;/span>48.0 ms
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 6&lt;/span>&lt;span class="cl">&lt;span class="m">64&lt;/span> bytes from 10.100.201.4: &lt;span class="nv">icmp_seq&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="m">3&lt;/span> &lt;span class="nv">ttl&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="m">62&lt;/span> &lt;span class="nv">time&lt;/span>&lt;span class="o">=&lt;/span>64.1 ms
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 7&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 8&lt;/span>&lt;span class="cl">-- - 10.100.201.4 ping statistics ---
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 9&lt;/span>&lt;span class="cl">&lt;span class="m">3&lt;/span> packets transmitted, &lt;span class="m">3&lt;/span> received, 0% packet loss, &lt;span class="nb">time&lt;/span> 2001ms
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">10&lt;/span>&lt;span class="cl">rtt min/avg/max/mdev &lt;span class="o">=&lt;/span> 23.609/45.235/64.094/16.643 ms
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>… but, there is a glitch in the Matrix:&lt;/p>
&lt;p>&lt;figure>
&lt;picture>
&lt;img
loading="lazy"
decoding="async"
alt="Glitch in the Matrix: Asymmetric routing"
class="image_figure image_internal image_unprocessed"
src="https://vuptime.io/images/avs-nva/stage3/hub_and_spoke_avs-Step3-AsymmetricTraffic.drawio.png"
/>
&lt;/picture>
&lt;/figure>
&lt;/p>
&lt;p>As you can see, only the traffic from &lt;code>spoke-1-vm&lt;/code> to VPN is going through the &lt;code>hub-nva&lt;/code>. On the contrary, traffic from VPN clients is going directly to spoke VMs resulting in an asymmetric network pattern.&lt;/p>
&lt;p>For example, when doing a ping from VPN client to &lt;code>spoke-1-vm&lt;/code>, we can only see echo &lt;em>reply&lt;/em> going through the &lt;code>hub-nva&lt;/code> when doing a tcpdump:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="ln">1&lt;/span>&lt;span class="cl">ubuntu@hub-nva:~$ sudo tcpdump -nni eth0 icmp
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">2&lt;/span>&lt;span class="cl">&lt;span class="c1"># output&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">3&lt;/span>&lt;span class="cl">IP 10.100.201.4 &amp;gt; 10.100.200.68: ICMP &lt;span class="nb">echo&lt;/span> reply, id 1002, seq 1, length &lt;span class="m">64&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">4&lt;/span>&lt;span class="cl">IP 10.100.201.4 &amp;gt; 10.100.204.2: ICMP &lt;span class="nb">echo&lt;/span> reply, id 1002, seq 1, length &lt;span class="m">64&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>The echo &lt;em>request&lt;/em> is missing: the flow from VPN client is not passing through the hub-nva.&lt;/p>
&lt;h3 id="additional-information-about-gateway-route-propagation">Additional information about Gateway route propagation&lt;/h3>
&lt;p>If you are interested in more details about the &lt;em>Gateway route propagation&lt;/em> feature, you can refer to the following posts:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://learn.microsoft.com/en-us/azure/virtual-network/virtual-networks-udr-overview#border-gateway-protocol">Border gateway protocol&lt;/a> in the Azure documentation&lt;/li>
&lt;li>&lt;a href="https://blog.cloudtrooper.net/2023/02/06/virtual-network-gateways-routing-in-azure/">Virtual Network Gateways routing in Azure&lt;/a> by Jose Moreno&lt;/li>
&lt;li>&lt;a href="https://github.com/cynthiatreger/az-routing-guide-ep1-vnet-peering-and-virtual-network-gateways#12-connectivity-impact-of-adding-a-virtual-network-gateway-er-or-vpn">Connectivity impact of adding a Virtual Network Gateway (ER or VPN)&lt;/a> by Cynthia Treger&lt;/li>
&lt;/ul>
&lt;h2 id="part-1--conclusion">Part 1 – Conclusion&lt;/h2>
&lt;p>In the previous stages, we have seen how to initialize a hub and spoke topology within Azure. At the current stage, our Azure hosted spokes vNet are using the hub vNet as a transit network, leveraging on the default route configured on User Defined Routes (UDR).&lt;/p>
&lt;p>Regarding the VPN connectivity (acting as On Premises workloads), we have discovered that we are facing an asymmetric routing issue. Traffic from VPN clients to Azure hosted VMs is not going through the NVA VM deployed in the hub vNet.&lt;/p>
&lt;p>As a reminder, you can leverage on the content of the following GitHub repository to reproduce the steps described in this post: &lt;a href="https://github.com/lrivallain/azure-labs-and-scripts/tree/master/hub-and-spoke-avs-transit-step-by-step">hub-and-spoke-avs-transit-step-by-step&lt;/a>.&lt;/p>
&lt;p>&lt;strong>In the next post&lt;/strong>, we will see how to mitigate this issue by leveraging on a new User Defined Route configuration. We will also introduce the connectivity of Azure VMware Solution (AVS) to this hub and spoke topology.&lt;/p></description></item><item><title>Public preview – Azure VMware Solution and VMware Cloud Director Service</title><link>https://vuptime.io/post/2022-08-31-avs-and-cloud-director-service/</link><pubDate>Wed, 31 Aug 2022 00:00:00 +0000</pubDate><guid>https://vuptime.io/post/2022-08-31-avs-and-cloud-director-service/</guid><description>
&lt;h2 id="introduction">Introduction&lt;/h2>
&lt;p>&lt;a href="https://gateway.performance.vcd.cloud.vmware.com/cloud-director-instances/">VMware Cloud Director Service&lt;/a> (aka &lt;em>CDS&lt;/em>) is a cloud service that provides a unified view of VMware based resources and multi-tenant support, allowing an IT administrator to split resources capacity between tenants. For tenant users, it provides a single pane of glass to manage all VMware-based, cloud resources, including virtual machines, storage, networks, and networks services.&lt;/p>
&lt;blockquote>
&lt;p>VMware Cloud Director Service is the SaaS version of the well known &lt;a href="https://www.vmware.com/products/vcloud-director/">VMware (v)Cloud Director&lt;/a>.&lt;/p>
&lt;/blockquote>
&lt;p>Associated to &lt;a href="https://azure.microsoft.com/en-us/services/azure-vmware/">Azure VMware Solution&lt;/a> (aka &lt;em>AVS&lt;/em>), a large part of the multi-tenants and self-service SDDC stack, is managed by the cloud providers:&lt;/p>
&lt;ul>
&lt;li>&lt;strong>VMware&lt;/strong>: manage the CDS instance components (cells and service)&lt;/li>
&lt;li>&lt;strong>Microsoft&lt;/strong> Azure: manage the AVS instance components (vCenter, vSphere, NSX-T, vSAN etc.)&lt;/li>
&lt;/ul>
&lt;div class="notices info">
&lt;div class="label">Azure Service terms&lt;/div>
&lt;p>Cloud Director service (CDs) is now available to use with Azure VMware Solution under the Enterprise Agreement (EA) model only. It's not suitable for MSP / Hoster to resell Azure VMware Solution capacity to customers at this point. For more information, see &lt;a href="https://www.microsoft.com/licensing/terms/productoffering/MicrosoftAzure/EAEAS#GeneralServiceTerms">Azure Service terms&lt;/a>.&lt;/p>
&lt;/div>
&lt;p>In this post, we will cover how the two solutions can be linked together in order to provide this &lt;em>&amp;quot;fully-managed-vCloud-Director&amp;quot;&lt;/em> experience.&lt;/p>
&lt;p>You can also refer to the following links to explore more about the AVS and CDS combination:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://blogs.vmware.com/cloudprovider/2022/08/cloud-director-service-expanding-multi-cloud-services-on-azure-vmware-solution.html?utm_source=feedly&amp;amp;utm_medium=rss&amp;amp;utm_campaign=cloud-director-service-expanding-multi-cloud-services-on-azure-vmware-solution">VMware's blog: Cloud Director Service Expanding Multi-Cloud Services on Azure VMware Solution&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://azure.microsoft.com/fr-fr/updates/public-preview-enterprise-vmware-cloud-director-service-for-azure-vmware-solution/">Azure update announcement&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://docs.microsoft.com/en-us/azure/azure-vmware/enable-vmware-cds-with-azure">Azure documentation&lt;/a>&lt;/li>
&lt;/ul>
&lt;h3 id="high-level-design">High level design&lt;/h3>
&lt;p>&lt;figure>
&lt;picture>
&lt;img
loading="lazy"
decoding="async"
alt="Multi-tenancy capabilities of AVS and CDS - High level design"
class="image_figure image_internal image_unprocessed"
src="https://vuptime.io/images/avs-cds/avs-cds-high-level-design.png"
/>
&lt;/picture>
&lt;/figure>
&lt;/p>
&lt;p>The Azure documentation provides a &lt;a href="https://docs.microsoft.com/en-us/azure/azure-vmware/enable-vmware-cds-with-azure">multi-tenant network design&lt;/a>.&lt;/p>
&lt;h3 id="prerequisites">Prerequisites&lt;/h3>
&lt;h4 id="subscriptions">Subscriptions&lt;/h4>
&lt;p>In the following post, we will assume that you already have subscriptions for the following services:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://console.cloud.vmware.com/">VMware Cloud&lt;/a> organization
&lt;ul>
&lt;li>&lt;em>Cloud Director Service&lt;/em> must be enabled for your VMware Cloud organization&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;a href="https://portal.azure.com/">Azure&lt;/a> tenant and subscription(s)
&lt;ul>
&lt;li>At least on active &lt;a href="https://portal.azure.com/#view/HubsExtension/BrowseResource/resourceType/Microsoft.AVS%2FprivateClouds">Azure VMware Solution&lt;/a> deployment&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h4 id="technical-requirements">Technical requirements&lt;/h4>
&lt;p>In Azure VMware Solution:&lt;/p>
&lt;ul>
&lt;li>An outbound internet connection is required&lt;/li>
&lt;li>A private IP address to deploy CDS proxy appliance (either DHCP or static one) with internet connectivity&lt;/li>
&lt;li>Working DNS resolution&lt;/li>
&lt;li>vCenter and NSX-T credentials&lt;/li>
&lt;/ul>
&lt;div class="notices warning">
&lt;div class="label">Warning&lt;/div>
&lt;p>In the following post, default AVS-provided credentials will be used for the vCenter and NSX-T. Of course, for a production setup, we highly recommend to use service accounts for this purpose in order to limit the exposure of credentials and privileges.&lt;/p>
&lt;/div>
&lt;h4 id="knowledge">Knowledge&lt;/h4>
&lt;p>As we will not cover the usage of Cloud Director Service, we will assume that you already have some basic knowledge of this product or its on-premise counterpart: &lt;a href="https://www.vmware.com/fr/products/cloud-director.html">VMware Cloud Director&lt;/a>.&lt;/p>
&lt;p>We will also assume that you already have some basic knowledge of the vCenter usage (at least to deploy an OVF template), and of the NSX-T usage (at least to create logical segments and to configure DNS and DHCP services).&lt;/p>
&lt;h2 id="create-a-cds-instance">Create a CDS instance&lt;/h2>
&lt;p>For anyone who already deployed an on-premise instance of vCloud Director, the following deployment experience is a drastic change: by providing a name for the instance, a deployment region and a password, you can deploy a fully working Cloud Director instance and avoid the complexity of the on-premise deployment.&lt;/p>
&lt;p>&lt;figure>
&lt;picture>
&lt;img
loading="lazy"
decoding="async"
alt="Wizard to create a CDS instance"
class="image_figure image_internal image_unprocessed"
src="https://vuptime.io/images/avs-cds/create-cds-instance.png"
/>
&lt;/picture>
&lt;/figure>
&lt;/p>
&lt;p>... about 12 minutes later:&lt;/p>
&lt;p>&lt;figure>
&lt;picture>
&lt;img
loading="lazy"
decoding="async"
alt="CDS instance was deployed in about 12 minutes"
class="image_figure image_internal image_unprocessed"
src="https://vuptime.io/images/avs-cds/cds-instance-fully-created.png"
/>
&lt;/picture>
&lt;/figure>
&lt;/p>
&lt;h2 id="interconnect-your-avs-instance">Interconnect your AVS instance&lt;/h2>
&lt;h3 id="proxy-appliance">Proxy Appliance&lt;/h3>
&lt;p>In order to provide connectivity for the CDS instance to the AVS vCenter and NSX-T manager, a reverse-proxy appliance is required.&lt;/p>
&lt;p>Deployed on the AVS SDDC and using a outbound internet connection, the proxy appliance (aka &lt;em>transporter&lt;/em> appliance) creates a secured tunnel with CDS services to provide connectivity up to the AVS management components.&lt;/p>
&lt;p>&lt;figure>
&lt;picture>
&lt;img
loading="lazy"
decoding="async"
alt="Proxy appliance connectivity"
class="image_figure image_internal image_unprocessed"
src="https://vuptime.io/images/avs-cds/avs-cds-proxy-appliance.png"
/>
&lt;/picture>
&lt;/figure>
&lt;/p>
&lt;p>Once deployed, the proxy appliance will be autonomous to create the tunnel with the CDS instance.&lt;/p>
&lt;h3 id="generate-an-api-token">Generate an API token&lt;/h3>
&lt;p>In order to register a new reverse proxy, you need to create an API token with &lt;em>&amp;quot;Network Administrator&amp;quot;&lt;/em> role. This token will be used by the reverse proxy to connect back to VMware Cloud deployments and provide connectivity between CDS and the AVS SDDC instances.&lt;/p>
&lt;ol>
&lt;li>In &lt;a href="https://console.cloud.vmware.com">VMware Cloud Director service console&lt;/a>, click on your user name and click &lt;em>My Account&lt;/em>.&lt;/li>
&lt;li>Select the API Tokens tab.&lt;/li>
&lt;li>Click Generate a new API token.&lt;/li>
&lt;li>Enter a meaningful name of the token and in Token TTL define for how long the token is valid.&lt;/li>
&lt;li>Define the scopes for the token: &lt;em>&amp;quot;Network Administrator&amp;quot;&lt;/em> is requested for the reverse proxy.&lt;/li>
&lt;/ol>
&lt;p>&lt;figure>
&lt;picture>
&lt;img
loading="lazy"
decoding="async"
alt="Generate an API token for reverse proxy"
class="image_figure image_internal image_unprocessed"
src="https://vuptime.io/images/avs-cds/generate-new-api-token.png"
/>
&lt;/picture>
&lt;/figure>
&lt;/p>
&lt;p>When created, copy the API token:&lt;/p>
&lt;p>&lt;figure>
&lt;picture>
&lt;img
loading="lazy"
decoding="async"
alt="Copy the generated API token"
class="image_figure image_internal image_unprocessed"
src="https://vuptime.io/images/avs-cds/generate-new-api-token-2.png"
/>
&lt;/picture>
&lt;/figure>
&lt;/p>
&lt;h3 id="generate-and-deploy-the-reverse-proxy-ova">Generate and deploy the Reverse Proxy OVA&lt;/h3>
&lt;p>Back on the CDS instance, you can generate a reverse proxy OVA by clicking on &lt;code>ACTIONS&lt;/code> menu and then on &lt;code>Generate Reverse Proxy OVA&lt;/code>.&lt;/p>
&lt;p>&lt;figure>
&lt;picture>
&lt;img
loading="lazy"
decoding="async"
alt="Wizard for reverse-proxy OVA generation"
class="image_figure image_internal image_unprocessed"
src="https://vuptime.io/images/avs-cds/generate-vmware-reverse-proxy-ova.png"
/>
&lt;/picture>
&lt;/figure>
&lt;/p>
&lt;p>When submitted, You can monitor the task status from instance's activity logs and when finished, select &lt;em>view files&lt;/em> to download the generated OVA file.&lt;/p>
&lt;p>&lt;figure>
&lt;picture>
&lt;img
loading="lazy"
decoding="async"
alt="Click on view files to get access to the Reverse PRoxy OVA"
class="image_figure image_internal image_unprocessed"
src="https://vuptime.io/images/avs-cds/download-vmware-reverse-proxy-ova.png"
/>
&lt;/picture>
&lt;/figure>
&lt;/p>
&lt;p>&lt;figure>
&lt;picture>
&lt;img
loading="lazy"
decoding="async"
alt="Download Reverse PRoxy OVA file"
class="image_figure image_internal image_unprocessed"
src="https://vuptime.io/images/avs-cds/download-vmware-reverse-proxy-ova-2.png"
/>
&lt;/picture>
&lt;/figure>
&lt;/p>
&lt;p>Then you can deploy it on the target vCenter server and provide the requested OVF environment properties, like appliance root password or IP address settings.&lt;/p>
&lt;div class="notices info">
&lt;div class="label">Additional Proxy Targets&lt;/div>
&lt;p>In order to allow the reverse proxy to connect to each component of the AVS instance (NSX-T manager, vCenter server, ESXi hosts), I suggest to consolidate the value of &lt;em>Additional Proxy Targets&lt;/em> property with the management subnet of the AVS instance or at least, adding the /25 subnet of the hosts management IP addresses.&lt;/p>
&lt;/div>
&lt;p>&lt;figure>
&lt;picture>
&lt;img
loading="lazy"
decoding="async"
alt="Deploy Reverse PRoxy OVA file and provide requested OVF environment properties"
class="image_figure image_internal image_unprocessed"
src="https://vuptime.io/images/avs-cds/deploy-vmware-reverse-proxy-ova.png"
/>
&lt;/picture>
&lt;/figure>
&lt;/p>
&lt;p>Power-on the VM and wait for the VMware tools to show up with the IP address details.&lt;/p>
&lt;h3 id="associate-the-avs-datacenter-via-the-reverse-proxy">Associate the AVS datacenter via the Reverse Proxy&lt;/h3>
&lt;p>From VMware cloud console, select your instance and click on &lt;em>Associate a Datacenter via VMware Proxy&lt;/em> in the &lt;code>ACTIONS&lt;/code> menu.&lt;/p>
&lt;p>&lt;figure>
&lt;picture>
&lt;img
loading="lazy"
decoding="async"
alt="Click on: Associate a Datacenter via VMware Proxy"
class="image_figure image_internal image_unprocessed"
src="https://vuptime.io/images/avs-cds/associate-sddc-0.png"
/>
&lt;/picture>
&lt;/figure>
&lt;/p>
&lt;p>Provide the details of your AVS deployment:
&lt;figure>
&lt;picture>
&lt;img
loading="lazy"
decoding="async"
alt="Provide details about AVS components"
class="image_figure image_internal image_unprocessed"
src="https://vuptime.io/images/avs-cds/associate-sddc-1.png"
/>
&lt;/picture>
&lt;/figure>
&lt;/p>
&lt;p>Submit credentials:
&lt;figure>
&lt;picture>
&lt;img
loading="lazy"
decoding="async"
alt="Provide credentials for AVS components"
class="image_figure image_internal image_unprocessed"
src="https://vuptime.io/images/avs-cds/associate-sddc-2.png"
/>
&lt;/picture>
&lt;/figure>
&lt;/p>
&lt;p>Acknowledge costs and submit:
&lt;figure>
&lt;picture>
&lt;img
loading="lazy"
decoding="async"
alt="Acknowledge costs"
class="image_figure image_internal image_unprocessed"
src="https://vuptime.io/images/avs-cds/associate-sddc-3.png"
/>
&lt;/picture>
&lt;/figure>
&lt;/p>
&lt;p>Check the status of the task from &lt;em>Activity Logs&lt;/em>.
&lt;figure>
&lt;picture>
&lt;img
loading="lazy"
decoding="async"
alt="Successful association of a Datacenter via VMware Proxy"
class="image_figure image_internal image_unprocessed"
src="https://vuptime.io/images/avs-cds/associate-sddc-succeed.png"
/>
&lt;/picture>
&lt;/figure>
&lt;/p>
&lt;h2 id="deploy-your-workload-on-avs-by-using-cds">Deploy your workload on AVS by using CDS&lt;/h2>
&lt;p>When you AVS datacenter is properly associated with CDS, you can use CDS provider UI to deploy some workload.&lt;/p>
&lt;p>Use &lt;code>OPEN INSTANCE&lt;/code> button to access to the CDS provider UI.&lt;/p>
&lt;h3 id="check-association-avs-components">Check association AVS components&lt;/h3>
&lt;p>As CDS instance administrator, check the status of the association with AVS components:&lt;/p>
&lt;p>&lt;figure>
&lt;picture>
&lt;img
loading="lazy"
decoding="async"
alt="Check the status of the association of vCenter server"
class="image_figure image_internal image_unprocessed"
src="https://vuptime.io/images/avs-cds/check-association-vcenter.png"
/>
&lt;/picture>
&lt;/figure>
&lt;/p>
&lt;p>&lt;figure>
&lt;picture>
&lt;img
loading="lazy"
decoding="async"
alt="Check the status of the association of NSX-T Manager"
class="image_figure image_internal image_unprocessed"
src="https://vuptime.io/images/avs-cds/check-association-nsx.png"
/>
&lt;/picture>
&lt;/figure>
&lt;/p>
&lt;div class="notices info">
&lt;div class="label">Inventory&lt;/div>
&lt;p>&lt;em>Hosts&lt;/em>, &lt;em>Datastores&lt;/em> (vSAN one at least), &lt;em>ResourcesPools&lt;/em> and &lt;em>Storage Policies&lt;/em> will also be populated with the discovered information from AVS inventory.&lt;/p>
&lt;/div>
&lt;h3 id="providers-cloud-resources">Provider's cloud resources&lt;/h3>
&lt;p>From this point, you can now create provider's cloud resources, like with any other (v)Cloud Director deployment:&lt;/p>
&lt;ul>
&lt;li>1 or more, provider VDC&lt;/li>
&lt;li>1 or more, external networks&lt;/li>
&lt;li>Pre-provision NSX-T T1 gateways if needed&lt;/li>
&lt;li>Provider's user accounts&lt;/li>
&lt;/ul>
&lt;h3 id="create-organizations-and-associated-resources">Create Organizations and associated resources&lt;/h3>
&lt;p>Like for provider's cloud resources, you can create organizations and associated resources:&lt;/p>
&lt;ul>
&lt;li>Organizations&lt;/li>
&lt;li>Organization's vDCs&lt;/li>
&lt;li>Quota definitions and storage policies&lt;/li>
&lt;li>Organization's networks&lt;/li>
&lt;li>Users and org settings&lt;/li>
&lt;/ul>
&lt;p>I recommend that you test the deployment of a VM (using catalog based clone or vSphere import) to validate the following:&lt;/p>
&lt;ul>
&lt;li>Network connectivity&lt;/li>
&lt;li>Storage policies&lt;/li>
&lt;li>Access to VM console&lt;/li>
&lt;/ul>
&lt;p>&lt;figure>
&lt;picture>
&lt;img
loading="lazy"
decoding="async"
alt="Fully configured AVS Organization&amp;amp;#39;s VDC"
class="image_figure image_internal image_unprocessed"
src="https://vuptime.io/images/avs-cds/avs-based-org-vdc.png"
/>
&lt;/picture>
&lt;/figure>
&lt;/p>
&lt;h2 id="overview-of-cds-instance-resources-capacity-and-usage">Overview of CDS instance resources capacity and usage&lt;/h2>
&lt;p>From VMware cloud portal, you can now see the resources capacity and usage of your CDS instance:&lt;/p>
&lt;p>&lt;figure>
&lt;picture>
&lt;img
loading="lazy"
decoding="async"
alt="Overview of CDS instance resources and usage"
class="image_figure image_internal image_unprocessed"
src="https://vuptime.io/images/avs-cds/cds-instance-capacity-and-usage.png"
/>
&lt;/picture>
&lt;/figure>
&lt;/p>
&lt;h2 id="troubleshoot">Troubleshoot&lt;/h2>
&lt;h3 id="support-levels">Support levels&lt;/h3>
&lt;p>VMware provide 4 levels of support for CDS instances:&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Level 1&lt;/strong>: As a service provider, only you have access to the VMware Cloud Director software. To receive technical support, collect logs and upload them to VMware Global Support Services for review and analysis. see How Do I Report a Problem.&lt;/li>
&lt;li>&lt;strong>Level 2&lt;/strong>: VMware uses automated monitoring to review VMware Cloud Director operations for technical support purposes.&lt;/li>
&lt;li>&lt;strong>Level 3 (Recommended)&lt;/strong>: VMware technical support personnel can access the VMware Cloud Director instance to provide support and maintenance.&lt;/li>
&lt;li>&lt;strong>Level 3 (Escalated VMware support)&lt;/strong>: A larger number of VMware technical support personnel has access and can interact with the VMware Cloud Director instance to provide active support and maintenance.&lt;/li>
&lt;/ul>
&lt;p>You can easily switch between levels of support by clicking on the &lt;strong>Modify Cloud Director Instance support level&lt;/strong> button in the CDS instance's &lt;strong>ACTIONS&lt;/strong> menu.&lt;/p>
&lt;h3 id="generate-cds-instance-log-bundles">Generate CDS instance log bundles&lt;/h3>
&lt;p>As CDS instance administrator, you can generate log bundles to troubleshoot your CDS instance, using &lt;em>Create Support Bundle&lt;/em> button in the CDS instance's &lt;strong>ACTIONS&lt;/strong> menu.&lt;/p>
&lt;p>From instance's details (or &lt;strong>Activity Logs&lt;/strong>), you can download the generated log bundle:&lt;/p>
&lt;p>&lt;figure>
&lt;picture>
&lt;img
loading="lazy"
decoding="async"
alt="Download CDS instance log bundle"
class="image_figure image_internal image_unprocessed"
src="https://vuptime.io/images/avs-cds/download-cds-instance-log-bundle.png"
/>
&lt;/picture>
&lt;/figure>
&lt;/p>
&lt;h3 id="check-the-reverse-proxy-appliance-status">Check the reverse proxy appliance status&lt;/h3>
&lt;p>To check the reverse proxy appliance status you can:&lt;/p>
&lt;ol>
&lt;li>Run the following command by SSH on the appliance:&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="ln">1&lt;/span>&lt;span class="cl">transporter-status.sh
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="2">
&lt;li>or, remotly get the JSON content from reverse proxy API:&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="ln">1&lt;/span>&lt;span class="cl">curl -s http://10.100.110.50:9082/actuator/health &lt;span class="p">|&lt;/span> jq .components.reverseProxyClient
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-json" data-lang="json">&lt;span class="line">&lt;span class="ln"> 1&lt;/span>&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 2&lt;/span>&lt;span class="cl"> &lt;span class="nt">&amp;#34;status&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;UP&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 3&lt;/span>&lt;span class="cl"> &lt;span class="nt">&amp;#34;details&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 4&lt;/span>&lt;span class="cl"> &lt;span class="nt">&amp;#34;server&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;proxy-pre-intrepid.cds.cloud.vmware.com&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 5&lt;/span>&lt;span class="cl"> &lt;span class="nt">&amp;#34;port&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;443&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 6&lt;/span>&lt;span class="cl"> &lt;span class="nt">&amp;#34;optionalIdentifier&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;ebe11b93-f7f4-4b84-be4d-efe20f220594&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 7&lt;/span>&lt;span class="cl"> &lt;span class="nt">&amp;#34;clientVersion&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;ob-19852460&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 8&lt;/span>&lt;span class="cl"> &lt;span class="nt">&amp;#34;clientId&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;016b9cff-7789-4622-8a0c-b06371270a3c&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 9&lt;/span>&lt;span class="cl"> &lt;span class="nt">&amp;#34;organizationId&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;309d33bd-****-****-****-************&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">10&lt;/span>&lt;span class="cl"> &lt;span class="nt">&amp;#34;networkName&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;AVS-CSU-FR-LRI&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">11&lt;/span>&lt;span class="cl"> &lt;span class="nt">&amp;#34;command_channel_1&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;CONNECTED&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">12&lt;/span>&lt;span class="cl"> &lt;span class="nt">&amp;#34;command_channel_2&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;CONNECTED&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">13&lt;/span>&lt;span class="cl"> &lt;span class="nt">&amp;#34;allowedTargets&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">14&lt;/span>&lt;span class="cl"> &lt;span class="nt">&amp;#34;10.100.100.2&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;REACHABLE&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">15&lt;/span>&lt;span class="cl"> &lt;span class="nt">&amp;#34;10.100.100.3&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;REACHABLE&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">16&lt;/span>&lt;span class="cl"> &lt;span class="nt">&amp;#34;10.100.101.0/25&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;NOT_CHECKED_CIDR&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">17&lt;/span>&lt;span class="cl"> &lt;span class="nt">&amp;#34;vc.970e82e4d*************.northeurope.avs.azure.com&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;REACHABLE&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">18&lt;/span>&lt;span class="cl"> &lt;span class="nt">&amp;#34;nsx.970e82e4d*************.northeurope.avs.azure.com&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;REACHABLE&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">19&lt;/span>&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">20&lt;/span>&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">21&lt;/span>&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="check-the-reverse-proxy-appliance-logs">Check the reverse proxy appliance logs&lt;/h3>
&lt;p>You can check the reverse proxy appliance logs by SSH on the appliance:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="ln">1&lt;/span>&lt;span class="cl">transporter-logs.sh -f
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>You can also filter on error and warning messages with: &lt;code>-e&lt;/code> and &lt;code>-w&lt;/code> flags:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="ln">1&lt;/span>&lt;span class="cl">transporter-logs.sh -e &lt;span class="c1"># Will grep for errors&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">2&lt;/span>&lt;span class="cl">transporter-logs.sh -w &lt;span class="c1"># Will grep for warnings&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="change-a-value-of-ovf-properties">Change a value of OVF properties&lt;/h3>
&lt;p>If you want to change a value of OVF properties, you can:&lt;/p>
&lt;ul>
&lt;li>Shutdown the proxy/transporter appliance VM&lt;/li>
&lt;li>Go to VM &lt;em>Configure&lt;/em> tab&lt;/li>
&lt;li>Then &lt;em>vApp Options&lt;/em>&lt;/li>
&lt;li>Select the property to edit and click on &lt;em>Set Value&lt;/em>&lt;/li>
&lt;li>Validate change and start the VM&lt;/li>
&lt;/ul>
&lt;p>The on-boot script will fetch OVF's new values and update the deployed proxy services accordingly.&lt;/p>
&lt;h2 id="conclusion">Conclusion&lt;/h2>
&lt;p>The combination of Azure VMware Solution with VMware Cloud Service, is a powerful tool to provide a self-service experience for end users to consume VMware based resources.&lt;/p>
&lt;p>With the &lt;em>reverse proxy&lt;/em> concept, it is possible to link VMware SDDC deployment in a private network with the SaaS version of vCloud Director. This IaaS &amp;amp; SaaS deployment model, delegates management responsibility to both VMware and Microsoft Azure but provides the same UI experience for both vCD administrator and end users.&lt;/p>
&lt;h3 id="acknowledgment">Acknowledgment&lt;/h3>
&lt;p>Thanks a lot &lt;a href="https://twitter.com/tsugliani">@Timo&lt;/a> for the great help and support provided when testing this deployment.&lt;/p>
&lt;h3 id="credits">Credits&lt;/h3>
&lt;p>Title photo by &lt;a href="https://unsplash.com/@kierinsight?utm_source=unsplash&amp;utm_medium=referral&amp;utm_content=creditCopyText">Kier In Sight&lt;/a> on &lt;a href="https://unsplash.com/t/nature?utm_source=unsplash&amp;utm_medium=referral&amp;utm_content=creditCopyText">Unsplash&lt;/a>&lt;/p></description></item><item><title>Azure VMware Solution – Use public IP on NSX-T Edge</title><link>https://vuptime.io/post/2022-08-12-azure-vmware-solution-public-ip-on-nsx-edge/</link><pubDate>Wed, 17 Aug 2022 00:00:00 +0000</pubDate><guid>https://vuptime.io/post/2022-08-12-azure-vmware-solution-public-ip-on-nsx-edge/</guid><description>
&lt;p>A few days ago, Microsoft released a new feature for Azure VMware Solution: &lt;em>&lt;a href="https://docs.microsoft.com/en-us/azure/azure-vmware/enable-public-ip-nsx-edge">Enable Public IP to the NSX Edge&lt;/a>&lt;/em>. I take the opportunity to review this new feature and the other options available to provide Internet connectivity to your Azure VMware Solution (both for In or Out-bound traffic).&lt;/p>
&lt;h2 id="internet-access-options-for-azure-vmware-solution">Internet access options for Azure VMware solution&lt;/h2>
&lt;p>To provide internet access (inbound and/outbound) to an Azure VMware Solution deployment, 3 options are available:&lt;/p>
&lt;ol>
&lt;li>Use a Microsoft-managed SNAT (outbound connectivity only) (&lt;a href="https://docs.microsoft.com/en-us/azure/azure-vmware/enable-managed-snat-for-workloads">doc.&lt;/a>)&lt;/li>
&lt;li>Advertise a default route using Azure Firewall, Azure vWAN or a third-party Network Virtual Appliance (NVA) (&lt;a href="https://docs.microsoft.com/en-us/azure/azure-vmware/disable-internet-access">doc.&lt;/a>)&lt;/li>
&lt;li>Use Public IP address(es) published down to the NSX-T Edge (&lt;a href="https://docs.microsoft.com/en-us/azure/azure-vmware/enable-public-ip-nsx-edge">doc.&lt;/a>)&lt;/li>
&lt;/ol>
&lt;p>Each option has its own &lt;a href="https://docs.microsoft.com/en-us/azure/azure-vmware/concepts-design-public-internet-access">advantages and disadvantages&lt;/a> and is summarized below.&lt;/p>
&lt;h3 id="microsoft-managed-snat">Microsoft-managed SNAT&lt;/h3>
&lt;p>The Microsoft-managed SNAT option (&lt;a href="https://docs.microsoft.com/en-us/azure/azure-vmware/enable-managed-snat-for-workloads">doc.&lt;/a>) is the easiest and cost-effective option for &lt;strong>outbound&lt;/strong> (only) &lt;strong>connectivity&lt;/strong> as the public IP addresses are fully managed by Microsoft &lt;strong>free of charge&lt;/strong>.&lt;/p>
&lt;p>In this scenario, 2 public IPs are used and rotated to provide outbound connectivity to the Azure VMware Solution workloads with up to 128 000 concurrent connections.&lt;/p>
&lt;p>This comes with the following limitations:&lt;/p>
&lt;ul>
&lt;li>No inbound connectivity&lt;/li>
&lt;li>No control of outbound SNAT rules&lt;/li>
&lt;li>No connection logs&lt;/li>
&lt;li>Hard limit of 128 000 concurrent connections&lt;/li>
&lt;/ul>
&lt;h3 id="advertise-a-default-route">Advertise a default route&lt;/h3>
&lt;p>The second option for Internet connectivity in Azure VMware Solution is based on the default route advertisement from another component in the Azure infrastructure (&lt;a href="https://docs.microsoft.com/en-us/azure/azure-vmware/disable-internet-access">doc.&lt;/a>).&lt;/p>
&lt;p>This advertisement can be done using:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://docs.microsoft.com/en-us/azure/firewall/overview">Azure Firewall&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://docs.microsoft.com/en-us/azure/virtual-wan/virtual-wan-about">Azure vWAN&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://docs.microsoft.com/en-us/azure/architecture/reference-architectures/dmz/nva-ha">Third-party Network Virtual Appliance&lt;/a> (NVA)&lt;/li>
&lt;li>A routing component deployed on-premises&lt;/li>
&lt;/ul>
&lt;p>If no default-route is advertised to AVS, the VMs will not be able to access the internet: this option is also the one used to &lt;strong>disable internet access on AVS deployment&lt;/strong>.&lt;/p>
&lt;p>This option could provide inbound connectivity, control of SNAT and DNAT rules, connections logs but is more complex to deploy and will involve additional charges (for public IP addresses, Firewall or routing devices etc.)&lt;/p>
&lt;h3 id="public-ip-address-published-down-to-the-nsx-t-edge">Public IP address published down to the NSX-T Edge&lt;/h3>
&lt;p>What was recently announced as a new GA feature in Azure VMware Solution is the publication of public IP address(es) down to the NSX-T Edge (&lt;a href="https://docs.microsoft.com/en-us/azure/azure-vmware/enable-public-ip-nsx-edge">doc.&lt;/a>). This is the third option for Internet connectivity in Azure VMware Solution and it provides the best of the 2 previous options.&lt;/p>
&lt;ul>
&lt;li>Inbound and outbound connectivity&lt;/li>
&lt;li>Control of SNAT and DNAT rules&lt;/li>
&lt;li>Connection logs&lt;/li>
&lt;li>No additional components to deploy (Azure Firewall, Azure vWAN, third-party NVA)&lt;/li>
&lt;/ul>
&lt;p>On top of this, this new feature also enables:&lt;/p>
&lt;ul>
&lt;li>A unified experience based on AVS native components only: Azure Resource Manager and NSX-T&lt;/li>
&lt;li>The ability to receive up to 64 public IPs (soft limit)
&lt;ul>
&lt;li>This quota can be increased by request to 1000s of Public IPs allocated if required&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>DDoS Security protection against network traffic in and out of the Internet.&lt;/li>
&lt;li>HCX Migration support over the Public Internet.&lt;/li>
&lt;/ul>
&lt;h4 id="pricing-considerations">Pricing considerations&lt;/h4>
&lt;p>With this new feature, Public IP addresses published for an AVS instance are billed separately from the AVS instance itself as IP addresses used for other Azure purposes.&lt;/p>
&lt;p>The pricing details are explained here: &lt;a href="https://azure.microsoft.com/en-us/pricing/details/ip-addresses/">IP Addresses pricing&lt;/a> and to summarize it:&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Type&lt;/th>
&lt;th>Standard (ARM)&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>Public IP prefix (block of addresses)&lt;/td>
&lt;td>$.006 per IP per hour&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;div class="notices info">
&lt;div class="label">Public IP addresses pricing&lt;/div>
&lt;p>Always check the &lt;a href="https://azure.microsoft.com/en-us/pricing/details/ip-addresses/">pricing details from the official Azure documentation&lt;/a> before you purchase an IP address. The above table is only an extract at the time of this writing.&lt;/p>
&lt;/div>
&lt;h2 id="reserve-public-ip-addresses-for-azure-vmware-solution">Reserve public IP addresses for Azure VMware Solution&lt;/h2>
&lt;p>Since the publication of the new feature providing public IPs on NSX-T Edge, a new section &lt;em>Internet Connectivity&lt;/em> is available in the Azure portal to manage AVS internet access options.&lt;/p>
&lt;p>&lt;figure>
&lt;picture>
&lt;img
loading="lazy"
decoding="async"
alt="AVS Internet Connectivity section in Azure portal"
class="image_figure image_internal image_unprocessed"
src="https://vuptime.io/images/avs-public-ip/internet-connectivity-section.png"
/>
&lt;/picture>
&lt;/figure>
&lt;/p>
&lt;p>To enable internet access with public IPs on NSX-T Edge, at least one public IP block is needed. You can create one by providing a name and the number of IPs you want to allocate.&lt;/p>
&lt;p>&lt;figure>
&lt;picture>
&lt;img
loading="lazy"
decoding="async"
alt="Create Public IPs block"
class="image_figure image_internal image_unprocessed"
src="https://vuptime.io/images/avs-public-ip/create-ip-block.png"
/>
&lt;/picture>
&lt;/figure>
&lt;/p>
&lt;p>When the block request is submitted, you can save the new internet access settings. The block will be created and the IPs will be allocated in the background while the block is advertised to the AVS deployment.&lt;/p>
&lt;p>&lt;figure>
&lt;picture>
&lt;img
loading="lazy"
decoding="async"
alt="Save the new internet connectivity option"
class="image_figure image_internal image_unprocessed"
src="https://vuptime.io/images/avs-public-ip/set-internet-option.png"
/>
&lt;/picture>
&lt;/figure>
&lt;/p>
&lt;p>It may take around 10 to 15 minutes to complete the new configuration. If internet access was already enable on the AVS deployment, a downtime is expected during the re-configuration and NSX-T configuration will be required.&lt;/p>
&lt;p>When the configuration is completed, the new block will be available in the list of public IP blocks:&lt;/p>
&lt;p>&lt;figure>
&lt;picture>
&lt;img
loading="lazy"
decoding="async"
alt="List of public IP spaces provisioned for the current AVS instance"
class="image_figure image_internal image_unprocessed"
src="https://vuptime.io/images/avs-public-ip/public-ip-spaces.png"
/>
&lt;/picture>
&lt;/figure>
&lt;/p>
&lt;h2 id="enable-outbound-internet-access-using-snat">Enable outbound internet access using SNAT&lt;/h2>
&lt;p>Enabling outbound internet access requires to configure (at least) a SNAT rule on the NSX-T T1 router.&lt;/p>
&lt;ol>
&lt;li>Logging to NSX-T manager&lt;/li>
&lt;li>In the &lt;em>networking&lt;/em> tab, access to the &lt;em>NAT&lt;/em> section&lt;/li>
&lt;li>Select the appropriate T1 router to provision the SNAT rule on&lt;/li>
&lt;li>Create a new SNAT rule with name, and an IP address from the provisioned block to use for outbound connectivity&lt;/li>
&lt;li>Save&lt;/li>
&lt;/ol>
&lt;p>&lt;figure>
&lt;picture>
&lt;img
loading="lazy"
decoding="async"
alt="Create a NSX-T SNAT rule to enable outbound internet connectivity"
class="image_figure image_internal image_unprocessed"
src="https://vuptime.io/images/avs-public-ip/create-nsx-snat.png"
/>
&lt;/picture>
&lt;/figure>
&lt;/p>
&lt;div class="notices info">
&lt;div class="label">Firewall configuration&lt;/div>
&lt;p>Depending on the firewall configuration on NSX-T, you may have to create firewall rules to allow the traffic to pass through.&lt;/p>
&lt;/div>
&lt;h2 id="enable-inbound-internet-access">Enable inbound internet access&lt;/h2>
&lt;h3 id="inbound-connectivity-with-dnat">Inbound connectivity with DNAT&lt;/h3>
&lt;p>The inbound internet access could rely on a DNAT rule, forwarding the traffic from the public IP address to the internal IP address of the workload (either a VM or a network service).&lt;/p>
&lt;ol>
&lt;li>Logging to NSX-T manager&lt;/li>
&lt;li>In the &lt;em>networking&lt;/em> tab, access to the &lt;em>NAT&lt;/em> section&lt;/li>
&lt;li>Select the appropriate T1 router to provision the DNAT rule on&lt;/li>
&lt;li>Provide a name, a public IP address from the provisioned block and an internal IP address to forward the traffic to&lt;/li>
&lt;li>Save&lt;/li>
&lt;/ol>
&lt;p>&lt;figure>
&lt;picture>
&lt;img
loading="lazy"
decoding="async"
alt="Create a NSX-T DNAT rule to enable inbound internet connectivity"
class="image_figure image_internal image_unprocessed"
src="https://vuptime.io/images/avs-public-ip/create-nsx-dnat.png"
/>
&lt;/picture>
&lt;/figure>
&lt;/p>
&lt;div class="notices info">
&lt;div class="label">Firewall configuration&lt;/div>
&lt;p>Depending on the firewall configuration on NSX-T, you may have to create firewall rules to allow the traffic to pass through.&lt;/p>
&lt;/div>
&lt;h3 id="inbound-connectivity-with-dnat-and-port-redirection">Inbound connectivity with DNAT and port redirection&lt;/h3>
&lt;p>With the DNAT rule, you can also redirect traffic to a different port. For example, you can redirect traffic from the public IP address on port 80 to a different port on the internal workload, like 8000.&lt;/p>
&lt;p>For this, you need to specify a &lt;em>service&lt;/em> matching the port of the internal workload during the DNAT rule creation (8000 in our example).&lt;/p>
&lt;p>&lt;figure>
&lt;picture>
&lt;img
loading="lazy"
decoding="async"
alt="Creation of a dev-http service matching port 8000"
class="image_figure image_internal image_unprocessed"
src="https://vuptime.io/images/avs-public-ip/dev-http-service.png"
/>
&lt;/picture>
&lt;/figure>
&lt;/p>
&lt;p>Then to specified as the Translated Port, the port exposed on the public IP address (80 in our example).&lt;/p>
&lt;p>&lt;figure>
&lt;picture>
&lt;img
loading="lazy"
decoding="async"
alt="Create a NSX-T DNAT rule to enable inbound internet connectivity with port redirection"
class="image_figure image_internal image_unprocessed"
src="https://vuptime.io/images/avs-public-ip/create-nsx-dnat-with-port-redirect.png"
/>
&lt;/picture>
&lt;/figure>
&lt;/p>
&lt;h3 id="inbound-connectivity-using-nsx-t-load-balancer">Inbound connectivity using NSX-T Load Balancer&lt;/h3>
&lt;p>As public IP address can now land directly on the NSX-T edge, it is possible to setup a NSX-T &lt;strong>Load Balancer&lt;/strong> to provide inbound connectivity to the AVS workloads.&lt;/p>
&lt;p>First step is to create a Load Balancer service, attached to the NSX-T T1 gateway and to specify a sizing.&lt;/p>
&lt;p>&lt;figure>
&lt;picture>
&lt;img
loading="lazy"
decoding="async"
alt="Load Balancer service creation"
class="image_figure image_internal image_unprocessed"
src="https://vuptime.io/images/avs-public-ip/load-balancer-1.png"
/>
&lt;/picture>
&lt;/figure>
&lt;/p>
&lt;p>Second step is to create a &lt;em>Virtual Server&lt;/em>, attached to the Load Balancer service and to specify the port and the IP address of the workload.&lt;/p>
&lt;p>&lt;figure>
&lt;picture>
&lt;img
loading="lazy"
decoding="async"
alt="Creation of the Virtual Server"
class="image_figure image_internal image_unprocessed"
src="https://vuptime.io/images/avs-public-ip/load-balancer-2.png"
/>
&lt;/picture>
&lt;/figure>
&lt;/p>
&lt;p>Then &lt;em>Server Pool&lt;/em> is created and attached to the &lt;em>virtual server&lt;/em>. It contains a list of workers hosting the load-balancer application.&lt;/p>
&lt;p>&lt;figure>
&lt;picture>
&lt;img
loading="lazy"
decoding="async"
alt="Server Pool creation"
class="image_figure image_internal image_unprocessed"
src="https://vuptime.io/images/avs-public-ip/load-balancer-3.png"
/>
&lt;/picture>
&lt;/figure>
&lt;/p>
&lt;p>Last but not least: an &lt;em>Active Monitor&lt;/em> is created to monitor the &lt;em>Server Pool&lt;/em>.&lt;/p>
&lt;p>&lt;figure>
&lt;picture>
&lt;img
loading="lazy"
decoding="async"
alt="Active monitor creation"
class="image_figure image_internal image_unprocessed"
src="https://vuptime.io/images/avs-public-ip/load-balancer-4.png"
/>
&lt;/picture>
&lt;/figure>
&lt;/p>
&lt;h2 id="conclusion">Conclusion&lt;/h2>
&lt;p>With the new &lt;em>Public IP address down to the NSX-T edge&lt;/em> feature now available for AVS, new capabilities are available to manage the internet connectivity of the AVS workloads. One of the most important advantages is the ability to rely on NSX-T components to configure and securise both inbound and outbound internet connectivity. It is also possible to directly use public IP addresses with NSX-T services like Load Balancer or VPN.&lt;/p>
&lt;p>Of course, this setup will not satisfy all the thinkable internet connectivity requirements but it offers a new set of possibilities and is a real asset to consider to host internet-facing applications or to control outgoing internet connections.&lt;/p>
&lt;h3 id="credits">Credits&lt;/h3>
&lt;p>Photo by &lt;a href="https://unsplash.com/@clementduguerre?utm_source=unsplash&amp;utm_medium=referral&amp;utm_content=creditCopyText">Clément Duguerre&lt;/a> on &lt;a href="https://unsplash.com/s/photos/pyrenee?utm_source=unsplash&amp;utm_medium=referral&amp;utm_content=creditCopyText">Unsplash&lt;/a>&lt;/p></description></item><item><title>Public preview – Azure Arc-enabled VMware vSphere – Part 3</title><link>https://vuptime.io/post/2022-04-29-arc-enabled-vmware-vsphere-part3/</link><pubDate>Fri, 29 Apr 2022 00:00:00 +0000</pubDate><guid>https://vuptime.io/2022/04/29/arc-enabled-vmware-vsphere-part3</guid><description>
&lt;p>In the two first posts of this series on &lt;em>Azure Arc-enabled VMware vSphere&lt;/em>, we managed to extend Azure governance and management capabilities on VMware-based resources and to demonstrate the creation of a VMware virtual machine from the Azure portal.&lt;/p>
&lt;p>If you missed on of the 2 firsts posts:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://vuptime.io/2022/04/25/arc-enabled-vmware-vsphere-part1">Azure Arc-enabled VMware vSphere – Part 1&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://vuptime.io/2022/04/27/arc-enabled-vmware-vsphere-part2">Azure Arc-enabled VMware vSphere – Part 2&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>In the following sections we will see examples of automation solutions that are available to manage VMware resources through Azure tools.&lt;/p>
&lt;h2 id="azure-cli">Azure CLI&lt;/h2>
&lt;p>&lt;em>Azure Arc-enabled VMware vSphere&lt;/em> provides an Azure CLI extension named &lt;code>connectedvmware&lt;/code> to manage VMware resources through Azure CLI. The &lt;a href="https://docs.microsoft.com/en-us/cli/azure/connectedvmware?view=azure-cli-latest">extension documentation&lt;/a> provides a full reference of the available commands and arguments.&lt;/p>
&lt;p>Here are some examples of what you can achieve with this extension:&lt;/p>
&lt;p>List vCenter servers registered in Azure Arc:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="ln">1&lt;/span>&lt;span class="cl">az connectedvmware vcenter list --output table --query &lt;span class="s2">&amp;#34;[].{resourceGroup:resourceGroup, name:name, location:location, version:version}&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">2&lt;/span>&lt;span class="cl">ResourceGroup Name Location Version
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">3&lt;/span>&lt;span class="cl">--------------- ----------------- ---------- ---------
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">4&lt;/span>&lt;span class="cl">arc-RG north-eu-avs-vcsa westeurope 6.7.0
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>List all inventory items from a vCenter server:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="ln">1&lt;/span>&lt;span class="cl">az connectedvmware vcenter inventory-item list --output table --resource-group &lt;span class="s2">&amp;#34;arc-RG&amp;#34;&lt;/span> --vcenter &lt;span class="s2">&amp;#34;north-eu-avs-vcsa&amp;#34;&lt;/span> --query &lt;span class="s2">&amp;#34;[].{kind:kind, name:moName}&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">2&lt;/span>&lt;span class="cl">Kind Name
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">3&lt;/span>&lt;span class="cl">---------------------- --------------------------------------------------------------
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">4&lt;/span>&lt;span class="cl">VirtualNetwork VM-tests-110
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">5&lt;/span>&lt;span class="cl">Host esx19-r18.p01.**********************.northeurope.avs.azure.com
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">6&lt;/span>&lt;span class="cl">VirtualMachineTemplate Arc-Template
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">7&lt;/span>&lt;span class="cl">ResourcePool Resources
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">8&lt;/span>&lt;span class="cl">...
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>List Virtual Machines registered in Azure Arc:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="ln">1&lt;/span>&lt;span class="cl">az connectedvmware vm list --output table --query &lt;span class="s2">&amp;#34;[].{resourceGroup:resourceGroup, name:name, location:location, instanceUuid:instanceUuid}&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">2&lt;/span>&lt;span class="cl">ResourceGroup Name Location InstanceUuid
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">3&lt;/span>&lt;span class="cl">--------------- ---------- ---------- ------------------------------------
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">4&lt;/span>&lt;span class="cl">arc-RG Ubuntu04 westeurope 67bc57b8-6464-4658-8e04-7cc9d6d5cb04
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">5&lt;/span>&lt;span class="cl">arc-RG Windows01 westeurope caccc302-e28b-4c70-b2c0-24a614d470e6
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">6&lt;/span>&lt;span class="cl">arc-RG Ubuntu03 westeurope 39f8ef01-efd5-4268-88a0-2831bece69e7
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">7&lt;/span>&lt;span class="cl">arc-RG Windows03 westeurope f111aa56-f755-494d-9871-72154779792b
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">8&lt;/span>&lt;span class="cl">arc-RG Windows02 westeurope 1fba47c2-dba5-4ee3-b295-3bdbd043fbb8
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Restart a virtual machine&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="ln">1&lt;/span>&lt;span class="cl">az connectedvmware vm restart --name Windows02 --resource-group arc-RG
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">2&lt;/span>&lt;span class="cl"> &lt;span class="se">\ &lt;/span>Running ..
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="arm-deployment">ARM deployment&lt;/h2>
&lt;p>According to &lt;a href="https://docs.microsoft.com/en-us/azure/azure-resource-manager/management/overview">Microsoft documentation&lt;/a>:&lt;/p>
&lt;blockquote>
&lt;p>&lt;strong>Azure Resource Manager&lt;/strong> is the deployment and management service for Azure. It provides a management layer that enables you to create, update, and delete resources in your Azure account. You use management features, like access control, locks, and tags, to secure and organize your resources after deployment.&lt;/p>
&lt;/blockquote>
&lt;p>ARM is the core engine used by API, UI &amp;amp; Azure tools to manage Azure resources and it provide a declarative Infrastructure-as-code language to deploy and maintain resources: ARM Templates. ARM Templates can use &lt;a href="https://docs.microsoft.com/en-us/azure/azure-resource-manager/bicep/compare-template-syntax">JSON&lt;/a> or &lt;a href="https://docs.microsoft.com/en-us/azure/azure-resource-manager/bicep/overview">Bicep&lt;/a> syntax.&lt;/p>
&lt;p>As other resources, Azure-enabled components of a VMware infrastructure can be managed through ARM and ARM Templates.&lt;/p>
&lt;p>Lets see a minimal ARM Template to deploy a VMware virtual machine: &lt;strong>&lt;a href="https://vuptime.io/images/arc-vmware/vmware-vm-template.bicep">Download the Bicep file&lt;/a>&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="ln"> 1&lt;/span>&lt;span class="cl">curl https://vuptime.io/images/arc-vmware/vmware-vm-template.bicep &amp;gt; ./vmware-vm-template.bicep
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 2&lt;/span>&lt;span class="cl">&lt;span class="c1"># edit the file to set proper resources ids and customize your deployment parameters&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 3&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 4&lt;/span>&lt;span class="cl">&lt;span class="c1"># Start the deployment&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 5&lt;/span>&lt;span class="cl">az deployment group create --name vm-creation --resource-group arc-RG --template-file ./vmware-vm-template.bicep --parameters &lt;span class="nv">VMName&lt;/span>&lt;span class="o">=&lt;/span>Ubuntu08
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 6&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 7&lt;/span>&lt;span class="cl">&lt;span class="c1"># Display some information about the deployed VM&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 8&lt;/span>&lt;span class="cl">az connectedvmware vm show --output table --resource-group &lt;span class="s2">&amp;#34;arc-RG&amp;#34;&lt;/span> --name &lt;span class="s2">&amp;#34;Ubuntu06&amp;#34;&lt;/span> --query &lt;span class="s2">&amp;#34;{resourceGroup:resourceGroup, name:name, location:location, instanceUuid:instanceUuid}&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 9&lt;/span>&lt;span class="cl">ResourceGroup Name Location InstanceUuid
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">10&lt;/span>&lt;span class="cl">--------------- -------- ---------- ------------------------------------
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">11&lt;/span>&lt;span class="cl">arc-RG Ubuntu08 westeurope 18f07c4f-88f9-4cfd-adc7-0dc13007984c
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="conclusion">Conclusion&lt;/h2>
&lt;p>In the last three posts about &lt;em>Azure Arc-enabled VMware vSphere&lt;/em> we have discovered the benefits of managing VMware resources with the help of Azure Resource Manager by using Azure Arc.&lt;/p>
&lt;p>By extending Azure governance policy to infrastructure components out of the Azure native scope, it is possible to maintain a global security posture, to easily provide self-service VMware resources and to profit of Azure tools to manage a VMware environment.&lt;/p>
&lt;p>As the &lt;em>Azure Arc-enabled VMware vSphere&lt;/em> feature is &lt;a href="https://azure.microsoft.com/en-us/updates/public-preview-azure-arc-integration-with-vmware-vsphere/">still in a preview stage&lt;/a>, there will be a bunch of changes and enhancements before the Global Availability.&lt;/p>
&lt;p>If you missed the 2 first posts of this series:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://vuptime.io/2022/04/25/arc-enabled-vmware-vsphere-part1">Azure Arc-enabled VMware vSphere – Part 1&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://vuptime.io/2022/04/27/arc-enabled-vmware-vsphere-part2">Azure Arc-enabled VMware vSphere – Part 2&lt;/a>&lt;/li>
&lt;/ul>
&lt;h3 id="credits">Credits&lt;/h3>
&lt;p>Title photo by &lt;a href="https://unsplash.com/@bist31">Birger Strahl&lt;/a> on &lt;a href="https://unsplash.com/photos/1XhmIcBB-EA">Unsplash&lt;/a>&lt;/p></description></item><item><title>Public preview – Azure Arc-enabled VMware vSphere – Part 2</title><link>https://vuptime.io/post/2022-04-27-arc-enabled-vmware-vsphere-part2/</link><pubDate>Wed, 27 Apr 2022 00:00:00 +0000</pubDate><guid>https://vuptime.io/2022/04/27/arc-enabled-vmware-vsphere-part2</guid><description>
&lt;p>In the &lt;a href="https://vuptime.io/2022/04/25/arc-enabled-vmware-vsphere-part1">previous post (part 1)&lt;/a>, we covered the capabilities of &lt;em>Azure Arc-enabled VMware vSphere&lt;/em>: a solution to extend Azure governance and management policies to VMware based workload.&lt;/p>
&lt;p>We also deployed a &lt;em>Resource Bridge&lt;/em> to establish the connection between a VMware environment and Azure. We can now explore vCenter inventory through Azure and manage Virtual Machines.&lt;/p>
&lt;h2 id="explore-vcenter-inventory-from-azure-ui">Explore vCenter inventory from Azure UI&lt;/h2>
&lt;p>When vCenter and &lt;em>Resource Bridge&lt;/em> are connected to Azure Arc, you can explore its content and connection status:&lt;/p>
&lt;p>&lt;figure>
&lt;picture>
&lt;img
loading="lazy"
decoding="async"
alt="vCenter details in Azure Portal"
class="image_figure image_internal image_unprocessed"
src="https://vuptime.io/images/arc-vmware/arc-vmware-vcenter.png"
/>
&lt;/picture>
&lt;/figure>
&lt;/p>
&lt;p>In order to use a resource in Azure, an activation is required: Use the &lt;strong>Enable in Azure&lt;/strong> to activate an existing VMware resource in Azure. As with any Azure-based resource, RBAC strategies can be applied to provide or restrict access to &lt;em>Azure-enabled&lt;/em> resources.&lt;/p>
&lt;blockquote>
&lt;p>ResourcePool, Networks, Templates and Datastores will appear as &lt;em>hidden resources&lt;/em> in Azure &lt;em>ResourceGroup&lt;/em> you will select in the activation process. They will be used for the VM creation process but cannot be edited from Azure.&lt;/p>
&lt;/blockquote>
&lt;h3 id="resourcepools">ResourcePools&lt;/h3>
&lt;p>VMware &lt;em>ResourcePools&lt;/em> cannot be created, edited or remove but can be registered for VM creation scenario. By default, all resourcePools will be displayed in the inventory list (including Cluster and Hosts resourcePool representation). You can enable a ResourcePools in Azure by selecting it and click on &lt;strong>Enable in Azure&lt;/strong>. You will be prompted for an Azure &lt;em>ResourceGroup&lt;/em> attachment and the resourcePool will then be displayed with a link to explore its details.&lt;/p>
&lt;p>&lt;figure>
&lt;picture>
&lt;img
loading="lazy"
decoding="async"
alt="ResourcePools resources in Azure Portal"
class="image_figure image_internal image_unprocessed"
src="https://vuptime.io/images/arc-vmware/arc-vmware-resourcepool.png"
/>
&lt;/picture>
&lt;/figure>
&lt;/p>
&lt;h3 id="vm-templates">VM Templates&lt;/h3>
&lt;p>VMware &lt;em>VM Templates&lt;/em> cannot be created, edited or remove but can be registered for VM creation scenario. By default, all VM Templates will be displayed in the inventory list. You can enable a VM Template in Azure by selecting it and click on &lt;strong>Enable in Azure&lt;/strong>. You will be prompted for an Azure &lt;em>ResourceGroup&lt;/em> attachment and the Template will then be displayed with a link to explore its details.&lt;/p>
&lt;blockquote>
&lt;p>&lt;strong>Note&lt;/strong>: Currently, the template from the Content Library are not available. Only VM template from vCenter VM-folders inventory are usable in &lt;em>Azure Arc-enabled VMware vSphere&lt;/em>.&lt;/p>
&lt;/blockquote>
&lt;p>&lt;figure>
&lt;picture>
&lt;img
loading="lazy"
decoding="async"
alt="VM Templates in Azure Portal"
class="image_figure image_internal image_unprocessed"
src="https://vuptime.io/images/arc-vmware/arc-vmware-template.png"
/>
&lt;/picture>
&lt;/figure>
&lt;/p>
&lt;h3 id="networks">Networks&lt;/h3>
&lt;p>VMware &lt;em>Networks&lt;/em> cannot be created, edited or remove but can be registered for VM creation scenario. By default, all networks (NSX-T segments, PortGroups and DvPortGroups) will be displayed in the inventory list. You can enable a network in Azure by selecting it and click on &lt;strong>Enable in Azure&lt;/strong>. You will be prompted for an Azure &lt;em>ResourceGroup&lt;/em> attachment and the Template will then be displayed with a link to explore its details.&lt;/p>
&lt;p>&lt;figure>
&lt;picture>
&lt;img
loading="lazy"
decoding="async"
alt="Networks in Azure Portal"
class="image_figure image_internal image_unprocessed"
src="https://vuptime.io/images/arc-vmware/arc-vmware-network.png"
/>
&lt;/picture>
&lt;/figure>
&lt;/p>
&lt;h3 id="datastores">Datastores&lt;/h3>
&lt;p>VMware &lt;em>Datastores&lt;/em> cannot be created, edited or remove but can be registered for VM creation scenario. By default, all Datastores will be displayed in the inventory list. You can enable a Datastore in Azure by selecting it and click on &lt;strong>Enable in Azure&lt;/strong>. You will be prompted for an Azure &lt;em>ResourceGroup&lt;/em> attachment and the Datastore will then be displayed with a link to explore its details.&lt;/p>
&lt;p>&lt;figure>
&lt;picture>
&lt;img
loading="lazy"
decoding="async"
alt="Datastores in Azure Portal"
class="image_figure image_internal image_unprocessed"
src="https://vuptime.io/images/arc-vmware/arc-vmware-datastore.png"
/>
&lt;/picture>
&lt;/figure>
&lt;/p>
&lt;h2 id="vmware-virtual-machine-management-through-azure">VMware Virtual Machine management through Azure&lt;/h2>
&lt;p>As mentioned in the previous parts of this post, ResourcePool, Networks, Templates and Datastores cannot be created, edited or deleted through Azure (UI, API, ARM etc.) but can be registered with ReadOnly access to provide Virtual Machines deployment dependencies.&lt;/p>
&lt;p>The set of actions available for VMware Virtual Machines through Azure is more significant as you can:&lt;/p>
&lt;ul>
&lt;li>Run power operations (Start/Stop/Restart)&lt;/li>
&lt;li>Reconfigure Virtual Machine:
&lt;ul>
&lt;li>CPU/Memory (for powered-off VM)&lt;/li>
&lt;li>Disk(s) - Add/remove/resize&lt;/li>
&lt;li>Networks - Add/remove/Change network attachment&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Enable Arc-based guest management and install extensions&lt;/li>
&lt;li>Apply RBAC and tagging policies&lt;/li>
&lt;/ul>
&lt;blockquote>
&lt;p>&lt;em>VMware Arc-based guest extensions&lt;/em> are &lt;a href="https://docs.microsoft.com/en-us/azure/azure-arc/vmware-vsphere/manage-vmware-vms-in-azure#supported-extensions-and-management-services">currently limited to 2 extensions&lt;/a>: Log Analytics agent and cCustom Script execution.&lt;/p>
&lt;/blockquote>
&lt;h3 id="azure-arc-enabled-servers">Azure Arc enabled servers&lt;/h3>
&lt;p>If &lt;em>Azure Arc-enabled VMware vSphere&lt;/em> based guest agent is currently limited to 2 extensions, it is still possible to use the normal Arc process to integrate the guest OS management of deployed servers through Azure and to benefit from all the capabilities of &lt;a href="https://azure.microsoft.com/en-us/services/azure-arc/#product-overview">Azure Arc&lt;/a> like (as mentioned in the &lt;a href="https://docs.microsoft.com/en-us/azure/azure-arc/overview">Arc documentation&lt;/a>):&lt;/p>
&lt;ul>
&lt;li>Manage your entire environment together by projecting your existing non-Azure and/or on-premises resources into Azure Resource Manager.&lt;/li>
&lt;li>Manage virtual machines, Kubernetes clusters, and databases as if they are running in Azure.&lt;/li>
&lt;li>Use familiar Azure services and management capabilities, regardless of where they live.&lt;/li>
&lt;li>Continue using traditional ITOps while introducing DevOps practices to support new cloud native patterns in your environment.&lt;/li>
&lt;li>Configure custom locations as an abstraction layer on top of Azure Arc-enabled Kubernetes clusters and cluster extensions.&lt;/li>
&lt;/ul>
&lt;blockquote>
&lt;p>&lt;strong>Personal experience&lt;/strong>: I use this combination of &lt;em>Azure Arc-enabled VMware vSphere&lt;/em> and &lt;em>Azure Arc-enabled Servers&lt;/em> to fully manage, with Azure, VMware Virtual Machine objects and their Guest OS. This provide me the best of the two solutions.&lt;/p>
&lt;/blockquote>
&lt;h3 id="register-an-existing-vm">Register an existing VM&lt;/h3>
&lt;p>You can enable a Virtual Machine in Azure by selecting it and click on &lt;strong>Enable in Azure&lt;/strong>. You will be prompted for an Azure &lt;em>ResourceGroup&lt;/em> attachment and the VM will then be displayed with a link to explore its details.&lt;/p>
&lt;p>&lt;figure>
&lt;picture>
&lt;img
loading="lazy"
decoding="async"
alt="Details of an Azure-enabled VMware Virtual Machine"
class="image_figure image_internal image_unprocessed"
src="https://vuptime.io/images/arc-vmware/arc-vmware-vm-details.png"
/>
&lt;/picture>
&lt;/figure>
&lt;/p>
&lt;h3 id="create-a-vm">Create a VM&lt;/h3>
&lt;p>A VM object can also be fully created from Azure (UI or API).&lt;/p>
&lt;ol>
&lt;li>From the Arc Virtual Machines or Arc-registered vCenter list of VMs, click on &lt;strong>Create&lt;/strong> button to start the VM creation wizard.&lt;/li>
&lt;/ol>
&lt;p>&lt;figure>
&lt;picture>
&lt;img
loading="lazy"
decoding="async"
alt="VMware Virtual Machine creation process – Step 1"
class="image_figure image_internal image_unprocessed"
src="https://vuptime.io/images/arc-vmware/arc-vmware-vm-creation-1.png"
/>
&lt;/picture>
&lt;/figure>
&lt;/p>
&lt;ol start="2">
&lt;li>You can select a ResourceGroup to attach the VM to, then provide some details for the VM deployment:&lt;/li>
&lt;/ol>
&lt;ul>
&lt;li>A name&lt;/li>
&lt;li>The &lt;em>custom-location&lt;/em> and object type (&lt;em>VMware&lt;/em>)&lt;/li>
&lt;li>The target &lt;em>resourcePool&lt;/em>&lt;/li>
&lt;li>The &lt;em>VM Template&lt;/em> to use&lt;/li>
&lt;li>VM CPU and Memory configuration if you choose to override the template settings&lt;/li>
&lt;li>Administrator login and password if you choose to enable guest management during the creation process&lt;/li>
&lt;/ul>
&lt;p>&lt;figure>
&lt;picture>
&lt;img
loading="lazy"
decoding="async"
alt="VMware Virtual Machine creation process – Step 2"
class="image_figure image_internal image_unprocessed"
src="https://vuptime.io/images/arc-vmware/arc-vmware-vm-creation-2.png"
/>
&lt;/picture>
&lt;/figure>
&lt;/p>
&lt;ol start="3">
&lt;li>The second step of the wizard is for virtual disks configuration: name, size, controller and persistence.&lt;/li>
&lt;/ol>
&lt;p>&lt;figure>
&lt;picture>
&lt;img
loading="lazy"
decoding="async"
alt="VMware Virtual Machine creation process – Step 3"
class="image_figure image_internal image_unprocessed"
src="https://vuptime.io/images/arc-vmware/arc-vmware-vm-creation-3.png"
/>
&lt;/picture>
&lt;/figure>
&lt;/p>
&lt;ol start="4">
&lt;li>The third step of the wizard provide network settings configuration (network attachment, IP settings etc.)&lt;/li>
&lt;/ol>
&lt;p>&lt;figure>
&lt;picture>
&lt;img
loading="lazy"
decoding="async"
alt="VMware Virtual Machine creation process – Step 4"
class="image_figure image_internal image_unprocessed"
src="https://vuptime.io/images/arc-vmware/arc-vmware-vm-creation-4.png"
/>
&lt;/picture>
&lt;/figure>
&lt;/p>
&lt;ol start="5">
&lt;li>In the fourth step, you can add tag/value to the VM object (tag will only apply on Azure side: not VMware side.)&lt;/li>
&lt;/ol>
&lt;p>&lt;figure>
&lt;picture>
&lt;img
loading="lazy"
decoding="async"
alt="VMware Virtual Machine creation process – Step 5"
class="image_figure image_internal image_unprocessed"
src="https://vuptime.io/images/arc-vmware/arc-vmware-vm-creation-5.png"
/>
&lt;/picture>
&lt;/figure>
&lt;/p>
&lt;ol start="6">
&lt;li>The last step provide a pane to validate the requested changes and to start the deployment.&lt;/li>
&lt;/ol>
&lt;p>&lt;figure>
&lt;picture>
&lt;img
loading="lazy"
decoding="async"
alt="VMware Virtual Machine creation process – Step 6"
class="image_figure image_internal image_unprocessed"
src="https://vuptime.io/images/arc-vmware/arc-vmware-vm-creation-6.png"
/>
&lt;/picture>
&lt;/figure>
&lt;/p>
&lt;ol start="7">
&lt;li>When the deployment process is completed, you can see its results and display the deployed resources.&lt;/li>
&lt;/ol>
&lt;p>&lt;figure>
&lt;picture>
&lt;img
loading="lazy"
decoding="async"
alt="VMware Virtual Machine creation process – Step 6"
class="image_figure image_internal image_unprocessed"
src="https://vuptime.io/images/arc-vmware/arc-vmware-vm-creation-7.png"
/>
&lt;/picture>
&lt;/figure>
&lt;/p>
&lt;p>You can now compare the view on the same VM object from vCenter and from Azure UI:&lt;/p>
&lt;p>&lt;figure>
&lt;picture>
&lt;img
loading="lazy"
decoding="async"
alt="VMware Virtual Machine creation process – Step 6"
class="image_figure image_internal image_unprocessed"
src="https://vuptime.io/images/arc-vmware/arc-vmware-vm-creation-8.png"
/>
&lt;/picture>
&lt;/figure>
&lt;/p>
&lt;h2 id="azure-governance-on-vmware-based-resources">Azure governance on VMware based resources&lt;/h2>
&lt;p>One of the main benefit from managing VMware resources from Azure is the possibility to apply standard Azure governance strategies like:&lt;/p>
&lt;h3 id="grouping-and-tagging">Grouping and tagging&lt;/h3>
&lt;p>VMware resources that are enabled in Azure can be attached to Azure &lt;em>ResourceGroups&lt;/em> and benefit from the governance inheritance on resource objects (RBAC, locks etc.)&lt;/p>
&lt;p>VMware resources can also be tagged in order to filter resources in search operations or to manage resources costing and attributions.&lt;/p>
&lt;p>&lt;figure>
&lt;picture>
&lt;img
loading="lazy"
decoding="async"
alt="Azure ResourceGroup and Tags applied to a VMware resource"
class="image_figure image_internal image_unprocessed"
src="https://vuptime.io/images/arc-vmware/arc-vmware-vm-rg-tags.png"
/>
&lt;/picture>
&lt;/figure>
&lt;/p>
&lt;h3 id="rbac">RBAC&lt;/h3>
&lt;p>You can apply Azure RBAC strategies to VMware resources that are enabled in Azure and provide, ReadOnly, Contribution or ownership to the resources.&lt;/p>
&lt;p>&lt;figure>
&lt;picture>
&lt;img
loading="lazy"
decoding="async"
alt="Azure RBAC applied to a VMware resource"
class="image_figure image_internal image_unprocessed"
src="https://vuptime.io/images/arc-vmware/arc-vmware-vm-rbac.png"
/>
&lt;/picture>
&lt;/figure>
&lt;/p>
&lt;h3 id="lock">Lock&lt;/h3>
&lt;p>You can also prevent deletion or modification by using Azure Lock and the dependencies from Subscription or ResourceGroup:&lt;/p>
&lt;p>&lt;figure>
&lt;picture>
&lt;img
loading="lazy"
decoding="async"
alt="Delete lock applied to a VMware resource"
class="image_figure image_internal image_unprocessed"
src="https://vuptime.io/images/arc-vmware/arc-vmware-vm-lock.png"
/>
&lt;/picture>
&lt;/figure>
&lt;/p>
&lt;h2 id="upcoming">Upcoming&lt;/h2>
&lt;p>As you may have noticed in the last screens of the deployment, it is possible to get/download the ARM template that represents the ongoing deployment. This will be covered in the upcoming post about automation capabilities provided by &lt;em>Azure Arc-enabled VMware vSphere&lt;/em>.&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://vuptime.io/2022/04/29/arc-enabled-vmware-vsphere-part3">Azure Arc-enabled VMware vSphere – Part 3&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>And if you missed the first part of this series:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://vuptime.io/2022/04/25/arc-enabled-vmware-vsphere-part1">Azure Arc-enabled VMware vSphere – Part 2&lt;/a>&lt;/li>
&lt;/ul>
&lt;h3 id="credits">Credits&lt;/h3>
&lt;p>Title photo by &lt;a href="https://unsplash.com/@smeshny">Siarhei Palishchuk&lt;/a> on &lt;a href="https://unsplash.com/photos/l5QjpiLwJ_E">Unsplash&lt;/a>&lt;/p></description></item><item><title>Public preview – Azure Arc-enabled VMware vSphere – Part 1</title><link>https://vuptime.io/post/2022-04-25-arc-enabled-vmware-vsphere-part1/</link><pubDate>Mon, 25 Apr 2022 00:00:00 +0000</pubDate><guid>https://vuptime.io/2022/04/25/arc-enabled-vmware-vsphere-part1</guid><description>
&lt;h2 id="manage-your-vmware-datacenter-through-azure-cloud-tools">Manage your VMware Datacenter through Azure Cloud tools&lt;/h2>
&lt;p>Announced in &lt;a href="https://azure.microsoft.com/en-us/updates/private-preview-new-azure-arc-capabilities-in-november-2021/">private preview stage&lt;/a> during the &lt;a href="https://aka.ms/IgniteNov21/InnovateAnywhereBlog">Microsoft Ignite&lt;/a> on November 2021, the &lt;a href="https://azure.microsoft.com/en-us/services/azure-arc/#product-overview">Azure Arc&lt;/a> integration with VMware vSphere is now &lt;a href="https://azure.microsoft.com/en-us/updates/public-preview-azure-arc-integration-with-vmware-vsphere/">available in public preview&lt;/a> since March 31&lt;sup>th&lt;/sup>, 2022.&lt;/p>
&lt;p>The feature, still in development process, is now labeled &lt;em>Azure Arc-enabled VMware vSphere&lt;/em>, and provides a unified governance and management solution for lifecycle and guest OS operations of VMware VMs through Azure Arc.&lt;/p>
&lt;blockquote>
&lt;p>As &lt;a href="https://azure.microsoft.com/en-us/services/azure-vmware/">Azure VMware Solutions&lt;/a> private clouds relies on a &lt;a href="https://www.vmware.com/products/cloud-foundation.html">standardized VMware SDDC&lt;/a>, you can also use &lt;em>Azure Arc-enabled VMware vSphere&lt;/em> to operate your AVS-based workloads.&lt;/p>
&lt;/blockquote>
&lt;h3 id="how-it-works-">How it works ?&lt;/h3>
&lt;p>&lt;em>Azure Arc-enabled VMware vSphere&lt;/em> relies on a &lt;em>Resource Bridge&lt;/em> appliance deployed in the target environment (or in a VMware environment with network access to the target one). This bridge will act a the access-point for Azure Arc to get and manage data from vCenter APIs.&lt;/p>
&lt;p>As of now, the &lt;em>Resource Bridge&lt;/em> requires an outbound connectivity to Internet (specifically to to Azure APIs over HTTPS(443)) and can only be deployed on a VMware environment.&lt;/p>
&lt;p>&lt;figure>
&lt;picture>
&lt;img
loading="lazy"
decoding="async"
alt="The Azure Arc Resource Bridge act as a gateway for Azure Arc to access and manage VMware based workloads."
class="image_figure image_internal image_unprocessed"
src="https://vuptime.io/images/arc-vmware/arc-resource-bridge.png"
/>
&lt;/picture>
&lt;/figure>
&lt;/p>
&lt;p>When the appliance is fully deployed and reports to the Azure Arc APIs, you can browse the inventory and enable some VMware components to be accessible as Azure objects. Azure-Enabled resources from the VMware environment will be attached to:&lt;/p>
&lt;ul>
&lt;li>A &lt;strong>custom location&lt;/strong> representing your VMware Datacenter in Azure&lt;/li>
&lt;li>A &lt;strong>resource group&lt;/strong> to provide ability to organize your resources and to apply RBAC (Role-Based Access Control) strategy&lt;/li>
&lt;/ul>
&lt;h3 id="benefits">Benefits&lt;/h3>
&lt;p>As for Azure Arc, the main goal of &lt;em>Azure Arc-enabled VMware vSphere&lt;/em> is to extend Azure governance and management capabilities on non-Azure environments. In this case to a VMware vSphere infrastructure.&lt;/p>
&lt;p>This provides a &lt;strong>consistent management experience across Azure and VMware vSphere infrastructure&lt;/strong> like:&lt;/p>
&lt;ul>
&lt;li>VMware virtual machine (VM) lifecycle operations: create/register, start/stop, resize, and delete.&lt;/li>
&lt;li>Apply RBAC strategy to provide users and application teams to self-serve VM operations.&lt;/li>
&lt;li>Apply Azure governance strategies across Azure and VMware VMs by enabling guest management (Azure Policies, Update Management, Monitoring etc.).&lt;/li>
&lt;li>Use Azure Resource Manager based API to manage VMware workload (ARM or Bicep templates, Azure APIs and CLI tools).&lt;/li>
&lt;/ul>
&lt;h2 id="resource-bridge-deployment">Resource Bridge Deployment&lt;/h2>
&lt;blockquote>
&lt;p>&lt;strong>Disclaimer&lt;/strong>: This walkthrough deployment process is not a substitution of the Microsoft Documentation about &lt;a href="https://docs.microsoft.com/en-us/azure/azure-arc/vmware-vsphere/">&lt;em>Azure Arc-enabled VMware vSphere&lt;/em>&lt;/a>. This blog post will not receive major updates to synchronize with the development status of &lt;em>Azure Arc-enabled VMware vSphere&lt;/em> feature and only reflect the process at a specific moment in time.&lt;/p>
&lt;/blockquote>
&lt;h3 id="pre-requisites">Pre-requisites&lt;/h3>
&lt;p>In order to have access to all &lt;em>Azure Arc-enabled VMware vSphere&lt;/em> features, I had to register the following Azure resources providers to my subscription:&lt;/p>
&lt;ul>
&lt;li>&lt;code>Microsoft.ConnectedVMwarevSphere&lt;/code>&lt;/li>
&lt;li>&lt;code>Microsoft.HybridCompute&lt;/code>&lt;/li>
&lt;li>&lt;code>Microsoft.GuestConfiguration&lt;/code>&lt;/li>
&lt;/ul>
&lt;p>I used &lt;a href="https://docs.microsoft.com/en-us/cli/azure/">Azure CLI&lt;/a>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="ln">1&lt;/span>&lt;span class="cl">&lt;span class="nb">export&lt;/span> &lt;span class="nv">AZURE_SUBSCRIPTION_ID&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;********-****-****-****-************&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">2&lt;/span>&lt;span class="cl">az provider register --wait --subscription &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">AZURE_SUBSCRIPTION_ID&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span> --namespace Microsoft.ConnectedVMwarevSphere
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">3&lt;/span>&lt;span class="cl">az provider register --wait --subscription &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">AZURE_SUBSCRIPTION_ID&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span> --namespace Microsoft.HybridCompute
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">4&lt;/span>&lt;span class="cl">az provider register --wait --subscription &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">AZURE_SUBSCRIPTION_ID&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span> --namespace Microsoft.GuestConfiguration
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="resource-requirements">Resource requirements&lt;/h3>
&lt;p>The &lt;em>Resource Bridge&lt;/em> appliance requires the following resources assignment:&lt;/p>
&lt;ul>
&lt;li>4 vCPU&lt;/li>
&lt;li>16GB RAM&lt;/li>
&lt;li>100GB free disk space&lt;/li>
&lt;/ul>
&lt;h3 id="create-the-vcenter-resource-bridge">Create the vCenter Resource Bridge&lt;/h3>
&lt;p>From Azure portal, select the &lt;strong>Azure Arc&lt;/strong> product then:&lt;/p>
&lt;ol>
&lt;li>VMware vCenters (preview)&lt;/li>
&lt;li>(+) Add&lt;/li>
&lt;/ol>
&lt;p>&lt;figure>
&lt;picture>
&lt;img
loading="lazy"
decoding="async"
alt="Resource Bridge creation from Azure UI – step 1"
class="image_figure image_internal image_unprocessed"
src="https://vuptime.io/images/arc-vmware/arc-resource-bridge-creation-01.png"
/>
&lt;/picture>
&lt;/figure>
&lt;/p>
&lt;p>You will be requested to:&lt;/p>
&lt;ol>
&lt;li>Attach the &lt;em>Resource Bridge&lt;/em> to a subscription, a resource-group and a region (only East US and West Europe are available by now).&lt;/li>
&lt;li>Provide a name for a &lt;em>custom location&lt;/em>&lt;/li>
&lt;/ol>
&lt;blockquote>
&lt;p>The &lt;em>custom location&lt;/em> will represent, in Azure, the location of your vCenter deployment.&lt;/p>
&lt;/blockquote>
&lt;ol start="3">
&lt;li>Provide a name for the vCenter in Azure&lt;/li>
&lt;/ol>
&lt;p>&lt;figure>
&lt;picture>
&lt;img
loading="lazy"
decoding="async"
alt="Resource Bridge creation from Azure UI – step 2"
class="image_figure image_internal image_unprocessed"
src="https://vuptime.io/images/arc-vmware/arc-resource-bridge-creation-02.png"
/>
&lt;/picture>
&lt;/figure>
&lt;/p>
&lt;p>In the next screen of the wizard, you can attach &lt;em>tags&lt;/em> to your new resource. In the third step, you are invited to download a PowerShell-based (Windows) or Azure CLI-based (Linux) version of a script.&lt;/p>
&lt;blockquote>
&lt;p>If your subscription is not registered with all the required resource providers, a &lt;strong>Register&lt;/strong> button will appear.&lt;/p>
&lt;/blockquote>
&lt;p>&lt;figure>
&lt;picture>
&lt;img
loading="lazy"
decoding="async"
alt="Resource Bridge creation from Azure UI – step 3"
class="image_figure image_internal image_unprocessed"
src="https://vuptime.io/images/arc-vmware/arc-resource-bridge-creation-03.png"
/>
&lt;/picture>
&lt;/figure>
&lt;/p>
&lt;p>The downloaded script needs to be run from a workstation or &lt;em>jump server&lt;/em> with direct or proxyfied access to the vCenter where the resource bridge will be deployed.&lt;/p>
&lt;p>The last wizard step provide an insight on the resource bridge deployment status, but does not affect the resource creation.&lt;/p>
&lt;p>&lt;figure>
&lt;picture>
&lt;img
loading="lazy"
decoding="async"
alt="Resource Bridge creation from Azure UI – step 4"
class="image_figure image_internal image_unprocessed"
src="https://vuptime.io/images/arc-vmware/arc-resource-bridge-creation-04.png"
/>
&lt;/picture>
&lt;/figure>
&lt;/p>
&lt;h4 id="windows-powershell-script">(Windows) Powershell script&lt;/h4>
&lt;blockquote>
&lt;p>&lt;a href="https://docs.microsoft.com/fr-fr/powershell/azure/?view=azps-7.4.0">Azure PowerShell&lt;/a> module is required.&lt;/p>
&lt;/blockquote>
&lt;p>If you choose the PowerShell (Windows) version of the script:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-ps1" data-lang="ps1">&lt;span class="line">&lt;span class="ln">1&lt;/span>&lt;span class="cl">&lt;span class="nb">Set-ExecutionPolicy&lt;/span> &lt;span class="n">-ExecutionPolicy&lt;/span> &lt;span class="n">RemoteSigned&lt;/span> &lt;span class="n">-Scope&lt;/span> &lt;span class="n">CurrentUser&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">2&lt;/span>&lt;span class="cl">&lt;span class="nb">Install-Module&lt;/span> &lt;span class="n">-Name&lt;/span> &lt;span class="n">Az&lt;/span> &lt;span class="n">-Scope&lt;/span> &lt;span class="n">CurrentUser&lt;/span> &lt;span class="n">-Repository&lt;/span> &lt;span class="n">PSGallery&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">3&lt;/span>&lt;span class="cl">&lt;span class="nb">Connect-AzAccount&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">4&lt;/span>&lt;span class="cl">&lt;span class="p">./&lt;/span>&lt;span class="nb">resource-bridge&lt;/span>&lt;span class="n">-onboarding-script&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="py">ps1&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="linux-azure-cli-script">(Linux) Azure CLI script&lt;/h4>
&lt;blockquote>
&lt;p>&lt;a href="https://docs.microsoft.com/en-us/cli/azure/">Azure CLI&lt;/a> is required.&lt;/p>
&lt;/blockquote>
&lt;p>If you choose the PowerShell (Windows) version of the script:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="ln">1&lt;/span>&lt;span class="cl">az login
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">2&lt;/span>&lt;span class="cl">bash resource-bridge-onboarding-script.sh
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="running-the-deployment-script">Running the deployment script&lt;/h4>
&lt;p>The deployment script will ask for a set of information in order do deploy and configure the &lt;em>resource bridge&lt;/em> appliance.&lt;/p>
&lt;ul>
&lt;li>Proxy settings for the current workstation&lt;/li>
&lt;li>Target vCenter FQDN, username, password&lt;/li>
&lt;li>VM deployment details:
&lt;ul>
&lt;li>VMware logical-datacenter&lt;/li>
&lt;li>Network&lt;/li>
&lt;li>ResourcePool&lt;/li>
&lt;li>Datastore&lt;/li>
&lt;li>VM Folder&lt;/li>
&lt;li>Appliance IP settings&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>&lt;figure>
&lt;picture>
&lt;img
loading="lazy"
decoding="async"
alt="Resource Bridge creation from Azure UI – step 5"
class="image_figure image_internal image_unprocessed"
src="https://vuptime.io/images/arc-vmware/arc-resource-bridge-creation-05.png"
/>
&lt;/picture>
&lt;/figure>
&lt;figure>
&lt;picture>
&lt;img
loading="lazy"
decoding="async"
alt="Resource Bridge creation from Azure UI – step 6"
class="image_figure image_internal image_unprocessed"
src="https://vuptime.io/images/arc-vmware/arc-resource-bridge-creation-06.png"
/>
&lt;/picture>
&lt;/figure>
&lt;/p>
&lt;p>The script will run for about 15 minutes to download, deploy and configure the Resource Bridge appliance. When fully deployed, the &lt;em>verification&lt;/em> step of the UI wizard will display a green check to validate that both Azure API and the appliance are communicating together.&lt;/p>
&lt;h2 id="upcoming">Upcoming&lt;/h2>
&lt;p>In the upcoming posts, we will cover the functional capabilities of having VMware resources managed through Azure, from UI or with automation tools.&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://vuptime.io/2022/04/27/arc-enabled-vmware-vsphere-part2">Azure Arc-enabled VMware vSphere – Part 2&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://vuptime.io/2022/04/29/arc-enabled-vmware-vsphere-part3">Azure Arc-enabled VMware vSphere – Part 3&lt;/a>&lt;/li>
&lt;/ul>
&lt;h3 id="credits">Credits&lt;/h3>
&lt;p>Title photo by &lt;a href="https://unsplash.com/@jbcreate_">Joseph Barrientos&lt;/a> on &lt;a href="https://unsplash.com/photos/oQl0eVYd_n8">Unsplash&lt;/a>&lt;/p></description></item><item><title>Azure VMware Solutions REST API - part 2: `az rest`</title><link>https://vuptime.io/post/2022-02-15-azure-vmware-solution-rest-api-part2/</link><pubDate>Tue, 15 Feb 2022 00:00:00 +0000</pubDate><guid>https://vuptime.io/2022/02/15/azure-vmware-solution-rest-api-part2/</guid><description>
&lt;p>After a discovery of Azure VMware Solution REST API through the &lt;a href="https://vuptime.io/2022/01/06/azure-vmware-solution-rest-api-part1/">Postman collection&lt;/a> in &lt;em>part 1&lt;/em>, we will use some of the fundamentals API calls through &lt;code>az rest&lt;/code>, a useful subset of the &lt;a href="https://docs.microsoft.com/en-us/cli/azure/">Azure Command-Line Interface&lt;/a>.&lt;/p>
&lt;p>Compared to Postman, I consider &lt;code>az rest&lt;/code> an easier way to discover Azure REST API in a blog post as it doesn't require to post screenshots or long code samples to narrate the exploration. But of course, you could use the &lt;a href="https://github.com/lrivallain/avs-rest-api-postman-collection">AVS Postman collection&lt;/a> to achieve the same purpose or any other REST client tool (httpie, curl etc.): this is the great power of REST APIs.&lt;/p>
&lt;h2 id="preparation">Preparation&lt;/h2>
&lt;p>A big benefit of using &lt;code>az rest&lt;/code> to manage an Azure product, like Azure VMware Solution, through its REST API is that the tool already manages the authentication or provide a simple way to connect to your tenant and to execute request without manually providing authentication tokens.&lt;/p>
&lt;h3 id="login">Login&lt;/h3>
&lt;p>If you have not already logged-in to your tenant, you can follow the next steps:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="ln">1&lt;/span>&lt;span class="cl">az login
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">2&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">3&lt;/span>&lt;span class="cl">&lt;span class="c1"># Or, if you manage multiple tenants, you can add the --tenant parameter to login to it:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">4&lt;/span>&lt;span class="cl">az login --tenant xxxxxxxxxxx.onmicrosoft.com
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>By default, this command will open a web browser asking you to connect to your azure tenant. Once logged-in your browser, you can close the tab and the CLI will successfully be connected.&lt;/p>
&lt;p>If your terminal session cannot connect to a web browser (if you use a remote session like SSH for example), you can use:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="ln">1&lt;/span>&lt;span class="cl">az login --use-device-code
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">2&lt;/span>&lt;span class="cl">&lt;span class="c1"># To sign in, use a web browser to open the page https://microsoft.com/devicelogin and enter the code ********** to authenticate.&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>After opening the &lt;a href="https://microsoft.com/devicelogin">provided link&lt;/a> and used the token, your CLI should be connected.&lt;/p>
&lt;p>You can check your connection information with:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="ln">1&lt;/span>&lt;span class="cl">az account show --output table
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">2&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">3&lt;/span>&lt;span class="cl">EnvironmentName HomeTenantId IsDefault Name State TenantId
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">4&lt;/span>&lt;span class="cl">----------------- ------------------------------------ ----------- ---------------------------- ------- ------------------------------------
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">5&lt;/span>&lt;span class="cl">AzureCloud ********-****-****-****-************ True Azure VMware Solutions Tests Enabled ********-****-****-****-************
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="subscription">Subscription&lt;/h3>
&lt;p>If you use multiple subscriptions (it is recommended!), you can select to one hosting your AVS:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="ln">1&lt;/span>&lt;span class="cl">&lt;span class="c1"># List available subscriptions&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">2&lt;/span>&lt;span class="cl">az account subscription list --output table
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">3&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">4&lt;/span>&lt;span class="cl">&lt;span class="c1"># Select one subscription&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">5&lt;/span>&lt;span class="cl">az account &lt;span class="nb">set&lt;/span> --subscription ********-****-****-****-************
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="sddc-base-uri">SDDC base URI&lt;/h3>
&lt;p>To achieve quick and successfully REST requests on a specific resource, it could be useful to get its &lt;em>base URI&lt;/em> and to store it in an environment variable.&lt;/p>
&lt;p>For an AVS resource, this base URI is built like:&lt;/p>
&lt;p>&lt;code>https://management.azure.com/subscriptions/${SUBSCRIPTION_ID}/resourceGroups/${RESOURCEGROUP_NAME}/providers/Microsoft.AVS/privateClouds/${SDDC_NAME}&lt;/code>&lt;/p>
&lt;p>With the following components:&lt;/p>
&lt;ul>
&lt;li>&lt;code>https://management.azure.com&lt;/code>: The Azure REST API domain endpoint&lt;/li>
&lt;li>&lt;code>/subscriptions/${SUBSCRIPTION_ID}&lt;/code>&lt;/li>
&lt;li>&lt;code>resourceGroups/${RESOURCEGROUP_NAME}&lt;/code>&lt;/li>
&lt;li>&lt;code>/providers/Microsoft.AVS&lt;/code>: A pointer to the AVS resources provider&lt;/li>
&lt;li>&lt;code>/privateClouds/${SDDC_NAME}&lt;/code>&lt;/li>
&lt;/ul>
&lt;p>With the following commands, you can easily populate an AVS base URI:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="ln">1&lt;/span>&lt;span class="cl">&lt;span class="nb">export&lt;/span> &lt;span class="nv">SUBSCRIPTION_ID&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;********-****-****-****-************&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">2&lt;/span>&lt;span class="cl">&lt;span class="nb">export&lt;/span> &lt;span class="nv">RESOURCEGROUP_NAME&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;resourceGroupName&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">3&lt;/span>&lt;span class="cl">&lt;span class="nb">export&lt;/span> &lt;span class="nv">SDDC_NAME&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;AVS-Tests&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">4&lt;/span>&lt;span class="cl">&lt;span class="nb">export&lt;/span> &lt;span class="nv">SDDC_BASE_URI&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;https://management.azure.com/subscriptions/&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">SUBSCRIPTION_ID&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">/resourceGroups/&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">RESOURCEGROUP_NAME&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">/providers/Microsoft.AVS/privateClouds/&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">SDDC_NAME&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="api-version">API version&lt;/h3>
&lt;p>When using Azure API, you need to specify the API version you want to use. For AVS, I currently use version &lt;em>2021-12-01&lt;/em> (the last version currently available):&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="ln">1&lt;/span>&lt;span class="cl">&lt;span class="nb">export&lt;/span> &lt;span class="nv">API_VERSION&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;api-version=2021-12-01&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="avs-endpoints-and-credentials-management">AVS endpoints and credentials management&lt;/h2>
&lt;p>When you need to connect to an AVS system, you need two mandatory information:&lt;/p>
&lt;ul>
&lt;li>The endpoints name&lt;/li>
&lt;li>The credentials to use&lt;/li>
&lt;/ul>
&lt;p>The endpoints can be retrieved from (&lt;a href="https://docs.microsoft.com/en-us/rest/api/avs/private-clouds/get">Doc.&lt;/a>):&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="ln"> 1&lt;/span>&lt;span class="cl">&lt;span class="c1"># The global information about the AVS deployment:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 2&lt;/span>&lt;span class="cl">az rest -m get -u &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">SDDC_BASE_URI&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">?&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">API_VERSION&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 3&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 4&lt;/span>&lt;span class="cl">&lt;span class="c1"># A filtered result from the previous request:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 5&lt;/span>&lt;span class="cl">az rest -m get -u &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">SDDC_BASE_URI&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">?&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">API_VERSION&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span> &lt;span class="p">|&lt;/span> jq &lt;span class="s2">&amp;#34;.properties.endpoints&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 6&lt;/span>&lt;span class="cl">&lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 7&lt;/span>&lt;span class="cl"> &lt;span class="s2">&amp;#34;hcxCloudManager&amp;#34;&lt;/span>: &lt;span class="s2">&amp;#34;https://10.100.100.9/&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 8&lt;/span>&lt;span class="cl"> &lt;span class="s2">&amp;#34;nsxtManager&amp;#34;&lt;/span>: &lt;span class="s2">&amp;#34;https://10.100.100.3/&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 9&lt;/span>&lt;span class="cl"> &lt;span class="s2">&amp;#34;vcsa&amp;#34;&lt;/span>: &lt;span class="s2">&amp;#34;https://10.100.100.2/&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">10&lt;/span>&lt;span class="cl">&lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>And credentials (&lt;a href="https://docs.microsoft.com/en-us/rest/api/avs/private-clouds/list-admin-credentials">Doc.&lt;/a>):&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="ln">1&lt;/span>&lt;span class="cl">az rest -m post -u &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">SDDC_BASE_URI&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">/listAdminCredentials?&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">API_VERSION&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">2&lt;/span>&lt;span class="cl">&lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">3&lt;/span>&lt;span class="cl"> &lt;span class="s2">&amp;#34;nsxtPassword&amp;#34;&lt;/span>: &lt;span class="s2">&amp;#34;***************&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">4&lt;/span>&lt;span class="cl"> &lt;span class="s2">&amp;#34;nsxtUsername&amp;#34;&lt;/span>: &lt;span class="s2">&amp;#34;admin&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">5&lt;/span>&lt;span class="cl"> &lt;span class="s2">&amp;#34;vcenterPassword&amp;#34;&lt;/span>: &lt;span class="s2">&amp;#34;***************&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">6&lt;/span>&lt;span class="cl"> &lt;span class="s2">&amp;#34;vcenterUsername&amp;#34;&lt;/span>: &lt;span class="s2">&amp;#34;cloudadmin@vsphere.local&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">7&lt;/span>&lt;span class="cl">&lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;blockquote>
&lt;p>Please note that you must use the &lt;code>post&lt;/code> HTTP method to get credentials.&lt;/p>
&lt;/blockquote>
&lt;p>With this information, you can now connect to your AVS instance.&lt;/p>
&lt;h2 id="avs-network-management">AVS network management&lt;/h2>
&lt;p>Some parts of an AVS workload management can be made through the Azure API and portal (in replacement or addition to the VMware products API or UI).&lt;/p>
&lt;h3 id="nsx-t-tier1-gateway">NSX-T Tier1 gateway&lt;/h3>
&lt;p>When dealing with NSX-T based networks, the Tier1 gateway (T1 GW) is an important element to consider.&lt;/p>
&lt;p>In a vast majority of scenarios (including the AVS deployment model), the T1 GW is considered the first router component, accessible from a workload to communicate with network items out of its subnet.&lt;/p>
&lt;p>By default, a first T1 GW is deployed with AVS and you can retrieve details about it by using (&lt;a href="https://docs.microsoft.com/en-us/rest/api/avs/workload-networks/get-gateway">Doc.&lt;/a>):&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="ln">1&lt;/span>&lt;span class="cl">az rest -m get -u &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">SDDC_BASE_URI&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">/workloadNetworks/default/gateways?&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">API_VERSION&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;blockquote>
&lt;p>Note: Only a &lt;code>get&lt;/code> method is available as you cannot Create, Update or Delete T1 gateways through the Azure API/UI: actions on T1 GW are only available from NSX-T itself (including creating new GWs).&lt;/p>
&lt;/blockquote>
&lt;h3 id="dhcp-service">DHCP service&lt;/h3>
&lt;p>It is possible to rely on the T1 GW to provide DHCP leases within network segment. The DHCP service can run as a &lt;em>server&lt;/em> or a &lt;em>relay&lt;/em> from another server.&lt;/p>
&lt;p>The simpliest role to configure is the &lt;em>server&lt;/em> one:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="ln"> 1&lt;/span>&lt;span class="cl">&lt;span class="c1"># Prepare data for the request&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 2&lt;/span>&lt;span class="cl">&lt;span class="nv">server_name&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;DHCPServer&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 3&lt;/span>&lt;span class="cl">&lt;span class="nv">body&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="k">$(&lt;/span>cat &lt;span class="s">&amp;lt;&amp;lt;EOF
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 4&lt;/span>&lt;span class="cl">&lt;span class="s">{
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 5&lt;/span>&lt;span class="cl">&lt;span class="s"> &amp;#34;properties&amp;#34;: {
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 6&lt;/span>&lt;span class="cl">&lt;span class="s"> &amp;#34;displayName&amp;#34;: &amp;#34;${DHCPServer}&amp;#34;,
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 7&lt;/span>&lt;span class="cl">&lt;span class="s"> &amp;#34;revision&amp;#34;: 0,
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 8&lt;/span>&lt;span class="cl">&lt;span class="s"> &amp;#34;dhcpType&amp;#34;: &amp;#34;SERVER&amp;#34;,
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 9&lt;/span>&lt;span class="cl">&lt;span class="s"> &amp;#34;serverAddress&amp;#34;: &amp;#34;10.100.104.1/24&amp;#34;,
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">10&lt;/span>&lt;span class="cl">&lt;span class="s"> &amp;#34;leaseTime&amp;#34;:null
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">11&lt;/span>&lt;span class="cl">&lt;span class="s"> }
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">12&lt;/span>&lt;span class="cl">&lt;span class="s">}
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">13&lt;/span>&lt;span class="cl">&lt;span class="s">EOF&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">14&lt;/span>&lt;span class="cl">&lt;span class="k">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">15&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">16&lt;/span>&lt;span class="cl">&lt;span class="c1"># Create the DHCP service&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">17&lt;/span>&lt;span class="cl">az rest -m put -u &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">SDDC_BASE_URI&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">/workloadNetworks/default/dhcpConfigurations/&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">DHCPServer&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">?&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">API_VERSION&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span> --body &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">body&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="nsx-t-segments">NSX-T Segments&lt;/h3>
&lt;p>For example, you can Create, Read, Update or Delete (&lt;a href="https://en.wikipedia.org/wiki/Create,_read,_update_and_delete">C.R.U.D.&lt;/a>) &lt;strong>NSX-T segments&lt;/strong> with the Azure API:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="ln"> 1&lt;/span>&lt;span class="cl">&lt;span class="c1"># Prepare data for the request&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 2&lt;/span>&lt;span class="cl">&lt;span class="nv">segment_name&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;VM-tests-109&amp;#34;&lt;/span> &lt;span class="c1"># Name of segment to create&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 3&lt;/span>&lt;span class="cl">&lt;span class="nv">t1_gw_name&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;TNTXX-T1&amp;#34;&lt;/span> &lt;span class="c1"># T1 GW name&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 4&lt;/span>&lt;span class="cl">&lt;span class="nv">body&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="k">$(&lt;/span>cat &lt;span class="s">&amp;lt;&amp;lt;EOF
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 5&lt;/span>&lt;span class="cl">&lt;span class="s">{
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 6&lt;/span>&lt;span class="cl">&lt;span class="s"> &amp;#34;properties&amp;#34;: {
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 7&lt;/span>&lt;span class="cl">&lt;span class="s"> &amp;#34;displayName&amp;#34;: &amp;#34;${segment_name}&amp;#34;,
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 8&lt;/span>&lt;span class="cl">&lt;span class="s"> &amp;#34;connectedGateway&amp;#34;: &amp;#34;${t1_gw_name}&amp;#34;,
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 9&lt;/span>&lt;span class="cl">&lt;span class="s"> &amp;#34;subnet&amp;#34;: {
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">10&lt;/span>&lt;span class="cl">&lt;span class="s"> &amp;#34;dhcpRanges&amp;#34;: [
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">11&lt;/span>&lt;span class="cl">&lt;span class="s"> &amp;#34;10.100.109.10-10.100.109.100&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">12&lt;/span>&lt;span class="cl">&lt;span class="s"> ],
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">13&lt;/span>&lt;span class="cl">&lt;span class="s"> &amp;#34;gatewayAddress&amp;#34;: &amp;#34;10.100.109.1/24&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">14&lt;/span>&lt;span class="cl">&lt;span class="s"> },
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">15&lt;/span>&lt;span class="cl">&lt;span class="s"> &amp;#34;revision&amp;#34;: 0
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">16&lt;/span>&lt;span class="cl">&lt;span class="s"> }
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">17&lt;/span>&lt;span class="cl">&lt;span class="s">}
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">18&lt;/span>&lt;span class="cl">&lt;span class="s">EOF&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">19&lt;/span>&lt;span class="cl">&lt;span class="k">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">20&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">21&lt;/span>&lt;span class="cl">&lt;span class="c1"># Create segment&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">22&lt;/span>&lt;span class="cl">az rest -m put -u &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">SDDC_BASE_URI&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">/workloadNetworks/default/segments/&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">segment_name&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">?&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">API_VERSION&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span> --body &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">body&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">23&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">24&lt;/span>&lt;span class="cl">&lt;span class="c1"># Get the new segment&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">25&lt;/span>&lt;span class="cl">az rest -m get -u &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">SDDC_BASE_URI&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">/workloadNetworks/default/segments/&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">segment_name&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">?&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">API_VERSION&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">26&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">27&lt;/span>&lt;span class="cl">&lt;span class="c1"># Output&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">28&lt;/span>&lt;span class="cl">&lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">29&lt;/span>&lt;span class="cl"> &lt;span class="s2">&amp;#34;id&amp;#34;&lt;/span>: &lt;span class="s2">&amp;#34;/subscriptions/********-****-****-****-************/resourceGroups/resourceGroupName/providers/Microsoft.AVS/privateClouds/AVS-Tests/workloadNetworks/default/segments/VM-tests-109&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">30&lt;/span>&lt;span class="cl"> &lt;span class="s2">&amp;#34;name&amp;#34;&lt;/span>: &lt;span class="s2">&amp;#34;VM-tests-109&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">31&lt;/span>&lt;span class="cl"> &lt;span class="s2">&amp;#34;properties&amp;#34;&lt;/span>: &lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">32&lt;/span>&lt;span class="cl"> &lt;span class="s2">&amp;#34;connectedGateway&amp;#34;&lt;/span>: &lt;span class="s2">&amp;#34;TNTXX-T1&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">33&lt;/span>&lt;span class="cl"> &lt;span class="s2">&amp;#34;displayName&amp;#34;&lt;/span>: &lt;span class="s2">&amp;#34;VM-tests-109&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">34&lt;/span>&lt;span class="cl"> &lt;span class="s2">&amp;#34;provisioningState&amp;#34;&lt;/span>: &lt;span class="s2">&amp;#34;Fulfilled&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">35&lt;/span>&lt;span class="cl"> &lt;span class="s2">&amp;#34;revision&amp;#34;&lt;/span>: 0,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">36&lt;/span>&lt;span class="cl"> &lt;span class="s2">&amp;#34;status&amp;#34;&lt;/span>: &lt;span class="s2">&amp;#34;IN_PROGRESS&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">37&lt;/span>&lt;span class="cl"> &lt;span class="s2">&amp;#34;subnet&amp;#34;&lt;/span>: &lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">38&lt;/span>&lt;span class="cl"> &lt;span class="s2">&amp;#34;dhcpRanges&amp;#34;&lt;/span>: &lt;span class="o">[&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">39&lt;/span>&lt;span class="cl"> &lt;span class="s2">&amp;#34;10.100.109.10-10.100.109.100&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">40&lt;/span>&lt;span class="cl"> &lt;span class="o">]&lt;/span>,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">41&lt;/span>&lt;span class="cl"> &lt;span class="s2">&amp;#34;gatewayAddress&amp;#34;&lt;/span>: &lt;span class="s2">&amp;#34;10.100.109.1/24&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">42&lt;/span>&lt;span class="cl"> &lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">43&lt;/span>&lt;span class="cl"> &lt;span class="o">}&lt;/span>,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">44&lt;/span>&lt;span class="cl"> &lt;span class="s2">&amp;#34;resourceGroup&amp;#34;&lt;/span>: &lt;span class="s2">&amp;#34;resourceGroupName&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">45&lt;/span>&lt;span class="cl"> &lt;span class="s2">&amp;#34;type&amp;#34;&lt;/span>: &lt;span class="s2">&amp;#34;Microsoft.AVS/privateClouds/workloadNetworks/segments&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">46&lt;/span>&lt;span class="cl">&lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="avs-interconnectivity-management">AVS interconnectivity management&lt;/h2>
&lt;p>When your AVS instance is deployed, you will certainly need to connect it with external components like other Azure Resources, jump servers, on-premises resources etc.&lt;/p>
&lt;p>I will not cover &lt;a href="https://docs.microsoft.com/en-us/azure/azure-vmware/concepts-networking">all the available AVS interconnectivity solutions&lt;/a> in this post but here is a list of supported ones:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://docs.microsoft.com/en-us/azure/virtual-network/virtual-network-manage-subnet">Azure vNet connect&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://docs.microsoft.com/en-us/azure/expressroute/expressroute-introduction">ExpressRoute&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://docs.microsoft.com/en-us/azure/expressroute/expressroute-global-reach">ExpressRoute Global Reach&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>In this post, we will see how-to setup an &lt;em>ExpressRoute&lt;/em> circuit.&lt;/p>
&lt;h3 id="expressroute">ExpressRoute&lt;/h3>
&lt;p>The first information to collect is the &lt;em>ExpressRoute ID&lt;/em> or &lt;em>Circuit ID&lt;/em>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="ln">1&lt;/span>&lt;span class="cl">az rest -m get -u &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">SDDC_BASE_URI&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">?&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">API_VERSION&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span> &lt;span class="p">|&lt;/span> jq &lt;span class="s2">&amp;#34;.properties.circuit&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">2&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">3&lt;/span>&lt;span class="cl">&lt;span class="c1"># Output&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">4&lt;/span>&lt;span class="cl">&lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">5&lt;/span>&lt;span class="cl"> &lt;span class="s2">&amp;#34;expressRouteID&amp;#34;&lt;/span>: &lt;span class="s2">&amp;#34;/subscriptions/********-****-****-****-************/resourceGroups/resourceGroupName/providers/Microsoft.Network/expressRouteCircuits/tntxx-cust-p02-westeurope-er&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">6&lt;/span>&lt;span class="cl"> &lt;span class="s2">&amp;#34;expressRoutePrivatePeeringID&amp;#34;&lt;/span>: &lt;span class="s2">&amp;#34;/subscriptions/********-****-****-****-************/resourceGroups/resourceGroupName/providers/Microsoft.Network/expressRouteCircuits/tntxx-cust-p02-westeurope-er/peerings/AzurePrivatePeering&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">7&lt;/span>&lt;span class="cl"> &lt;span class="s2">&amp;#34;primarySubnet&amp;#34;&lt;/span>: &lt;span class="s2">&amp;#34;10.100.100.232/30&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">8&lt;/span>&lt;span class="cl"> &lt;span class="s2">&amp;#34;secondarySubnet&amp;#34;&lt;/span>: &lt;span class="s2">&amp;#34;10.100.100.236/30&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">9&lt;/span>&lt;span class="cl">&lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>We keep only the &lt;code>expressRouteID&lt;/code> information to create a new &lt;em>ExpressRoute&lt;/em> &lt;em>authorization key&lt;/em>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="ln"> 1&lt;/span>&lt;span class="cl">&lt;span class="nv">connection_name&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;expressroute-test&amp;#34;&lt;/span> &lt;span class="c1"># name the future authorization key&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 2&lt;/span>&lt;span class="cl">&lt;span class="nv">sddc_er_id&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="k">$(&lt;/span>az rest -m get -u &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">SDDC_BASE_URI&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">?&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">API_VERSION&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span> &lt;span class="p">|&lt;/span> jq &lt;span class="s2">&amp;#34;.properties.circuit.expressRouteID&amp;#34;&lt;/span>&lt;span class="k">)&lt;/span> &lt;span class="c1"># store the expressRouteID&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 3&lt;/span>&lt;span class="cl">&lt;span class="nv">body&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="k">$(&lt;/span>cat &lt;span class="s">&amp;lt;&amp;lt;EOF
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 4&lt;/span>&lt;span class="cl">&lt;span class="s">{
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 5&lt;/span>&lt;span class="cl">&lt;span class="s"> &amp;#34;properties&amp;#34;: {
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 6&lt;/span>&lt;span class="cl">&lt;span class="s"> &amp;#34;expressRouteId&amp;#34;: ${sddc_er_id}
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 7&lt;/span>&lt;span class="cl">&lt;span class="s"> }
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 8&lt;/span>&lt;span class="cl">&lt;span class="s">}
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 9&lt;/span>&lt;span class="cl">&lt;span class="s">EOF&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">10&lt;/span>&lt;span class="cl">&lt;span class="k">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">11&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">12&lt;/span>&lt;span class="cl">az rest -m put -u &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">SDDC_BASE_URI&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">/authorizations/&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">connection_name&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">?&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">API_VERSION&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span> --body &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">body&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">13&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">14&lt;/span>&lt;span class="cl">&lt;span class="c1"># Output&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">15&lt;/span>&lt;span class="cl">&lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">16&lt;/span>&lt;span class="cl"> &lt;span class="s2">&amp;#34;id&amp;#34;&lt;/span>: &lt;span class="s2">&amp;#34;/subscriptions/********-****-****-****-************/resourceGroups/resourceGroupName/providers/Microsoft.AVS/privateClouds/AVS-CSU-FR-LRI/authorizations/expressroute-test&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">17&lt;/span>&lt;span class="cl"> &lt;span class="s2">&amp;#34;name&amp;#34;&lt;/span>: &lt;span class="s2">&amp;#34;expressroute-test&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">18&lt;/span>&lt;span class="cl"> &lt;span class="s2">&amp;#34;properties&amp;#34;&lt;/span>: &lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">19&lt;/span>&lt;span class="cl"> &lt;span class="s2">&amp;#34;expressRouteAuthorizationId&amp;#34;&lt;/span>: &lt;span class="s2">&amp;#34;/subscriptions/********-****-****-****-************/resourceGroups/tntxx-cust-p02-westeurope/providers/Microsoft.Network/expressRouteCircuits/tntxx-cust-p02-westeurope-er/authorizations/avs_resource_expressroute-test&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">20&lt;/span>&lt;span class="cl"> &lt;span class="s2">&amp;#34;expressRouteAuthorizationKey&amp;#34;&lt;/span>: &lt;span class="s2">&amp;#34;d502f9cb-91a2-4069-a474-7363e723bccc&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">21&lt;/span>&lt;span class="cl"> &lt;span class="s2">&amp;#34;expressRouteId&amp;#34;&lt;/span>: &lt;span class="s2">&amp;#34;/subscriptions/********-****-****-****-************/resourceGroups/tntxx-cust-p02-westeurope/providers/Microsoft.Network/expressRouteCircuits/tntxx-cust-p02-westeurope-er&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">22&lt;/span>&lt;span class="cl"> &lt;span class="s2">&amp;#34;provisioningState&amp;#34;&lt;/span>: &lt;span class="s2">&amp;#34;Succeeded&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">23&lt;/span>&lt;span class="cl"> &lt;span class="o">}&lt;/span>,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">24&lt;/span>&lt;span class="cl"> &lt;span class="s2">&amp;#34;resourceGroup&amp;#34;&lt;/span>: &lt;span class="s2">&amp;#34;AVS-CSU-FR-LRI&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">25&lt;/span>&lt;span class="cl"> &lt;span class="s2">&amp;#34;type&amp;#34;&lt;/span>: &lt;span class="s2">&amp;#34;Microsoft.AVS/privateClouds/authorizations&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">26&lt;/span>&lt;span class="cl">&lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;figure>
&lt;picture>
&lt;img
loading="lazy"
decoding="async"
alt="AVS ExpressRoute authorization from the Azure portal"
class="image_figure image_internal image_unprocessed"
src="https://vuptime.io/images/avs-api/expressroute-authorizations.png"
/>
&lt;/picture>
&lt;/figure>
&lt;/p>
&lt;p>This will provide you with an authorization key: &lt;code>expressRouteAuthorizationKey&lt;/code> to be used to create a new connection from an expressRoute compatible component, like a &lt;em>Virtual network gateway&lt;/em>:&lt;/p>
&lt;p>&lt;figure>
&lt;picture>
&lt;img
loading="lazy"
decoding="async"
alt="Create an ExpressRoute connection to your AVS"
class="image_figure image_internal image_unprocessed"
src="https://vuptime.io/images/avs-api/expressroute-connection.png"
/>
&lt;/picture>
&lt;/figure>
&lt;/p>
&lt;h2 id="conclusion">Conclusion&lt;/h2>
&lt;p>As you may understand from the &lt;a href="https://docs.microsoft.com/en-us/rest/api/avs/">AVS API reference&lt;/a> or the &lt;a href="https://github.com/lrivallain/avs-rest-api-postman-collection">AVS Postman collection&lt;/a>, this post is not a complete coverage of the AVS REST API capabilities but an example of what you can do with it and the &lt;code>az rest&lt;/code> CLI tool.&lt;/p>
&lt;p>To simplify the above commands, I did not mention any header like &lt;code>Accept&lt;/code> or &lt;code>Content-Type&lt;/code> as we used the default type of data when dealing with requests and answers: &lt;code>application/json&lt;/code>.&lt;/p>
&lt;p>Using API with &lt;code>az rest&lt;/code> is a very easy way to manage automation of an AVS deployed instance with an &lt;a href="https://en.wikipedia.org/wiki/Imperative_programming">imperative approach&lt;/a>. A &lt;a href="https://en.wikipedia.org/wiki/Declarative_programming">declarative approach&lt;/a> may be preferred to managed large AVS workloads with production and self-remediation requirements and I will try to cover it in a future (not-yet-planned) post.&lt;/p>
&lt;h3 id="credits">Credits&lt;/h3>
&lt;p>Title photo by &lt;a href="https://unsplash.com/@joshuaryanphotog">Joshua Reddekopp&lt;/a> on &lt;a href="https://unsplash.com/photos/GkFQEOubrCo">Unsplash&lt;/a>&lt;/p></description></item><item><title>Azure VMware Solutions REST API - part 1: Postman collection</title><link>https://vuptime.io/post/2022-02-06-azure-vmware-solution-rest-api-part1/</link><pubDate>Sun, 06 Feb 2022 00:00:00 +0000</pubDate><guid>https://vuptime.io/2022/01/06/azure-vmware-solution-rest-api-part1/</guid><description>
&lt;p>Working on Azure VMware Solution since a couple of months now, I found very usefull to have a prepared list of API calls on a notebook or quick-reference document.&lt;/p>
&lt;p>After a period of time, I did collect enought sample to consider doing a full &lt;a href="https://www.postman.com/">Postman&lt;/a> collection and by doing that, I was also considering to cover the complete &lt;a href="https://docs.microsoft.com/en-us/rest/api/avs/">Azure VMware REST API&lt;/a> (and not only the parts that I already used).&lt;/p>
&lt;h2 id="the-postman-collection">The Postman collection&lt;/h2>
&lt;p>I can find a complete Postman collection to use AVS REST API in the following GitHub repository: &lt;a href="https://github.com/lrivallain/avs-rest-api-postman-collection">Azure VMware Solution REST API Postman collection&lt;/a> &lt;code>avs-rest-api-postman-collection.json&lt;/code>.&lt;/p>
&lt;p>This repository also contains an &lt;em>environment example&lt;/em> you could use to populate your API calls: &lt;code>avs-rest-api-postman_environment.json&lt;/code>.&lt;/p>
&lt;p>With the AVS REST API you could easly the following parts of you AVS deployment:&lt;/p>
&lt;ul>
&lt;li>The SDDC itself
&lt;ul>
&lt;li>Credentials&lt;/li>
&lt;li>Endpoints&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>The &lt;em>Express Route&lt;/em> authorizations&lt;/li>
&lt;li>&lt;em>Global Reach&lt;/em> connections&lt;/li>
&lt;li>Clusters
&lt;ul>
&lt;li>Datastores&lt;/li>
&lt;li>Virtual machines grouping&lt;/li>
&lt;li>Placement policies&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Addons&lt;/li>
&lt;li>AVS scripts&lt;/li>
&lt;li>HCX&lt;/li>
&lt;li>Quota and Trial availability&lt;/li>
&lt;li>Workload networks:
&lt;ul>
&lt;li>DHCP&lt;/li>
&lt;li>DNS&lt;/li>
&lt;li>Segments&lt;/li>
&lt;li>Public IPs&lt;/li>
&lt;li>Port mirroring&lt;/li>
&lt;li>Gateways (NSX-T Tiers 1)&lt;/li>
&lt;li>Virtual Machine grouping&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Other AVS clouds links&lt;/li>
&lt;/ul>
&lt;blockquote>
&lt;p>This collection does not cover the VMware side of the API available when deploying an AVS cluster. If you need to use VMware products REST APIs, the documentation and endpoints are the same ones than with on-prem SDDC products. It is another benefit of using VMware managed-products instances: You do not change your habits and your existing automation tooling.&lt;/p>
&lt;/blockquote>
&lt;h3 id="collection-import">Collection import&lt;/h3>
&lt;p>From Postman, web or desktop client, you could import the collection by refering to the following link: &lt;a href="https://raw.githubusercontent.com/lrivallain/avs-rest-api-postman-collection/master/avs-rest-api-postman-collection.json">https://raw.githubusercontent.com/lrivallain/avs-rest-api-postman-collection/master/avs-rest-api-postman-collection.json&lt;/a>.&lt;/p>
&lt;p>You may also need to import the &lt;em>environment&lt;/em> sample to populate your own data: &lt;a href="https://github.com/lrivallain/avs-rest-api-postman-collection/raw/master/avs-rest-api-postman_environment.json">https://github.com/lrivallain/avs-rest-api-postman-collection/raw/master/avs-rest-api-postman_environment.json&lt;/a>.&lt;/p>
&lt;h3 id="login">Login&lt;/h3>
&lt;p>In order to use the collection, you will have to enter some information like:&lt;/p>
&lt;ul>
&lt;li>subscription ID: &lt;code>subscriptionId&lt;/code>&lt;/li>
&lt;li>resource-group name: &lt;code>resourceGroupName&lt;/code>&lt;/li>
&lt;li>authorization token: &lt;code>accessToken&lt;/code>&lt;/li>
&lt;/ul>
&lt;p>The easiest way to get an authentication token is by using &lt;a href="https://docs.microsoft.com/en-us/cli/azure/">Azure Command-Line Interface&lt;/a>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="ln">1&lt;/span>&lt;span class="cl">az account get-access-token --subscription 01010101-0101-0101-0101-010101010101
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>You can pick the &lt;code>accessToken&lt;/code> value returned or use &lt;code>jq&lt;/code> to only get this value:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="ln">1&lt;/span>&lt;span class="cl">az account get-access-token --subscription 01010101-0101-0101-0101-010101010101 &lt;span class="p">|&lt;/span> jq &lt;span class="s2">&amp;#34;.accessToken&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Eventually, use the value in the &lt;code>accessToken&lt;/code> section of your environment.&lt;/p>
&lt;blockquote>
&lt;p>The token generated with &lt;code>get-access-token&lt;/code> is valid for only one hour. For other token generation methods you can refer to the &lt;a href="https://docs.microsoft.com/en-us/rest/api/azure/#register-your-client-application-with-azure-ad">Azure documentation&lt;/a>.&lt;/p>
&lt;/blockquote>
&lt;h4 id="setup-accesstoken-for-all-api-calls">Setup &lt;code>accessToken&lt;/code> for all API calls&lt;/h4>
&lt;p>Sadly in the export/import process of Postman collection, a variable used for authentication is lost and needs to be set manually:&lt;/p>
&lt;p>&lt;figure>
&lt;picture>
&lt;img
loading="lazy"
decoding="async"
alt="Set the token value to a variable reference"
class="image_figure image_internal image_unprocessed"
src="https://vuptime.io/images/avs-api/authentication-configuration.png"
/>
&lt;/picture>
&lt;/figure>
&lt;/p>
&lt;p>&lt;strong>Procedure&lt;/strong>:&lt;/p>
&lt;ol>
&lt;li>Click on the collection name&lt;/li>
&lt;li>On the right pane, select the &lt;em>current token/access token&lt;/em> field&lt;/li>
&lt;li>Enter: &lt;code>{{accessToken}}&lt;/code> to reference your token variable&lt;/li>
&lt;li>Save and quit this tab&lt;/li>
&lt;/ol>
&lt;blockquote>
&lt;p>This has to be done only once when you import the collection. When you will generate a new access-token, this variable will remain and map to the updated token value.&lt;/p>
&lt;/blockquote>
&lt;h3 id="testing">Testing&lt;/h3>
&lt;p>You can now test the collection by listing the AVS deployments in your subscription:&lt;/p>
&lt;p>&lt;figure>
&lt;picture>
&lt;img
loading="lazy"
decoding="async"
alt="List AVS SDDC"
class="image_figure image_internal image_unprocessed"
src="https://vuptime.io/images/avs-api/list-avs-sddc.png"
/>
&lt;/picture>
&lt;/figure>
&lt;/p>
&lt;h2 id="conclusion">Conclusion&lt;/h2>
&lt;p>Even if this collection covers the 100% of the current AVS REST API (version 2021-12-01), the official reference documentation remains the one from the Azure docs website: &lt;a href="https://docs.microsoft.com/en-us/rest/api/avs/">Azure VMware REST API&lt;/a> which contains &lt;strong>much more documentation&lt;/strong> to explain the content of each request and response. I strongly encourage everyone to have a look to this documentation before using the Postman collection.&lt;/p>
&lt;p>In the next post, we will review some examples of the AVS REST API by using a very useful tool: &lt;code>az rest&lt;/code>.&lt;/p>
&lt;h3 id="credits">Credits&lt;/h3>
&lt;p>Title photo by &lt;a href="https://unsplash.com/@rodlong">Rod Long&lt;/a> on &lt;a href="https://unsplash.com/photos/vpOeXr5wmR4">Unsplash&lt;/a>&lt;/p></description></item></channel></rss>