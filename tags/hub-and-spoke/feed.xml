<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>hub and spoke on vUptime.io - Cloud builder(s)</title><link>https://vuptime.io/tags/hub-and-spoke/</link><description>Recent content in hub and spoke on vUptime.io - Cloud builder(s)</description><generator>Hugo -- gohugo.io</generator><copyright>Ludovic Rivallain and blog co-authors</copyright><lastBuildDate>Tue, 28 Feb 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://vuptime.io/tags/hub-and-spoke/feed.xml" rel="self" type="application/rss+xml"/><item><title>Mock-up Azure VMware Solution in Hub-and-Spoke topology – Part 2</title><link>https://vuptime.io/post/2023-02-28-mockup-avs-in-hub-and-spoke-topology-part2/</link><pubDate>Tue, 28 Feb 2023 00:00:00 +0000</pubDate><guid>https://vuptime.io/post/2023-02-28-mockup-avs-in-hub-and-spoke-topology-part2/</guid><description>
&lt;p>In the &lt;a href="https://vuptime.io/post/2023-02-22-mockup-avs-in-hub-and-spoke-topology-part1/">previous blog post&lt;/a>, we have seen how to deploy a basic environment to start mocking-up an Azure VMware Solution (AVS) environment in a hub and spoke topology. In the &lt;a href="https://vuptime.io/post/2023-02-22-mockup-avs-in-hub-and-spoke-topology-part1/#stage-3--user-defined-route-on-spokes--gw-propagation-false">last section&lt;/a>, we discovered a glitch-in-the-Matrix when we lookup for the traffic between VPN and spoke VMs. We will see in this blog post &lt;a href="#stage-4--user-defined-routes-on-gatewaysubnet">how to fix this issue&lt;/a>.&lt;/p>
&lt;p>We will also &lt;a href="#stage-5--introduction-of-an-avs-transit-vnet">introduce the first components of an AVS transit vNet&lt;/a> to land the Express Route circuit from an AVS deployment and &lt;a href="#stage-6--advertise-a-default-routes-to-avs">how to inject a default BGP route to VMware workloads&lt;/a>.&lt;/p>
&lt;blockquote>
&lt;p>As a reminder, the components and network design described in this blog post are only for demonstration purposes. They are not intended to be used in a production environment and does not represent Azure best practices. They are provided as-is for mock-up and learning purposes only.&lt;/p>
&lt;/blockquote>
&lt;p>Please refer to &lt;a href="https://vuptime.io/post/2023-02-22-mockup-avs-in-hub-and-spoke-topology-part1/">part 1&lt;/a> to get details about the lab environment and the 3 first steps we already covered.&lt;/p>
&lt;h2 id="stage-4--user-defined-routes-on-gatewaysubnet">Stage 4 – User Defined Routes on GatewaySubnet&lt;/h2>
&lt;p>In order to &lt;strong>mitigate the asymmetric routing issue&lt;/strong>, we will add a User Defined Routes to the &lt;code>GatewaySubnet&lt;/code> to ensure that the traffic incoming from the VPN client will be routed to the NVA appliance.&lt;/p>
&lt;p>&lt;figure>
&lt;picture>
&lt;img
loading="lazy"
decoding="async"
alt="User Defined Routes on GatewaySubnet"
class="image_figure image_internal image_unprocessed"
src="https://vuptime.io/images/avs-nva/stage4/hub_and_spoke_avs-Step4.drawio.png"
/>
&lt;/picture>
&lt;/figure>
&lt;/p>
&lt;p>The User Defined Route (UDR) on &lt;code>GatewaySubnet&lt;/code> will configured as below:&lt;/p>
&lt;ul>
&lt;li>10.100.201.0/24 (aka &lt;code>spoke1-vnet&lt;/code>) via &lt;code>nva-vm.nic[0].ipaddress&lt;/code>&lt;/li>
&lt;li>10.100.202.0/24 (aka &lt;code>spoke2-vnet&lt;/code>) via &lt;code>nva-vm.nic[0].ipaddress&lt;/code>&lt;/li>
&lt;/ul>
&lt;p>In Azure Portal, it looks like this:&lt;/p>
&lt;p>&lt;figure>
&lt;picture>
&lt;img
loading="lazy"
decoding="async"
alt="User Defined Routes on GatewaySubnet"
class="image_figure image_internal image_unprocessed"
src="https://vuptime.io/images/avs-nva/stage4/UserDefinedRoute_GatewaySubnet.png"
/>
&lt;/picture>
&lt;/figure>
&lt;/p>
&lt;blockquote>
&lt;p>Of course, depending on the used IP address plan, it is possible to simplify and group multiple routes under a common prefix.&lt;/p>
&lt;/blockquote>
&lt;h3 id="routes-analysis-s4">Routes analysis (s4)&lt;/h3>
&lt;p>From this point we can see that both VPN-client-to-spokes and spokes-to-VPN-destinations, passing through the &lt;code>hub-nva&lt;/code> appliance:&lt;/p>
&lt;p>&lt;figure>
&lt;picture>
&lt;img
loading="lazy"
decoding="async"
alt="Routes analysis with symmetric traffic"
class="image_figure image_internal image_unprocessed"
src="https://vuptime.io/images/avs-nva/stage4/hub_and_spoke_avs-Step4-SymmetricTraffic.drawio.png"
/>
&lt;/picture>
&lt;/figure>
&lt;/p>
&lt;p>Example: During a ping session from a VPN client to &lt;code>spoke-1-vm&lt;/code>, we can only see both echo &lt;em>request&lt;/em> and echo &lt;em>reply&lt;/em> going through the &lt;code>hub-nva&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="ln">1&lt;/span>&lt;span class="cl">ubuntu@hub-nva:~$ sudo tcpdump -nni eth0 icmp
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">2&lt;/span>&lt;span class="cl">&lt;span class="c1"># output&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">3&lt;/span>&lt;span class="cl">IP 10.100.204.2 &amp;gt; 10.100.201.4: ICMP &lt;span class="nb">echo&lt;/span> request, id 1002, seq 1, length &lt;span class="m">64&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">4&lt;/span>&lt;span class="cl">IP 10.100.200.68 &amp;gt; 10.100.201.4: ICMP &lt;span class="nb">echo&lt;/span> request, id 1002, seq 1, length &lt;span class="m">64&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">5&lt;/span>&lt;span class="cl">IP 10.100.201.4 &amp;gt; 10.100.200.68: ICMP &lt;span class="nb">echo&lt;/span> reply, id 1002, seq 1, length &lt;span class="m">64&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">6&lt;/span>&lt;span class="cl">IP 10.100.201.4 &amp;gt; 10.100.204.2: ICMP &lt;span class="nb">echo&lt;/span> reply, id 1002, seq 1, length &lt;span class="m">64&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>All the network traffic is now passing through the &lt;code>hub-nva&lt;/code>. Meaning that we fixed the asymmetric routing issue.&lt;/p>
&lt;h3 id="additional-information-about-azure-udr">Additional information about Azure UDR&lt;/h3>
&lt;p>If you need to learn more about UDR in Azure, I strongly recommend you to read the following posts:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://learn.microsoft.com/en-us/azure/virtual-network/virtual-networks-udr-overview#user-defined">User Defined Routes&lt;/a> in Azure documentation&lt;/li>
&lt;li>&lt;a href="https://learn.microsoft.com/en-us/azure/virtual-network/virtual-networks-udr-overview#how-azure-selects-a-route">How Azure selects a route&lt;/a> in Azure documentation&lt;/li>
&lt;li>&lt;a href="https://blog.cloudtrooper.net/2020/11/28/dont-let-your-azure-routes-bite-you/">Don’t let your Azure Routes bite you&lt;/a> by Jose Moreno&lt;/li>
&lt;/ul>
&lt;h2 id="stage-5--introduction-of-an-avs-transit-vnet">Stage 5 – Introduction of an AVS transit vNet&lt;/h2>
&lt;p>Azure VMware Solution (AVS) is provided with an external connectivity based on Express Route Circuit. This requires to 'land' the Express Route circuit out of the AVS environment. The most common way to do this is to map the AVS Express Route circuit to an existing On Premises Express Route circuit and to rely on &lt;a href="https://learn.microsoft.com/en-us/azure/expressroute/expressroute-global-reach">Express Route Global Reach for providing the connectivity between the two circuits&lt;/a>: transitive connectivity.&lt;/p>
&lt;p>But this setup will not provide a way to consider the AVS deployment as a spoke in a hub-and-spoke topology, as the network traffic between AVS and On Premises, will bypass the &lt;code>hub-nva&lt;/code>. In order to fix this situation, we will introduce a &lt;em>transit vNet&lt;/em> to land the Express Route circuit from the AVS deployment and to ensure that the traffic between AVS and On Premises will be routed through the &lt;code>hub-nva&lt;/code>.&lt;/p>
&lt;p>In this &lt;code>avs-transit-vnet&lt;/code>, we will need an Express Route Gateway to land the Express Route circuit from the AVS deployment.&lt;/p>
&lt;p>&lt;figure>
&lt;picture>
&lt;img
loading="lazy"
decoding="async"
alt="Introduction of an AVS transit vNet"
class="image_figure image_internal image_unprocessed"
src="https://vuptime.io/images/avs-nva/stage5/hub_and_spoke_avs-Step5.drawio.png"
/>
&lt;/picture>
&lt;/figure>
&lt;/p>
&lt;h3 id="routes-analysis-s5">Routes analysis (s5)&lt;/h3>
&lt;p>When the creation of the vNet is completed and the connection of AVS ER circuit setup, we could look at effective routes to see if there is any chance to communicate with AVS based VMs at this stage:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="ln"> 1&lt;/span>&lt;span class="cl">az network nic show-effective-route-table &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 2&lt;/span>&lt;span class="cl">&lt;span class="se">&lt;/span> --ids /subscriptions/&amp;lt;sub-id&amp;gt;/resourceGroups/nva-testing-RG/providers/Microsoft.Network/networkInterfaces/hub-nva-nic &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 3&lt;/span>&lt;span class="cl">&lt;span class="se">&lt;/span> -o table
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 4&lt;/span>&lt;span class="cl">&lt;span class="c1"># output&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 5&lt;/span>&lt;span class="cl">Source State Address Prefix Next Hop Type Next Hop IP
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 6&lt;/span>&lt;span class="cl">--------------------- ------- ---------------- --------------------- -------------
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 7&lt;/span>&lt;span class="cl">Default Active 10.100.200.0/24 VnetLocal
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 8&lt;/span>&lt;span class="cl">Default Active 10.100.202.0/24 VNetPeering
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 9&lt;/span>&lt;span class="cl">Default Active 10.100.201.0/24 VNetPeering
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">10&lt;/span>&lt;span class="cl">Default Active 10.100.203.0/24 VNetPeering
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">11&lt;/span>&lt;span class="cl">VirtualNetworkGateway Active 10.100.204.0/24 VirtualNetworkGateway 20.160.147.74
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>And, of course, if there is no route, there is no connectivity:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="ln">1&lt;/span>&lt;span class="cl">ubuntu@hub-nva:~$ ping 10.100.100.2 -c3
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">2&lt;/span>&lt;span class="cl">&lt;span class="c1"># output&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">3&lt;/span>&lt;span class="cl">PING 10.100.100.2 &lt;span class="o">(&lt;/span>10.100.100.2&lt;span class="o">)&lt;/span> 56&lt;span class="o">(&lt;/span>84&lt;span class="o">)&lt;/span> bytes of data.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">4&lt;/span>&lt;span class="cl">--- 10.100.100.2 ping statistics ---
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">5&lt;/span>&lt;span class="cl">&lt;span class="m">3&lt;/span> packets transmitted, &lt;span class="m">0&lt;/span> received, 100% packet loss, &lt;span class="nb">time&lt;/span> 2029ms
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Depending on &lt;strong>AVS connectivity settings&lt;/strong>, if we rely on routes announced from the Express Route connection to reach Internet or other Azure resources: we cannot communicate with resources out of AVS due to the lack of announced routes.&lt;/p>
&lt;h3 id="additional-information-about-avs-connectivity">Additional information about AVS connectivity&lt;/h3>
&lt;p>If you need to learn more about AVS connectivity, I strongly recommend you to read the following posts:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://learn.microsoft.com/en-us/azure/azure-vmware/concepts-networking">Azure VMware Solution networking and interconnectivity concepts&lt;/a> in Azure documentation&lt;/li>
&lt;li>&lt;a href="https://learn.microsoft.com/en-us/azure/azure-vmware/concepts-network-design-considerations">Azure VMware Solution network design considerations&lt;/a> in Azure documentation&lt;/li>
&lt;li>&lt;a href="https://blog.cloudtrooper.net/2022/05/16/azure-vmware-solution-networking-voodoo/">Azure VMware Solution networking voodoo&lt;/a> by Jose Moreno&lt;/li>
&lt;/ul>
&lt;h2 id="stage-6--advertise-a-default-routes-to-avs">Stage 6 – Advertise a default routes to AVS&lt;/h2>
&lt;p>In the current stage, we will introduce a default route (0.0.0.0/0) announcement to AVS. According to the leitmotif of this blog post series, we will go step by step and we will start with the simplest solution: a default route announced from the &lt;code>avs-transit-vnet&lt;/code> to AVS. And we will temporarily ignore the previous components of our hub-and-spoke topology.&lt;/p>
&lt;p>Firstly, we will need some extra components added to our &lt;em>AVS transit&lt;/em> topology:&lt;/p>
&lt;ul>
&lt;li>VM, &lt;code>avs-bgp-vm&lt;/code> to:
&lt;ul>
&lt;li>Initiate the BGP route announcement&lt;/li>
&lt;li>Route the traffic incoming from AVS&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>An &lt;em>Azure Route Server&lt;/em> (ARS) to propagate the route announcements in the Azure SDN
&lt;ul>
&lt;li>This ARS component will be peered with the &lt;code>avs-bgp-vm&lt;/code> and will provide routes incoming from this BGP peer, to AVS, through the &lt;em>Virtual Network Gateway&lt;/em>.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>A &lt;em>Route Table&lt;/em> (UDR) to override the default route advertised by the &lt;code>avs-bgp-vm&lt;/code>. Otherwise, the VM advertises itself as the default route for the whole vNET and will keep sending the Internet-bound traffic, &lt;a href="https://learn.microsoft.com/en-us/azure/route-server/troubleshoot-route-server#why-does-my-nva-lose-internet-connectivity-after-it-advertises-the-default-route-00000-to-azure-route-server">including the one sent by the VM back to the VM itself&lt;/a>.&lt;/li>
&lt;/ul>
&lt;p>&lt;figure>
&lt;picture>
&lt;img
loading="lazy"
decoding="async"
alt="Advertise a default routes to AVS"
class="image_figure image_internal image_unprocessed"
src="https://vuptime.io/images/avs-nva/stage6/hub_and_spoke_avs-Step6.drawio.png"
/>
&lt;/picture>
&lt;/figure>
&lt;/p>
&lt;blockquote>
&lt;p>As mentioned earlier, this is a first and temporary step. Validating this setup where the Internet breakout is made in the &lt;code>avs-transit-vnet&lt;/code> for the AVS deployment will help to understand and prepare for the next steps.&lt;/p>
&lt;/blockquote>
&lt;h3 id="avs-internet-connectivity-settings">AVS Internet connectivity settings&lt;/h3>
&lt;p>Azure VMware Solution provides three options for Internet connectivity:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://learn.microsoft.com/en-us/azure/azure-vmware/concepts-design-public-internet-access#azure-vmware-solution-managed-snat">Microsoft-managed SNAT&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://learn.microsoft.com/en-us/azure/azure-vmware/concepts-design-public-internet-access#azure-public-ipv4-address-to-nsx-t-data-center-edge">Public IP addresses down to the NSX-T edges&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://learn.microsoft.com/en-us/azure/azure-vmware/concepts-design-public-internet-access#internet-service-hosted-in-azure">Customized Internet connectivity through the Express Route circuit routes announcements&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>In this blog post series, we will consider that AVS is configured to get its &lt;a href="https://learn.microsoft.com/en-us/azure/azure-vmware/concepts-design-public-internet-access#internet-service-hosted-in-azure">Internet connectivity from a default route announced through the Express Route circuit&lt;/a>.&lt;/p>
&lt;p>&lt;figure>
&lt;picture>
&lt;img
loading="lazy"
decoding="async"
alt="AVS Internet connectivity settings"
class="image_figure image_internal image_unprocessed"
src="https://vuptime.io/images/avs-nva/stage6/avs-internet-connectivity-settings.png"
/>
&lt;/picture>
&lt;/figure>
&lt;/p>
&lt;h3 id="routes-analysis-s6">Routes analysis (s6)&lt;/h3>
&lt;p>When the creation of the new components and connections is completed, we could look at effective routes to see the result:&lt;/p>
&lt;p>From the deployed &lt;em>Azure Route Server&lt;/em>, we can see the BGP peer:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="ln">1&lt;/span>&lt;span class="cl">az network routeserver peering show -g nva-testing-RG &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">2&lt;/span>&lt;span class="cl">&lt;span class="se">&lt;/span> -n avs-rs-bgp-connection --routeserver AVSTransitRouterServer &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">3&lt;/span>&lt;span class="cl">&lt;span class="se">&lt;/span> -o table
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">4&lt;/span>&lt;span class="cl">&lt;span class="c1"># output&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">5&lt;/span>&lt;span class="cl">Name PeerAsn PeerIp ProvisioningState ResourceGroup
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">6&lt;/span>&lt;span class="cl">--------------------- --------- ------------- ------------------- ---------------
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">7&lt;/span>&lt;span class="cl">avs-rs-bgp-connection &lt;span class="m">65002&lt;/span> 10.100.203.68 Succeeded nva-testing-RG
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>And we &lt;strong>should&lt;/strong> see the learned route, advertised by the BGP peer:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="ln">1&lt;/span>&lt;span class="cl">az network routeserver peering list-learned-routes &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">2&lt;/span>&lt;span class="cl">&lt;span class="se">&lt;/span> -g nva-testing-RG -n avs-rs-bgp-connection &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">3&lt;/span>&lt;span class="cl">&lt;span class="se">&lt;/span> --routeserver AVSTransitRouterServer -o table
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">4&lt;/span>&lt;span class="cl">&lt;span class="c1"># output&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">5&lt;/span>&lt;span class="cl">Issue: no route displayed there!
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;div class="notices warning">
&lt;div class="label">Issue: no route displayed there&lt;/div>
&lt;p>The &lt;code>list-learned-routes&lt;/code> command does not work as expected. The issue is currently under investigation.
In the meantime, we will use the PowerShell command &lt;code>Get-AzRouteServerPeerLearnedRoute&lt;/code> to display the routes.&lt;/p>
&lt;/div>
&lt;p>Using PowerShell, the advertised routes are displayed:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-powershell" data-lang="powershell">&lt;span class="line">&lt;span class="ln"> 1&lt;/span>&lt;span class="cl">&lt;span class="nv">$routes&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="vm">@&lt;/span>&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 2&lt;/span>&lt;span class="cl"> &lt;span class="n">RouteServerName&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="s1">&amp;#39;AVSTransitRouterServer&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 3&lt;/span>&lt;span class="cl"> &lt;span class="n">ResourceGroupName&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="s1">&amp;#39;nva-testing-RG&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 4&lt;/span>&lt;span class="cl"> &lt;span class="n">PeerName&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="s1">&amp;#39;avs-rs-bgp-connection&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 5&lt;/span>&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 6&lt;/span>&lt;span class="cl">&lt;span class="nb">Get-AzRouteServerPeerLearnedRoute&lt;/span> &lt;span class="nv">@routes&lt;/span> &lt;span class="p">|&lt;/span> &lt;span class="nb">ft
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 7&lt;/span>&lt;span class="cl">&lt;span class="nb">&lt;/span>&lt;span class="n">LocalAddress&lt;/span> &lt;span class="n">Network&lt;/span> &lt;span class="n">NextHop&lt;/span> &lt;span class="n">SourcePeer&lt;/span> &lt;span class="n">Origin&lt;/span> &lt;span class="n">AsPath&lt;/span> &lt;span class="n">Weight&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 8&lt;/span>&lt;span class="cl">&lt;span class="p">------------&lt;/span> &lt;span class="p">-------&lt;/span> &lt;span class="p">-------&lt;/span> &lt;span class="p">----------&lt;/span> &lt;span class="p">------&lt;/span> &lt;span class="p">------&lt;/span> &lt;span class="p">------&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 9&lt;/span>&lt;span class="cl">&lt;span class="mf">10.100&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="py">203&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="py">36&lt;/span> &lt;span class="mf">0.0&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="py">0&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="mf">0&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="mf">0&lt;/span> &lt;span class="mf">10.100&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="py">203&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="py">68&lt;/span> &lt;span class="mf">10.100&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="py">203&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="py">68&lt;/span> &lt;span class="n">EBgp&lt;/span> &lt;span class="mf">65002&lt;/span> &lt;span class="mf">32768&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">10&lt;/span>&lt;span class="cl">&lt;span class="mf">10.100&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="py">203&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="py">37&lt;/span> &lt;span class="mf">0.0&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="py">0&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="mf">0&lt;/span>&lt;span class="p">/&lt;/span>&lt;span class="mf">0&lt;/span> &lt;span class="mf">10.100&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="py">203&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="py">68&lt;/span> &lt;span class="mf">10.100&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="py">203&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="py">68&lt;/span> &lt;span class="n">EBgp&lt;/span> &lt;span class="mf">65002&lt;/span> &lt;span class="mf">32768&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>We can see that the &lt;code>avs-bgp-vm&lt;/code> is advertising itself as the next hop for the default route. This is the expected behavior.&lt;/p>
&lt;h3 id="tests-s6">Tests (s6)&lt;/h3>
&lt;p>From a VM hosted in AVS, we can now reach Internet, by going through the &lt;code>avs-bgp-vm&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="ln"> 1&lt;/span>&lt;span class="cl">ubuntu@avs-vm-100-10:~$ mtr 1.1.1.1 --report
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 2&lt;/span>&lt;span class="cl">HOST: avs-vm-100-10 Loss% Snt Last Avg Best Wrst StDev
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 3&lt;/span>&lt;span class="cl"> 1.&lt;span class="p">|&lt;/span>-- _gateway 0.0% &lt;span class="m">10&lt;/span> 0.1 0.2 0.1 0.2 0.0
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 4&lt;/span>&lt;span class="cl"> 2.&lt;span class="p">|&lt;/span>-- 100.64.176.0 0.0% &lt;span class="m">10&lt;/span> 0.2 0.3 0.2 0.3 0.0
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 5&lt;/span>&lt;span class="cl"> 3.&lt;span class="p">|&lt;/span>-- 100.72.18.17 0.0% &lt;span class="m">10&lt;/span> 0.9 0.8 0.7 0.9 0.1
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 6&lt;/span>&lt;span class="cl"> 4.&lt;span class="p">|&lt;/span>-- 10.100.100.233 0.0% &lt;span class="m">10&lt;/span> 1.0 1.0 0.9 1.1 0.1
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 7&lt;/span>&lt;span class="cl"> 5.&lt;span class="p">|&lt;/span>-- ??? 100.0 &lt;span class="m">10&lt;/span> 0.0 0.0 0.0 0.0 0.0
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 8&lt;/span>&lt;span class="cl"> 6.&lt;span class="p">|&lt;/span>-- 10.100.203.68 0.0% &lt;span class="m">10&lt;/span> 3.2 4.0 2.6 7.3 2.0
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 9&lt;/span>&lt;span class="cl"> 7.&lt;span class="p">|&lt;/span>-- ??? 100.0 &lt;span class="m">10&lt;/span> 0.0 0.0 0.0 0.0 0.0
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">10&lt;/span>&lt;span class="cl"> 8.&lt;span class="p">|&lt;/span>-- ??? 100.0 &lt;span class="m">10&lt;/span> 0.0 0.0 0.0 0.0 0.0
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">11&lt;/span>&lt;span class="cl"> 9.&lt;span class="p">|&lt;/span>-- ??? 100.0 &lt;span class="m">10&lt;/span> 0.0 0.0 0.0 0.0 0.0
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">12&lt;/span>&lt;span class="cl"> 10.&lt;span class="p">|&lt;/span>-- ??? 100.0 &lt;span class="m">10&lt;/span> 0.0 0.0 0.0 0.0 0.0
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">13&lt;/span>&lt;span class="cl"> 11.&lt;span class="p">|&lt;/span>-- ??? 100.0 &lt;span class="m">10&lt;/span> 0.0 0.0 0.0 0.0 0.0
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">14&lt;/span>&lt;span class="cl"> 12.&lt;span class="p">|&lt;/span>-- ??? 100.0 &lt;span class="m">10&lt;/span> 0.0 0.0 0.0 0.0 0.0
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">15&lt;/span>&lt;span class="cl"> 13.&lt;span class="p">|&lt;/span>-- ??? 100.0 &lt;span class="m">10&lt;/span> 0.0 0.0 0.0 0.0 0.0
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">16&lt;/span>&lt;span class="cl"> 14.&lt;span class="p">|&lt;/span>-- ??? 100.0 &lt;span class="m">10&lt;/span> 0.0 0.0 0.0 0.0 0.0
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">17&lt;/span>&lt;span class="cl"> 15.&lt;span class="p">|&lt;/span>-- ??? 100.0 &lt;span class="m">10&lt;/span> 0.0 0.0 0.0 0.0 0.0
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">18&lt;/span>&lt;span class="cl"> 16.&lt;span class="p">|&lt;/span>-- ??? 100.0 &lt;span class="m">10&lt;/span> 0.0 0.0 0.0 0.0 0.0
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">19&lt;/span>&lt;span class="cl"> 17.&lt;span class="p">|&lt;/span>-- ??? 100.0 &lt;span class="m">10&lt;/span> 0.0 0.0 0.0 0.0 0.0
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">20&lt;/span>&lt;span class="cl"> 18.&lt;span class="p">|&lt;/span>-- one.one.one.one 0.0% &lt;span class="m">10&lt;/span> 5.7 4.9 3.9 9.6 1.7
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>In previous route-tracing report, &lt;code>10.100.203.68&lt;/code> is the IP of &lt;code>avs-bgp-vm&lt;/code>, acting like a router or NVA, as expected for this scenario.&lt;/p>
&lt;p>But obviously, this is not the behavior of a standard spoke for the rest of the h&amp;amp;s topology. This step was only there to prepare some of the components we will need further.&lt;/p>
&lt;h3 id="additional-information-about-avs-connectivity-with-azure-route-server">Additional information about AVS connectivity with Azure Route Server&lt;/h3>
&lt;p>If you need to learn more about AVS connectivity with Azure Route Server in Azure, I strongly recommend you to read the following posts:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://learn.microsoft.com/en-us/azure/route-server/vmware-solution-default-route">Injecting routes to Azure VMware Solution with Azure Route Server&lt;/a> in Azure documentation&lt;/li>
&lt;li>&lt;a href="https://learn.microsoft.com/en-us/azure/cloud-adoption-framework/scenarios/azure-vmware/eslz-network-topology-connectivity">Network Virtual Appliance in Azure Virtual Network to inspect all network traffic&lt;/a> in Azure documentation&lt;/li>
&lt;/ul>
&lt;h2 id="part-2--conclusion">Part 2 – Conclusion&lt;/h2>
&lt;p>In this second part, we have seen how to mitigate the asymmetric routing issue by configuring a new &lt;em>Route Table&lt;/em> applicable to VPN Gateway and we created the network components to advertise BGP routes to the &lt;em>Azure VMware Solution&lt;/em> deployment with the help of &lt;em>Azure Route Server&lt;/em>.&lt;/p>
&lt;p>In the next (and probably last) part, we will see how to configure this AVS transit topology as a normal spoke in the hub and spoke topology. We will also cover a simplification of the On-Premises connectivity configuration, relying on &lt;em>Azure Route Server&lt;/em>.&lt;/p></description></item><item><title>Mock-up Azure VMware Solution in Hub-and-Spoke topology – Part 1</title><link>https://vuptime.io/post/2023-02-22-mockup-avs-in-hub-and-spoke-topology-part1/</link><pubDate>Wed, 22 Feb 2023 00:00:00 +0000</pubDate><guid>https://vuptime.io/post/2023-02-22-mockup-avs-in-hub-and-spoke-topology-part1/</guid><description>
&lt;p>If you are using &lt;a href="https://vuptime.io/tags/azure-vmware-solution/">Azure VMware Solution&lt;/a> to run your VMware workloads on Azure, you might wonder how to connect it with other Azure resources in a secure and efficient way. One option is to use a &lt;a href="https://learn.microsoft.com/en-us/azure/architecture/reference-architectures/hybrid-networking/hub-spoke">hub-and-spoke network topology&lt;/a>, which is a design pattern that consists of a central virtual network (the &lt;strong>hub&lt;/strong>) that acts as a gateway for multiple &lt;strong>spoke&lt;/strong> virtual networks. In this blog post, we will investigate how to make Azure VMware Solution work with hub and spoke topology and what are the challenges of this approach.&lt;/p>
&lt;p>By using a hub and spoke topology with Azure VMware Solution, you can achieve several benefits such as improved security &amp;amp; isolation of cloud hosted workloads. However, you also need to consider some challenges such as complexity, latency, bandwidth limitations, routing complexity, firewall rules management, etc. Therefore, it is important to plan your network design carefully according to your specific requirements.&lt;/p>
&lt;p>The official Azure documentation already provides a set of scenarios related to network connectivity for Azure VMware Solution. You can find them &lt;a href="https://learn.microsoft.com/en-us/azure/cloud-adoption-framework/scenarios/azure-vmware/example-architectures">here&lt;/a>. In this blog post series, we will reproduce, step-by-step, a mock-up scenario very close from the &lt;a href="https://learn.microsoft.com/en-us/azure/cloud-adoption-framework/scenarios/azure-vmware/example-architectures#network-virtual-appliance-in-azure-virtual-network-to-inspect-all-network-traffic">&lt;em>Network virtual appliance in Azure Virtual Network to inspect all network traffic&lt;/em>&lt;/a> one.&lt;/p>
&lt;blockquote>
&lt;p>The components and network design described in this blog post are only for demonstration purposes. They are not intended to be used in a production environment and does not represent Azure best practices. They are provided as-is for mock-up and learning purposes only.&lt;/p>
&lt;/blockquote>
&lt;h2 id="materials">Materials&lt;/h2>
&lt;p>To illustrate this blog post series, I created a &lt;a href="https://github.com/lrivallain/azure-labs-and-scripts/tree/master/hub-and-spoke-avs-transit-step-by-step">GitHub repository&lt;/a> to host Terraform code to reproduce each step of the process documented here.&lt;/p>
&lt;p>Using this Terraform content provides a repeatable way to deploy the same environment on Azure but all the steps described in this blog post can also be reproduced using the Azure Portal or Azure CLI.&lt;/p>
&lt;h3 id="azure-vmware-solution-deployment">Azure VMware Solution deployment&lt;/h3>
&lt;p>The deployment and configuration of Azure VMware Solution is out of the scope of this blog post. We consider that the AVS environment is already deployed and configured. We will cover the mandatory settings for Hub and Spoke topology in a section of this series.&lt;/p>
&lt;h2 id="stage-0--basic-setup">Stage 0 – Basic setup&lt;/h2>
&lt;p>As a first step, we will start our lab setup with some very basic components like:&lt;/p>
&lt;ul>
&lt;li>A hub vNET: &lt;code>hub-vnet&lt;/code>
&lt;ul>
&lt;li>A VM (to be NVA)&lt;/li>
&lt;li>A Virtual Network Gateway
&lt;ul>
&lt;li>I choose a VPN one to simulate an On Premises behavior without having a costing Express Route circuit at my disposal&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>2 spokes vNET: &lt;code>spoke1-vnet&lt;/code> and &lt;code>spoke2-vnet&lt;/code>
&lt;ul>
&lt;li>With a spoke VM in each one&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>A P2S VPN Subnet will act as an On-Premises based workload&lt;/li>
&lt;/ul>
&lt;p>&lt;figure>
&lt;picture>
&lt;img
loading="lazy"
decoding="async"
alt="Hub and Spoke components of Stage 0"
class="image_figure image_internal image_unprocessed"
src="https://vuptime.io/images/avs-nva/stage0/hub_and_spoke_avs-Step0.drawio.png"
/>
&lt;/picture>
&lt;/figure>
&lt;/p>
&lt;h3 id="routes-analysis">Routes analysis&lt;/h3>
&lt;p>Once this setup is built, we can have a look at routing configuration between components:&lt;/p>
&lt;p>Effective routes on &lt;code>hub-nva.nic[0]&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="ln">1&lt;/span>&lt;span class="cl">az network nic show-effective-route-table &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">2&lt;/span>&lt;span class="cl">&lt;span class="se">&lt;/span> --ids /subscriptions/&amp;lt;sub-id&amp;gt;/resourceGroups/nva-testing-RG/providers/Microsoft.Network/networkInterfaces/hub-nva-nic &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">3&lt;/span>&lt;span class="cl">&lt;span class="se">&lt;/span> -o table
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">4&lt;/span>&lt;span class="cl">&lt;span class="c1"># output&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">5&lt;/span>&lt;span class="cl">Source State Address Prefix Next Hop Type Next Hop IP
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">6&lt;/span>&lt;span class="cl">-------------------- - ------ - ---------------- -------------------- - ------------ -
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">7&lt;/span>&lt;span class="cl">Default Active 10.100.200.0/24 VnetLocal
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">8&lt;/span>&lt;span class="cl">VirtualNetworkGateway Active 10.100.204.0/24 VirtualNetworkGateway 20.16.121.157
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">9&lt;/span>&lt;span class="cl">Default Active 0.0.0.0/0 Internet
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>From UI:
&lt;figure>
&lt;picture>
&lt;img
loading="lazy"
decoding="async"
alt="Effective routes on hub-nva.nic[0]"
class="image_figure image_internal image_unprocessed"
src="https://vuptime.io/images/avs-nva/stage0/effectives-routes-hub-nva.png"
/>
&lt;/picture>
&lt;/figure>
&lt;/p>
&lt;p>Effective routes on &lt;code>spoke-1-vm.nic[0]&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="ln">1&lt;/span>&lt;span class="cl">az network nic show-effective-route-table &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">2&lt;/span>&lt;span class="cl">&lt;span class="se">&lt;/span> --ids /subscriptions/&amp;lt;sub-id&amp;gt;/resourceGroups/nva-testing-RG/providers/Microsoft.Network/networkInterfaces/spoke-1-vnet-vm-nic &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">3&lt;/span>&lt;span class="cl">&lt;span class="se">&lt;/span> -o table
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">4&lt;/span>&lt;span class="cl">&lt;span class="c1"># output&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">5&lt;/span>&lt;span class="cl">Source State Address Prefix Next Hop Type Next Hop IP
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">6&lt;/span>&lt;span class="cl">-------- ------ - ---------------- -------------- - ------------ -
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">7&lt;/span>&lt;span class="cl">Default Active 10.100.201.0/24 VnetLocal
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">8&lt;/span>&lt;span class="cl">Default Active 0.0.0.0/0 Internet
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>From UI:
&lt;figure>
&lt;picture>
&lt;img
loading="lazy"
decoding="async"
alt="Effective routes on spoke-1-vm.nic[0]"
class="image_figure image_internal image_unprocessed"
src="https://vuptime.io/images/avs-nva/stage0/effectives-routes-spoke-1-vm.png"
/>
&lt;/picture>
&lt;/figure>
&lt;/p>
&lt;p>As you can already guess from both diagram and routes listing, the communication between distinct vNets is not possible:
Example, from &lt;code>hub-nva&lt;/code> to &lt;code>spoke-1-vm&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="ln">1&lt;/span>&lt;span class="cl">ubuntu@hub-nva:~$ ping 10.100.201.4 -c3
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">2&lt;/span>&lt;span class="cl">&lt;span class="c1"># output&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">3&lt;/span>&lt;span class="cl">PING 10.100.201.4 &lt;span class="o">(&lt;/span>10.100.201.4&lt;span class="o">)&lt;/span> 56&lt;span class="o">(&lt;/span>84&lt;span class="o">)&lt;/span> bytes of data.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">4&lt;/span>&lt;span class="cl">-- - 10.100.201.4 ping statistics ---
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">5&lt;/span>&lt;span class="cl">&lt;span class="m">3&lt;/span> packets transmitted, &lt;span class="m">0&lt;/span> received, 100% packet loss, &lt;span class="nb">time&lt;/span> 2036ms
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>If we try to communicate between spokes, the result will be the same: their is no connectivity between vNets.&lt;/p>
&lt;h3 id="additional-information-about-azure-routing">Additional information about Azure Routing&lt;/h3>
&lt;p>If you need to learn more about network &amp;amp; routing in Azure, I strongly recommend you to read the following amazing blog posts:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://blog.cloudtrooper.net/2023/01/21/azure-networking-is-not-like-your-on-onprem-network/">Azure Networking is not like your on-onprem network&lt;/a> by Jose Moreno&lt;/li>
&lt;li>&lt;a href="https://github.com/cynthiatreger/az-routing-guide-ep2-nic-routing">NIC Routing &amp;amp; Azure routes&lt;/a> by Cynthia Treger&lt;/li>
&lt;/ul>
&lt;h2 id="stage-1--peering-spokes">Stage 1 – Peering spokes&lt;/h2>
&lt;p>In this stage, we will add a peering between &lt;code>spoke1-vnet&lt;/code>, &lt;code>spoke2-vnet&lt;/code> and &lt;code>hub-vnet&lt;/code> to enable communication.&lt;/p>
&lt;p>&lt;figure>
&lt;picture>
&lt;img
loading="lazy"
decoding="async"
alt="Hub and Spoke components of Stage 1"
class="image_figure image_internal image_unprocessed"
src="https://vuptime.io/images/avs-nva/stage1/hub_and_spoke_avs-Step1.drawio.png"
/>
&lt;/picture>
&lt;/figure>
&lt;/p>
&lt;h3 id="routes-analysis-s1">Routes analysis (s1)&lt;/h3>
&lt;p>Once this setup is built, we can have a look at routing configuration between components:&lt;/p>
&lt;p>Effective routes on &lt;code>hub-nva.nic[0]&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="ln"> 1&lt;/span>&lt;span class="cl">az network nic show-effective-route-table &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 2&lt;/span>&lt;span class="cl">&lt;span class="se">&lt;/span> --ids /subscriptions/&amp;lt;sub-id&amp;gt;/resourceGroups/nva-testing-RG/providers/Microsoft.Network/networkInterfaces/hub-nva-nic &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 3&lt;/span>&lt;span class="cl">&lt;span class="se">&lt;/span> -o table
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 4&lt;/span>&lt;span class="cl">&lt;span class="c1"># output&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 5&lt;/span>&lt;span class="cl">Source State Address Prefix Next Hop Type Next Hop IP
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 6&lt;/span>&lt;span class="cl">--------------------- ------- ---------------- --------------------- -------------
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 7&lt;/span>&lt;span class="cl">Default Active 10.100.200.0/24 VnetLocal
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 8&lt;/span>&lt;span class="cl">Default Active 10.100.201.0/24 VNetPeering
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 9&lt;/span>&lt;span class="cl">Default Active 10.100.202.0/24 VNetPeering
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">10&lt;/span>&lt;span class="cl">VirtualNetworkGateway Active 10.100.204.0/24 VirtualNetworkGateway 20.16.121.157
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">11&lt;/span>&lt;span class="cl">Default Active 0.0.0.0/0 Internet
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;figure>
&lt;picture>
&lt;img
loading="lazy"
decoding="async"
alt="Effective routes on hub-nva.nic[0]"
class="image_figure image_internal image_unprocessed"
src="https://vuptime.io/images/avs-nva/stage1/effectives-routes-hub-nva.png"
/>
&lt;/picture>
&lt;/figure>
&lt;/p>
&lt;p>Effective routes on &lt;code>spoke-1-vm.nic[0]&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="ln"> 1&lt;/span>&lt;span class="cl">az network nic show-effective-route-table &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 2&lt;/span>&lt;span class="cl">&lt;span class="se">&lt;/span> --ids /subscriptions/&amp;lt;sub-id&amp;gt;/resourceGroups/nva-testing-RG/providers/Microsoft.Network/networkInterfaces/spoke-1-vnet-vm-nic &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 3&lt;/span>&lt;span class="cl">&lt;span class="se">&lt;/span> -o table
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 4&lt;/span>&lt;span class="cl">&lt;span class="c1"># output&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 5&lt;/span>&lt;span class="cl">Source State Address Prefix Next Hop Type Next Hop IP
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 6&lt;/span>&lt;span class="cl">-------------------- - ------ - ---------------- -------------------- - ------------ -
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 7&lt;/span>&lt;span class="cl">Default Active 10.100.201.0/24 VnetLocal
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 8&lt;/span>&lt;span class="cl">Default Active 10.100.200.0/24 VNetPeering
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 9&lt;/span>&lt;span class="cl">VirtualNetworkGateway Active 10.100.204.0/24 VirtualNetworkGateway 20.16.121.157
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">10&lt;/span>&lt;span class="cl">Default Active 0.0.0.0/0 Internet
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;figure>
&lt;picture>
&lt;img
loading="lazy"
decoding="async"
alt="Effective routes on spoke-1-vm.nic[0]"
class="image_figure image_internal image_unprocessed"
src="https://vuptime.io/images/avs-nva/stage1/effectives-routes-spoke-1-vm.png"
/>
&lt;/picture>
&lt;/figure>
&lt;/p>
&lt;p>The VM in hub-vnet can now ping VMs on peered networks: Example, from &lt;code>hub-nva&lt;/code> to &lt;code>spoke-1-vm&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="ln"> 1&lt;/span>&lt;span class="cl">ubuntu@hub-nva:~$ ping 10.100.201.4 -c3
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 2&lt;/span>&lt;span class="cl">&lt;span class="c1"># output&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 3&lt;/span>&lt;span class="cl">PING 10.100.201.4 &lt;span class="o">(&lt;/span>10.100.201.4&lt;span class="o">)&lt;/span> 56&lt;span class="o">(&lt;/span>84&lt;span class="o">)&lt;/span> bytes of data.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 4&lt;/span>&lt;span class="cl">&lt;span class="m">64&lt;/span> bytes from 10.100.201.4: &lt;span class="nv">icmp_seq&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="m">1&lt;/span> &lt;span class="nv">ttl&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="m">64&lt;/span> &lt;span class="nv">time&lt;/span>&lt;span class="o">=&lt;/span>1.74 ms
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 5&lt;/span>&lt;span class="cl">&lt;span class="m">64&lt;/span> bytes from 10.100.201.4: &lt;span class="nv">icmp_seq&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="m">2&lt;/span> &lt;span class="nv">ttl&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="m">64&lt;/span> &lt;span class="nv">time&lt;/span>&lt;span class="o">=&lt;/span>1.14 ms
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 6&lt;/span>&lt;span class="cl">&lt;span class="m">64&lt;/span> bytes from 10.100.201.4: &lt;span class="nv">icmp_seq&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="m">3&lt;/span> &lt;span class="nv">ttl&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="m">64&lt;/span> &lt;span class="nv">time&lt;/span>&lt;span class="o">=&lt;/span>0.975 ms
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 7&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 8&lt;/span>&lt;span class="cl">-- - 10.100.201.4 ping statistics ---
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 9&lt;/span>&lt;span class="cl">&lt;span class="m">3&lt;/span> packets transmitted, &lt;span class="m">3&lt;/span> received, 0% packet loss, &lt;span class="nb">time&lt;/span> 2003ms
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">10&lt;/span>&lt;span class="cl">rtt min/avg/max/mdev &lt;span class="o">=&lt;/span> 0.975/1.284/1.744/0.331 ms
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>But VM on different spokes cannot communicate together: Example, from &lt;code>spoke-1-vm&lt;/code> to &lt;code>spoke-2-vm&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="ln">1&lt;/span>&lt;span class="cl">ubuntu@spoke-1-vm:~$ ping 10.100.202.4 -c3
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">2&lt;/span>&lt;span class="cl">&lt;span class="c1"># output&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">3&lt;/span>&lt;span class="cl">PING 10.100.202.4 &lt;span class="o">(&lt;/span>10.100.202.4&lt;span class="o">)&lt;/span> 56&lt;span class="o">(&lt;/span>84&lt;span class="o">)&lt;/span> bytes of data.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">4&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">5&lt;/span>&lt;span class="cl">-- - 10.100.202.4 ping statistics ---
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">6&lt;/span>&lt;span class="cl">&lt;span class="m">3&lt;/span> packets transmitted, &lt;span class="m">0&lt;/span> received, 100% packet loss, &lt;span class="nb">time&lt;/span> 2029ms
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>From a VPN client, we can now see the routes to all networks:&lt;/p>
&lt;ul>
&lt;li>10.100.202.0/24: &lt;code>spoke2-vnet&lt;/code>&lt;/li>
&lt;li>10.100.201.0/24: &lt;code>spoke1-vnet&lt;/code>&lt;/li>
&lt;li>10.100.200.0/24: &lt;code>hub-vnet&lt;/code>&lt;/li>
&lt;li>10.100.204.0/24: &lt;code>VPN client range&lt;/code>&lt;/li>
&lt;/ul>
&lt;h3 id="additional-information-about-azure-peering">Additional information about Azure Peering&lt;/h3>
&lt;p>If you need to learn more about network peering in Azure, I strongly recommend you to read the following posts:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://blog.cloudtrooper.net/2021/06/18/vnet-peering-settings-those-familiar-strangers/">VNet peering settings, those familiar strangers&lt;/a> by Jose Moreno&lt;/li>
&lt;li>&lt;a href="https://learn.microsoft.com/en-us/azure/virtual-network/virtual-network-peering-overview">Virtual network peering&lt;/a> in Azure documentation&lt;/li>
&lt;/ul>
&lt;h2 id="stage-2--user-defined-route-on-spokes--gw-propagation-true">Stage 2 – User Defined Route on spokes / GW propagation true&lt;/h2>
&lt;p>In this stage, we will add a UDR on &lt;code>spoke1-vnet&lt;/code> and &lt;code>spoke2-vnet&lt;/code> to enable communication between spokes.&lt;/p>
&lt;p>&lt;figure>
&lt;picture>
&lt;img
loading="lazy"
decoding="async"
alt="Hub and Spoke components of Stage 2"
class="image_figure image_internal image_unprocessed"
src="https://vuptime.io/images/avs-nva/stage2/hub_and_spoke_avs-Step2.drawio.png"
/>
&lt;/picture>
&lt;/figure>
&lt;/p>
&lt;p>For each spoke subnet, we will add a UDR with the following configuration:&lt;/p>
&lt;ul>
&lt;li>0.0.0.0/0 via &lt;code>nva-vm.nic[0].ipaddress&lt;/code>&lt;/li>
&lt;li>&lt;code>disable_bgp_route_propagation = false&lt;/code>&lt;/li>
&lt;/ul>
&lt;p>From UI, it looks like this:&lt;/p>
&lt;p>&lt;figure>
&lt;picture>
&lt;img
loading="lazy"
decoding="async"
alt="UDR on spoke vNets"
class="image_figure image_internal image_unprocessed"
src="https://vuptime.io/images/avs-nva/stage2/UserDefinedRoute-spoke.png"
/>
&lt;/picture>
&lt;/figure>
&lt;/p>
&lt;p>The next hop address is the IP address of the &lt;code>hub-nva&lt;/code> VM NIC in the hub-vnet.&lt;/p>
&lt;p>We also setup the following &lt;em>Gateway route propagation&lt;/em> configuration:&lt;/p>
&lt;p>&lt;figure>
&lt;picture>
&lt;img
loading="lazy"
decoding="async"
alt="UDR route propagation configuration on spoke vNets"
class="image_figure image_internal image_unprocessed"
src="https://vuptime.io/images/avs-nva/stage2/UserDefinedRouteConfiguration-spoke.png"
/>
&lt;/picture>
&lt;/figure>
&lt;/p>
&lt;div class="notices warning">
&lt;div class="label">disable&amp;#43;false&lt;/div>
&lt;p>You may notice a difference in wording between Azure UI and Terraform regarding &lt;em>Gateway route propagation&lt;/em> setting. In Azure UI, the option is called &lt;code>Propagate gateway route&lt;/code>. In API based tools like Terraform, Bicep and ARM, the option is called &lt;code>disableBgpRoutePropagation&lt;/code> (ARM/Bicep) or &lt;code>disable_bgp_route_propagation&lt;/code> (Terraform).&lt;/p>
&lt;p>This can be confusing when related to boolean values. In this case, &lt;code>false&lt;/code> means that the routes from &lt;em>Gateway&lt;/em> components will be propagated to the subnets associated with the UDR.&lt;/p>
&lt;/div>
&lt;h3 id="routes-analysis-s2">Routes analysis (s2)&lt;/h3>
&lt;p>Effective routes on &lt;code>spoke-1-vm.nic[0]&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="ln">1&lt;/span>&lt;span class="cl">az network nic show-effective-route-table --ids /subscriptions/&amp;lt;sub-id&amp;gt;/resourceGroups/nva-testing-RG/providers/Microsoft.Network/networkInterfaces/spoke-1-vnet-vm-nic -o table
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">2&lt;/span>&lt;span class="cl">&lt;span class="c1"># output&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">3&lt;/span>&lt;span class="cl">Source State Address Prefix Next Hop Type Next Hop IP
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">4&lt;/span>&lt;span class="cl">--------------------- ------- ---------------- --------------------- -------------
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">5&lt;/span>&lt;span class="cl">Default Active 10.100.201.0/24 VnetLocal
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">6&lt;/span>&lt;span class="cl">Default Active 10.100.200.0/24 VNetPeering
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">7&lt;/span>&lt;span class="cl">VirtualNetworkGateway Active 10.100.204.0/24 VirtualNetworkGateway 20.16.121.157
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">8&lt;/span>&lt;span class="cl">Default Invalid 0.0.0.0/0 Internet
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">9&lt;/span>&lt;span class="cl">User Active 0.0.0.0/0 VirtualAppliance 10.100.200.68
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;figure>
&lt;picture>
&lt;img
loading="lazy"
decoding="async"
alt="Effective routes on spoke-1-vm.nic[0]"
class="image_figure image_internal image_unprocessed"
src="https://vuptime.io/images/avs-nva/stage2/effectives-routes-spoke-1-vm.png"
/>
&lt;/picture>
&lt;/figure>
&lt;/p>
&lt;p>VM on different spokes can communicate together: Example, from &lt;code>spoke-1-vm&lt;/code> to &lt;code>spoke-2-vm&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="ln"> 1&lt;/span>&lt;span class="cl">ubuntu@spoke-1-vnet-vm:~$ ping 10.100.202.4 -c3
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 2&lt;/span>&lt;span class="cl">&lt;span class="c1"># output&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 3&lt;/span>&lt;span class="cl">PING 10.100.202.4 &lt;span class="o">(&lt;/span>10.100.202.4&lt;span class="o">)&lt;/span> 56&lt;span class="o">(&lt;/span>84&lt;span class="o">)&lt;/span> bytes of data.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 4&lt;/span>&lt;span class="cl">&lt;span class="m">64&lt;/span> bytes from 10.100.202.4: &lt;span class="nv">icmp_seq&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="m">1&lt;/span> &lt;span class="nv">ttl&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="m">63&lt;/span> &lt;span class="nv">time&lt;/span>&lt;span class="o">=&lt;/span>4.05 ms
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 5&lt;/span>&lt;span class="cl">&lt;span class="m">64&lt;/span> bytes from 10.100.202.4: &lt;span class="nv">icmp_seq&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="m">2&lt;/span> &lt;span class="nv">ttl&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="m">63&lt;/span> &lt;span class="nv">time&lt;/span>&lt;span class="o">=&lt;/span>1.59 ms
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 6&lt;/span>&lt;span class="cl">&lt;span class="m">64&lt;/span> bytes from 10.100.202.4: &lt;span class="nv">icmp_seq&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="m">3&lt;/span> &lt;span class="nv">ttl&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="m">63&lt;/span> &lt;span class="nv">time&lt;/span>&lt;span class="o">=&lt;/span>2.18 ms
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 7&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 8&lt;/span>&lt;span class="cl">-- - 10.100.202.4 ping statistics ---
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 9&lt;/span>&lt;span class="cl">&lt;span class="m">3&lt;/span> packets transmitted, &lt;span class="m">3&lt;/span> received, 0% packet loss, &lt;span class="nb">time&lt;/span> 2001ms
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">10&lt;/span>&lt;span class="cl">rtt min/avg/max/mdev &lt;span class="o">=&lt;/span> 1.587/2.604/4.049/1.049 ms
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>From the &lt;code>hub-nva&lt;/code> VM, we can see the traffic going through:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="ln">1&lt;/span>&lt;span class="cl">IP 10.100.201.4 &amp;gt; 10.100.202.4: ICMP echo request, id 8, seq 1, length 64
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">2&lt;/span>&lt;span class="cl">IP 10.100.200.68 &amp;gt; 10.100.202.4: ICMP echo request, id 8, seq 1, length 64
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">3&lt;/span>&lt;span class="cl">IP 10.100.202.4 &amp;gt; 10.100.200.68: ICMP echo reply, id 8, seq 1, length 64
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">4&lt;/span>&lt;span class="cl">IP 10.100.202.4 &amp;gt; 10.100.201.4: ICMP echo reply, id 8, seq 1, length 6
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>From a VPN connection we can reach spoke resources:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="ln">1&lt;/span>&lt;span class="cl">ubuntu@vpn-client:~$ ping 10.100.201.4 -c3
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">2&lt;/span>&lt;span class="cl">&lt;span class="c1"># output&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">3&lt;/span>&lt;span class="cl">PING 10.100.201.4 &lt;span class="o">(&lt;/span>10.100.201.4&lt;span class="o">)&lt;/span> 56&lt;span class="o">(&lt;/span>84&lt;span class="o">)&lt;/span> bytes of data.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">4&lt;/span>&lt;span class="cl">&lt;span class="m">64&lt;/span> bytes from 10.100.201.4: &lt;span class="nv">icmp_seq&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="m">1&lt;/span> &lt;span class="nv">ttl&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="m">63&lt;/span> &lt;span class="nv">time&lt;/span>&lt;span class="o">=&lt;/span>24.1 ms
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">5&lt;/span>&lt;span class="cl">&lt;span class="m">64&lt;/span> bytes from 10.100.201.4: &lt;span class="nv">icmp_seq&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="m">2&lt;/span> &lt;span class="nv">ttl&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="m">63&lt;/span> &lt;span class="nv">time&lt;/span>&lt;span class="o">=&lt;/span>22.7 ms
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">6&lt;/span>&lt;span class="cl">&lt;span class="m">64&lt;/span> bytes from 10.100.201.4: &lt;span class="nv">icmp_seq&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="m">3&lt;/span> &lt;span class="nv">ttl&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="m">63&lt;/span> &lt;span class="nv">time&lt;/span>&lt;span class="o">=&lt;/span>24.9 ms
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>But… if we look from the &lt;code>hub-nva&lt;/code> VM, there is no match for this network traffic. Meaning that the traffic is, as we can guess from the effective routes tables on spokes VMs, going directly from spokes VMs to the VPN Gateway and vice&amp;amp;versa.&lt;/p>
&lt;p>We will try to mitigate this in the next steps by forcing the traffic to go through the &lt;code>hub-nva&lt;/code> VM.&lt;/p>
&lt;h3 id="additional-information-about-azure-udr">Additional information about Azure UDR&lt;/h3>
&lt;p>If you need to learn more about UDR in Azure, I strongly recommend you to read the following posts:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://learn.microsoft.com/en-us/azure/virtual-network/virtual-networks-udr-overview#user-defined">User Defined Routes&lt;/a> in Azure documentation&lt;/li>
&lt;li>&lt;a href="https://learn.microsoft.com/en-us/azure/virtual-network/virtual-networks-udr-overview#how-azure-selects-a-route">How Azure selects a route&lt;/a> in Azure documentation&lt;/li>
&lt;li>&lt;a href="https://blog.cloudtrooper.net/2020/11/28/dont-let-your-azure-routes-bite-you/">Don’t let your Azure Routes bite you&lt;/a> by Jose Moreno&lt;/li>
&lt;/ul>
&lt;h2 id="stage-3--user-defined-route-on-spokes--gw-propagation-false">Stage 3 – User Defined Route on spokes / GW propagation false&lt;/h2>
&lt;p>In this stage, we will start mitigating the issue we have in the previous stage about the network traffic, related to VPN, bypassing our NVA device.&lt;/p>
&lt;p>The first thing we can try is to disable &lt;em>Gateway route propagation&lt;/em> on the UDRs we have created in the previous stage.&lt;/p>
&lt;p>&lt;figure>
&lt;picture>
&lt;img
loading="lazy"
decoding="async"
alt="Hub and Spoke components of Stage 3"
class="image_figure image_internal image_unprocessed"
src="https://vuptime.io/images/avs-nva/stage3/hub_and_spoke_avs-Step3.drawio.png"
/>
&lt;/picture>
&lt;/figure>
&lt;/p>
&lt;p>For each spoke subnet, we will add a UDR with the following configuration:&lt;/p>
&lt;ul>
&lt;li>0.0.0.0/0 via &lt;code>nva-vm.nic[0].ipaddress&lt;/code>&lt;/li>
&lt;li>&lt;code>disable_bgp_route_propagation = true&lt;/code>&lt;/li>
&lt;/ul>
&lt;p>From UI, it looks like this:&lt;/p>
&lt;p>&lt;figure>
&lt;picture>
&lt;img
loading="lazy"
decoding="async"
alt="UDR route propagation configuration on spoke vNets"
class="image_figure image_internal image_unprocessed"
src="https://vuptime.io/images/avs-nva/stage2/UserDefinedRouteConfiguration-spoke.png"
/>
&lt;/picture>
&lt;/figure>
&lt;/p>
&lt;div class="notices warning">
&lt;div class="label">disable&amp;#43;false&lt;/div>
&lt;p>As mentioned earlier, if you use an automation tool to setup this configuration value, you will notice a confusing wording. In Azure UI, the option is called &lt;code>Propagate gateway route&lt;/code>. In API based tools like Terraform, Bicep and ARM, the option is called &lt;code>disableBgpRoutePropagation&lt;/code> (ARM/Bicep) or &lt;code>disable_bgp_route_propagation&lt;/code> (Terraform).&lt;/p>
&lt;p>In this case, &lt;code>true&lt;/code> means that the routes from &lt;em>Gateway&lt;/em> components will not be propagated to the subnets associated with the UDR.&lt;/p>
&lt;/div>
&lt;h3 id="routes-analysis-s3">Routes analysis (s3)&lt;/h3>
&lt;p>Effective routes on &lt;code>spoke-1-vm.nic[0]&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="ln"> 1&lt;/span>&lt;span class="cl">az network nic show-effective-route-table &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 2&lt;/span>&lt;span class="cl">&lt;span class="se">&lt;/span> --ids /subscriptions/&amp;lt;sub-id&amp;gt;/resourceGroups/nva-testing-RG/providers/Microsoft.Network/networkInterfaces/spoke-1-vnet-vm-nic &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 3&lt;/span>&lt;span class="cl">&lt;span class="se">&lt;/span> -o table
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 4&lt;/span>&lt;span class="cl">&lt;span class="c1"># output&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 5&lt;/span>&lt;span class="cl">Source State Address Prefix Next Hop Type Next Hop IP
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 6&lt;/span>&lt;span class="cl">-------- ------ - ---------------- ---------------- ------------ -
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 7&lt;/span>&lt;span class="cl">Default Active 10.100.201.0/24 VnetLocal
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 8&lt;/span>&lt;span class="cl">Default Active 10.100.200.0/24 VNetPeering
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 9&lt;/span>&lt;span class="cl">Default Invalid 0.0.0.0/0 Internet
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">10&lt;/span>&lt;span class="cl">User Active 0.0.0.0/0 VirtualAppliance 10.100.200.68
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;figure>
&lt;picture>
&lt;img
loading="lazy"
decoding="async"
alt="Effective routes on spoke-1-vm.nic[0]"
class="image_figure image_internal image_unprocessed"
src="https://vuptime.io/images/avs-nva/stage3/effectives-routes-spoke-1-vm.png"
/>
&lt;/picture>
&lt;/figure>
&lt;/p>
&lt;p>According to the new UDR setting: The route to the VPN subnet is no more directly published in the effective routes for &lt;code>spoke-1-vm&lt;/code> NIC.
If &lt;code>spoke-1-vm&lt;/code> need to communicate with a VPN based resource, the default &lt;code>0/0&lt;/code> path will be used, going through the &lt;code>hub-nva&lt;/code> VM.&lt;/p>
&lt;p>If we try a ping from VPN client to &lt;code>spoke-1-vm&lt;/code>, it works…&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="ln"> 1&lt;/span>&lt;span class="cl">ubuntu@vpn-client:~$ ping 10.100.201.4 -c3
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 2&lt;/span>&lt;span class="cl">&lt;span class="c1"># output&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 3&lt;/span>&lt;span class="cl">PING 10.100.201.4 &lt;span class="o">(&lt;/span>10.100.201.4&lt;span class="o">)&lt;/span> 56&lt;span class="o">(&lt;/span>84&lt;span class="o">)&lt;/span> bytes of data.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 4&lt;/span>&lt;span class="cl">&lt;span class="m">64&lt;/span> bytes from 10.100.201.4: &lt;span class="nv">icmp_seq&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="m">1&lt;/span> &lt;span class="nv">ttl&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="m">62&lt;/span> &lt;span class="nv">time&lt;/span>&lt;span class="o">=&lt;/span>23.6 ms
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 5&lt;/span>&lt;span class="cl">&lt;span class="m">64&lt;/span> bytes from 10.100.201.4: &lt;span class="nv">icmp_seq&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="m">2&lt;/span> &lt;span class="nv">ttl&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="m">62&lt;/span> &lt;span class="nv">time&lt;/span>&lt;span class="o">=&lt;/span>48.0 ms
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 6&lt;/span>&lt;span class="cl">&lt;span class="m">64&lt;/span> bytes from 10.100.201.4: &lt;span class="nv">icmp_seq&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="m">3&lt;/span> &lt;span class="nv">ttl&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="m">62&lt;/span> &lt;span class="nv">time&lt;/span>&lt;span class="o">=&lt;/span>64.1 ms
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 7&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 8&lt;/span>&lt;span class="cl">-- - 10.100.201.4 ping statistics ---
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 9&lt;/span>&lt;span class="cl">&lt;span class="m">3&lt;/span> packets transmitted, &lt;span class="m">3&lt;/span> received, 0% packet loss, &lt;span class="nb">time&lt;/span> 2001ms
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">10&lt;/span>&lt;span class="cl">rtt min/avg/max/mdev &lt;span class="o">=&lt;/span> 23.609/45.235/64.094/16.643 ms
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>… but, there is a glitch in the Matrix:&lt;/p>
&lt;p>&lt;figure>
&lt;picture>
&lt;img
loading="lazy"
decoding="async"
alt="Glitch in the Matrix: Asymmetric routing"
class="image_figure image_internal image_unprocessed"
src="https://vuptime.io/images/avs-nva/stage3/hub_and_spoke_avs-Step3-AsymmetricTraffic.drawio.png"
/>
&lt;/picture>
&lt;/figure>
&lt;/p>
&lt;p>As you can see, only the traffic from &lt;code>spoke-1-vm&lt;/code> to VPN is going through the &lt;code>hub-nva&lt;/code>. On the contrary, traffic from VPN clients is going directly to spoke VMs resulting in an asymmetric network pattern.&lt;/p>
&lt;p>For example, when doing a ping from VPN client to &lt;code>spoke-1-vm&lt;/code>, we can only see echo &lt;em>reply&lt;/em> going through the &lt;code>hub-nva&lt;/code> when doing a tcpdump:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="ln">1&lt;/span>&lt;span class="cl">ubuntu@hub-nva:~$ sudo tcpdump -nni eth0 icmp
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">2&lt;/span>&lt;span class="cl">&lt;span class="c1"># output&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">3&lt;/span>&lt;span class="cl">IP 10.100.201.4 &amp;gt; 10.100.200.68: ICMP &lt;span class="nb">echo&lt;/span> reply, id 1002, seq 1, length &lt;span class="m">64&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">4&lt;/span>&lt;span class="cl">IP 10.100.201.4 &amp;gt; 10.100.204.2: ICMP &lt;span class="nb">echo&lt;/span> reply, id 1002, seq 1, length &lt;span class="m">64&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>The echo &lt;em>request&lt;/em> is missing: the flow from VPN client is not passing through the hub-nva.&lt;/p>
&lt;h3 id="additional-information-about-gateway-route-propagation">Additional information about Gateway route propagation&lt;/h3>
&lt;p>If you are interested in more details about the &lt;em>Gateway route propagation&lt;/em> feature, you can refer to the following posts:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://learn.microsoft.com/en-us/azure/virtual-network/virtual-networks-udr-overview#border-gateway-protocol">Border gateway protocol&lt;/a> in the Azure documentation&lt;/li>
&lt;li>&lt;a href="https://blog.cloudtrooper.net/2023/02/06/virtual-network-gateways-routing-in-azure/">Virtual Network Gateways routing in Azure&lt;/a> by Jose Moreno&lt;/li>
&lt;li>&lt;a href="https://github.com/cynthiatreger/az-routing-guide-ep1-vnet-peering-and-virtual-network-gateways#12-connectivity-impact-of-adding-a-virtual-network-gateway-er-or-vpn">Connectivity impact of adding a Virtual Network Gateway (ER or VPN)&lt;/a> by Cynthia Treger&lt;/li>
&lt;/ul>
&lt;h2 id="part-1--conclusion">Part 1 – Conclusion&lt;/h2>
&lt;p>In the previous stages, we have seen how to initialize a hub and spoke topology within Azure. At the current stage, our Azure hosted spokes vNet are using the hub vNet as a transit network, leveraging on the default route configured on User Defined Routes (UDR).&lt;/p>
&lt;p>Regarding the VPN connectivity (acting as On Premises workloads), we have discovered that we are facing an asymmetric routing issue. Traffic from VPN clients to Azure hosted VMs is not going through the NVA VM deployed in the hub vNet.&lt;/p>
&lt;p>As a reminder, you can leverage on the content of the following GitHub repository to reproduce the steps described in this post: &lt;a href="https://github.com/lrivallain/azure-labs-and-scripts/tree/master/hub-and-spoke-avs-transit-step-by-step">hub-and-spoke-avs-transit-step-by-step&lt;/a>.&lt;/p>
&lt;p>&lt;strong>In the next post&lt;/strong>, we will see how to mitigate this issue by leveraging on a new User Defined Route configuration. We will also introduce the connectivity of Azure VMware Solution (AVS) to this hub and spoke topology.&lt;/p></description></item></channel></rss>