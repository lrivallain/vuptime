<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>vmware on vUptime.io - Cloud builder(s)</title><link>https://vuptime.io/tags/vmware/</link><description>Recent content in vmware on vUptime.io - Cloud builder(s)</description><generator>Hugo -- gohugo.io</generator><copyright>Ludovic Rivallain and blog co-authors</copyright><lastBuildDate>Wed, 27 Apr 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://vuptime.io/tags/vmware/feed.xml" rel="self" type="application/rss+xml"/><item><title>Public preview – Azure Arc-enabled VMware vSphere – Part 2</title><link>https://vuptime.io/post/2022-04-27-arc-enabled-vmware-vsphere-part2/</link><pubDate>Wed, 27 Apr 2022 00:00:00 +0000</pubDate><guid>https://vuptime.io/2022/04/27/arc-enabled-vmware-vsphere-part2</guid><description>
&lt;p>In the &lt;a href="https://vuptime.io/2022/04/25/arc-enabled-vmware-vsphere-part1">previous post (part 1)&lt;/a>, we covered the capabilities of &lt;em>Azure Arc-enabled VMware vSphere&lt;/em>: a solution to extend Azure governance and management policies to VMware based workload.&lt;/p>
&lt;p>We also deployed a &lt;em>Resource Bridge&lt;/em> to establish the connection between a VMware environment and Azure. We can now explore vCenter inventory through Azure and manage Virtual Machines.&lt;/p>
&lt;h2 id="explore-vcenter-inventory-from-azure-ui">Explore vCenter inventory from Azure UI&lt;/h2>
&lt;p>When vCenter and &lt;em>Resource Bridge&lt;/em> are connected to Azure Arc, you can explore its content and connection status:&lt;/p>
&lt;p>&lt;img src="https://vuptime.io/images/arc-vmware/arc-vmware-vcenter.png" alt="vCenter details in Azure Portal">&lt;/p>
&lt;p>In order to use a resource in Azure, an activation is required: Use the &lt;strong>Enable in Azure&lt;/strong> to activate an existing VMware resource in Azure. As with any Azure-based resource, RBAC strategies can be applied to provide or restrict access to &lt;em>Azure-enabled&lt;/em> resources.&lt;/p>
&lt;blockquote>
&lt;p>ResourcePool, Networks, Templates and Datastores will appear as &lt;em>hidden resources&lt;/em> in Azure &lt;em>ResourceGroup&lt;/em> you will select in the activation process. They will be used for the VM creation process but cannot be edited from Azure.&lt;/p>
&lt;/blockquote>
&lt;h3 id="resourcepools">ResourcePools&lt;/h3>
&lt;p>VMware &lt;em>ResourcePools&lt;/em> cannot be created, edited or remove but can be registered for VM creation scenario. By default, all resourcePools will be displayed in the inventory list (including Cluster and Hosts resourcePool representation). You can enable a ResourcePools in Azure by selecting it and click on &lt;strong>Enable in Azure&lt;/strong>. You will be prompted for an Azure &lt;em>ResourceGroup&lt;/em> attachment and the resourcePool will then be displayed with a link to explore its details.&lt;/p>
&lt;p>&lt;img src="https://vuptime.io/images/arc-vmware/arc-vmware-resourcepool.png" alt="ResourcePools resources in Azure Portal">&lt;/p>
&lt;h3 id="vm-templates">VM Templates&lt;/h3>
&lt;p>VMware &lt;em>VM Templates&lt;/em> cannot be created, edited or remove but can be registered for VM creation scenario. By default, all VM Templates will be displayed in the inventory list. You can enable a VM Template in Azure by selecting it and click on &lt;strong>Enable in Azure&lt;/strong>. You will be prompted for an Azure &lt;em>ResourceGroup&lt;/em> attachment and the Template will then be displayed with a link to explore its details.&lt;/p>
&lt;blockquote>
&lt;p>&lt;strong>Note&lt;/strong>: Currently, the template from the Content Library are not available. Only VM template from vCenter VM-folders inventory are usable in &lt;em>Azure Arc-enabled VMware vSphere&lt;/em>.&lt;/p>
&lt;/blockquote>
&lt;p>&lt;img src="https://vuptime.io/images/arc-vmware/arc-vmware-template.png" alt="VM Templates in Azure Portal">&lt;/p>
&lt;h3 id="networks">Networks&lt;/h3>
&lt;p>VMware &lt;em>Networks&lt;/em> cannot be created, edited or remove but can be registered for VM creation scenario. By default, all networks (NSX-T segments, PortGroups and DvPortGroups) will be displayed in the inventory list. You can enable a network in Azure by selecting it and click on &lt;strong>Enable in Azure&lt;/strong>. You will be prompted for an Azure &lt;em>ResourceGroup&lt;/em> attachment and the Template will then be displayed with a link to explore its details.&lt;/p>
&lt;p>&lt;img src="https://vuptime.io/images/arc-vmware/arc-vmware-network.png" alt="Networks in Azure Portal">&lt;/p>
&lt;h3 id="datastores">Datastores&lt;/h3>
&lt;p>VMware &lt;em>Datastores&lt;/em> cannot be created, edited or remove but can be registered for VM creation scenario. By default, all Datastores will be displayed in the inventory list. You can enable a Datastore in Azure by selecting it and click on &lt;strong>Enable in Azure&lt;/strong>. You will be prompted for an Azure &lt;em>ResourceGroup&lt;/em> attachment and the Datastore will then be displayed with a link to explore its details.&lt;/p>
&lt;p>&lt;img src="https://vuptime.io/images/arc-vmware/arc-vmware-datastore.png" alt="Datastores in Azure Portal">&lt;/p>
&lt;h2 id="vmware-virtual-machine-management-through-azure">VMware Virtual Machine management through Azure&lt;/h2>
&lt;p>As mentioned in the previous parts of this post, ResourcePool, Networks, Templates and Datastores cannot be created, edited or deleted through Azure (UI, API, ARM etc.) but can be registered with ReadOnly access to provide Virtual Machines deployment dependencies.&lt;/p>
&lt;p>The set of actions available for VMware Virtual Machines through Azure is more significant as you can:&lt;/p>
&lt;ul>
&lt;li>Run power operations (Start/Stop/Restart)&lt;/li>
&lt;li>Reconfigure Virtual Machine:
&lt;ul>
&lt;li>CPU/Memory (for powered-off VM)&lt;/li>
&lt;li>Disk(s) - Add/remove/resize&lt;/li>
&lt;li>Networks - Add/remove/Change network attachment&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Enable Arc-based guest management and install extensions&lt;/li>
&lt;li>Apply RBAC and tagging policies&lt;/li>
&lt;/ul>
&lt;blockquote>
&lt;p>&lt;em>VMware Arc-based guest extensions&lt;/em> are &lt;a href="https://docs.microsoft.com/en-us/azure/azure-arc/vmware-vsphere/manage-vmware-vms-in-azure#supported-extensions-and-management-services">currently limited to 2 extensions&lt;/a>: Log Analytics agent and cCustom Script execution.&lt;/p>
&lt;/blockquote>
&lt;h3 id="azure-arc-enabled-servers">Azure Arc enabled servers&lt;/h3>
&lt;p>If &lt;em>Azure Arc-enabled VMware vSphere&lt;/em> based guest agent is currently limited to 2 extensions, it is still possible to use the normal Arc process to integrate the guest OS management of deployed servers through Azure and to benefit from all the capabilities of &lt;a href="https://azure.microsoft.com/en-us/services/azure-arc/#product-overview">Azure Arc&lt;/a> like (as mentioned in the &lt;a href="https://docs.microsoft.com/en-us/azure/azure-arc/overview">Arc documentation&lt;/a>):&lt;/p>
&lt;ul>
&lt;li>Manage your entire environment together by projecting your existing non-Azure and/or on-premises resources into Azure Resource Manager.&lt;/li>
&lt;li>Manage virtual machines, Kubernetes clusters, and databases as if they are running in Azure.&lt;/li>
&lt;li>Use familiar Azure services and management capabilities, regardless of where they live.&lt;/li>
&lt;li>Continue using traditional ITOps while introducing DevOps practices to support new cloud native patterns in your environment.&lt;/li>
&lt;li>Configure custom locations as an abstraction layer on top of Azure Arc-enabled Kubernetes clusters and cluster extensions.&lt;/li>
&lt;/ul>
&lt;blockquote>
&lt;p>&lt;strong>Personal experience&lt;/strong>: I use this combination of &lt;em>Azure Arc-enabled VMware vSphere&lt;/em> and &lt;em>Azure Arc-enabled Servers&lt;/em> to fully manage, with Azure, VMware Virtual Machine objects and their Guest OS. This provide me the best of the two solutions.&lt;/p>
&lt;/blockquote>
&lt;h3 id="register-an-existing-vm">Register an existing VM&lt;/h3>
&lt;p>You can enable a Virtual Machine in Azure by selecting it and click on &lt;strong>Enable in Azure&lt;/strong>. You will be prompted for an Azure &lt;em>ResourceGroup&lt;/em> attachment and the VM will then be displayed with a link to explore its details.&lt;/p>
&lt;p>&lt;img src="https://vuptime.io/images/arc-vmware/arc-vmware-vm-details.png" alt="Details of an Azure-enabled VMware Virtual Machine">&lt;/p>
&lt;h3 id="create-a-vm">Create a VM&lt;/h3>
&lt;p>A VM object can also be fully created from Azure (UI or API).&lt;/p>
&lt;ol>
&lt;li>From the Arc Virtual Machines or Arc-registered vCenter list of VMs, click on &lt;strong>Create&lt;/strong> button to start the VM creation wizard.&lt;/li>
&lt;/ol>
&lt;p>&lt;img src="https://vuptime.io/images/arc-vmware/arc-vmware-vm-creation-1.png" alt="VMware Virtual Machine creation process – Step 1">&lt;/p>
&lt;ol start="2">
&lt;li>You can select a ResourceGroup to attach the VM to, then provide some details for the VM deployment:&lt;/li>
&lt;/ol>
&lt;ul>
&lt;li>A name&lt;/li>
&lt;li>The &lt;em>custom-location&lt;/em> and object type (&lt;em>VMware&lt;/em>)&lt;/li>
&lt;li>The target &lt;em>resourcePool&lt;/em>&lt;/li>
&lt;li>The &lt;em>VM Template&lt;/em> to use&lt;/li>
&lt;li>VM CPU and Memory configuration if you choose to override the template settings&lt;/li>
&lt;li>Administrator login and password if you choose to enable guest management during the creation process&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="https://vuptime.io/images/arc-vmware/arc-vmware-vm-creation-2.png" alt="VMware Virtual Machine creation process – Step 2">&lt;/p>
&lt;ol start="3">
&lt;li>The second step of the wizard is for virtual disks configuration: name, size, controller and persistence.&lt;/li>
&lt;/ol>
&lt;p>&lt;img src="https://vuptime.io/images/arc-vmware/arc-vmware-vm-creation-3.png" alt="VMware Virtual Machine creation process – Step 3">&lt;/p>
&lt;ol start="4">
&lt;li>The third step of the wizard provide network settings configuration (network attachment, IP settings etc.)&lt;/li>
&lt;/ol>
&lt;p>&lt;img src="https://vuptime.io/images/arc-vmware/arc-vmware-vm-creation-4.png" alt="VMware Virtual Machine creation process – Step 4">&lt;/p>
&lt;ol start="5">
&lt;li>In the fourth step, you can add tag/value to the VM object (tag will only apply on Azure side: not VMware side.)&lt;/li>
&lt;/ol>
&lt;p>&lt;img src="https://vuptime.io/images/arc-vmware/arc-vmware-vm-creation-5.png" alt="VMware Virtual Machine creation process – Step 5">&lt;/p>
&lt;ol start="6">
&lt;li>The last step provide a pane to validate the requested changes and to start the deployment.&lt;/li>
&lt;/ol>
&lt;p>&lt;img src="https://vuptime.io/images/arc-vmware/arc-vmware-vm-creation-6.png" alt="VMware Virtual Machine creation process – Step 6">&lt;/p>
&lt;ol start="7">
&lt;li>When the deployment process is completed, you can see its results and display the deployed resources.&lt;/li>
&lt;/ol>
&lt;p>&lt;img src="https://vuptime.io/images/arc-vmware/arc-vmware-vm-creation-7.png" alt="VMware Virtual Machine creation process – Step 6">&lt;/p>
&lt;p>You can now compare the view on the same VM object from vCenter and from Azure UI:&lt;/p>
&lt;p>&lt;img src="https://vuptime.io/images/arc-vmware/arc-vmware-vm-creation-8.png" alt="VMware Virtual Machine creation process – Step 6">&lt;/p>
&lt;h2 id="azure-governance-on-vmware-based-resources">Azure governance on VMware based resources&lt;/h2>
&lt;p>One of the main benefit from managing VMware resources from Azure is the possibility to apply standard Azure governance strategies like:&lt;/p>
&lt;h3 id="grouping-and-tagging">Grouping and tagging&lt;/h3>
&lt;p>VMware resources that are enabled in Azure can be attached to Azure &lt;em>ResourceGroups&lt;/em> and benefit from the governance inheritance on resource objects (RBAC, locks etc.)&lt;/p>
&lt;p>VMware resources can also be tagged in order to filter resources in search operations or to manage resources costing and attributions.&lt;/p>
&lt;p>&lt;img src="https://vuptime.io/images/arc-vmware/arc-vmware-vm-rg-tags.png" alt="Azure ResourceGroup and Tags applied to a VMware resource">&lt;/p>
&lt;h3 id="rbac">RBAC&lt;/h3>
&lt;p>You can apply Azure RBAC strategies to VMware resources that are enabled in Azure and provide, ReadOnly, Contribution or ownership to the resources.&lt;/p>
&lt;p>&lt;img src="https://vuptime.io/images/arc-vmware/arc-vmware-vm-rbac.png" alt="Azure RBAC applied to a VMware resource">&lt;/p>
&lt;h3 id="lock">Lock&lt;/h3>
&lt;p>You can also prevent deletion or modification by using Azure Lock and the dependencies from Subscription or ResourceGroup:&lt;/p>
&lt;p>&lt;img src="https://vuptime.io/images/arc-vmware/arc-vmware-vm-lock.png" alt="Delete lock applied to a VMware resource">&lt;/p>
&lt;h2 id="upcoming">Upcoming&lt;/h2>
&lt;p>As you may have noticed in the last screens of the deployment, it is possible to get/download the ARM template that represents the ongoing deployment. This will be covered in the upcoming post about automation capabilities provided by &lt;em>Azure Arc-enabled VMware vSphere&lt;/em>.&lt;/p>
&lt;h3 id="credits">Credits&lt;/h3>
&lt;p>Title photo by &lt;a href="https://unsplash.com/@smeshny">Siarhei Palishchuk&lt;/a> on &lt;a href="https://unsplash.com/photos/l5QjpiLwJ_E">Unsplash&lt;/a>&lt;/p></description></item><item><title>Public preview – Azure Arc-enabled VMware vSphere – Part 1</title><link>https://vuptime.io/post/2022-04-25-arc-enabled-vmware-vsphere-part1/</link><pubDate>Mon, 25 Apr 2022 00:00:00 +0000</pubDate><guid>https://vuptime.io/2022/04/25/arc-enabled-vmware-vsphere-part1</guid><description>
&lt;h2 id="manage-your-vmware-datacenter-through-azure-cloud-tools">Manage your VMware Datacenter through Azure Cloud tools&lt;/h2>
&lt;p>Announced in &lt;a href="https://azure.microsoft.com/en-us/updates/private-preview-new-azure-arc-capabilities-in-november-2021/">private preview stage&lt;/a> during the &lt;a href="https://aka.ms/IgniteNov21/InnovateAnywhereBlog">Microsoft Ignite&lt;/a> on November 2021, the &lt;a href="https://azure.microsoft.com/en-us/services/azure-arc/#product-overview">Azure Arc&lt;/a> integration with VMware vSphere is now &lt;a href="https://azure.microsoft.com/en-us/updates/public-preview-azure-arc-integration-with-vmware-vsphere/">available in public preview&lt;/a> since March 31&lt;sup>th&lt;/sup>, 2022.&lt;/p>
&lt;p>The feature, still in development process, is now labeled &lt;em>Azure Arc-enabled VMware vSphere&lt;/em>, and provides a unified governance and management solution for lifecycle and guest OS operations of VMware VMs through Azure Arc.&lt;/p>
&lt;blockquote>
&lt;p>As &lt;a href="https://azure.microsoft.com/en-us/services/azure-vmware/">Azure VMware Solutions&lt;/a> private clouds relies on a &lt;a href="https://www.vmware.com/products/cloud-foundation.html">standardized VMware SDDC&lt;/a>, you can also use &lt;em>Azure Arc-enabled VMware vSphere&lt;/em> to operate your AVS-based workloads.&lt;/p>
&lt;/blockquote>
&lt;h3 id="how-it-works-">How it works ?&lt;/h3>
&lt;p>&lt;em>Azure Arc-enabled VMware vSphere&lt;/em> relies on a &lt;em>Resource Bridge&lt;/em> appliance deployed in the target environment (or in a VMware environment with network access to the target one). This bridge will act a the access-point for Azure Arc to get and manage data from vCenter APIs.&lt;/p>
&lt;p>As of now, the &lt;em>Resource Bridge&lt;/em> requires an outbound connectivity to Internet (specifically to to Azure APIs over HTTPS(443)) and can only be deployed on a VMware environment.&lt;/p>
&lt;p>&lt;img src="https://vuptime.io/images/arc-vmware/arc-resource-bridge.png" alt="The Azure Arc Resource Bridge act as a gateway for Azure Arc to access and manage VMware based workloads.">&lt;/p>
&lt;p>When the appliance is fully deployed and reports to the Azure Arc APIs, you can browse the inventory and enable some VMware components to be accessible as Azure objects. Azure-Enabled resources from the VMware environment will be attached to:&lt;/p>
&lt;ul>
&lt;li>A &lt;strong>custom location&lt;/strong> representing your VMware Datacenter in Azure&lt;/li>
&lt;li>A &lt;strong>resource group&lt;/strong> to provide ability to organize your resources and to apply RBAC (Role-Based Access Control) strategy&lt;/li>
&lt;/ul>
&lt;h3 id="benefits">Benefits&lt;/h3>
&lt;p>As for Azure Arc, the main goal of &lt;em>Azure Arc-enabled VMware vSphere&lt;/em> is to extend Azure governance and management capabilities on non-Azure environments. In this case to a VMware vSphere infrastructure.&lt;/p>
&lt;p>This provides a &lt;strong>consistent management experience across Azure and VMware vSphere infrastructure&lt;/strong> like:&lt;/p>
&lt;ul>
&lt;li>VMware virtual machine (VM) lifecycle operations: create/register, start/stop, resize, and delete.&lt;/li>
&lt;li>Apply RBAC strategy to provide users and application teams to self-serve VM operations.&lt;/li>
&lt;li>Apply Azure governance strategies across Azure and VMware VMs by enabling guest management (Azure Policies, Update Management, Monitoring etc.).&lt;/li>
&lt;li>Use Azure Resource Manager based API to manage VMware workload (ARM or Bicep templates, Azure APIs and CLI tools).&lt;/li>
&lt;/ul>
&lt;h2 id="resource-bridge-deployment">Resource Bridge Deployment&lt;/h2>
&lt;blockquote>
&lt;p>&lt;strong>Disclaimer&lt;/strong>: This walkthrough deployment process is not a substitution of the Microsoft Documentation about &lt;a href="https://docs.microsoft.com/en-us/azure/azure-arc/vmware-vsphere/">&lt;em>Azure Arc-enabled VMware vSphere&lt;/em>&lt;/a>. This blog post will not receive major updates to synchronize with the development status of &lt;em>Azure Arc-enabled VMware vSphere&lt;/em> feature and only reflect the process at a specific moment in time.&lt;/p>
&lt;/blockquote>
&lt;h3 id="pre-requisites">Pre-requisites&lt;/h3>
&lt;p>In order to have access to all &lt;em>Azure Arc-enabled VMware vSphere&lt;/em> features, I had to register the following Azure resources providers to my subscription:&lt;/p>
&lt;ul>
&lt;li>&lt;code>Microsoft.ConnectedVMwarevSphere&lt;/code>&lt;/li>
&lt;li>&lt;code>Microsoft.HybridCompute&lt;/code>&lt;/li>
&lt;li>&lt;code>Microsoft.GuestConfiguration&lt;/code>&lt;/li>
&lt;/ul>
&lt;p>I used &lt;a href="https://docs.microsoft.com/en-us/cli/azure/">Azure CLI&lt;/a>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="ln">1&lt;/span>&lt;span class="cl">&lt;span class="nb">export&lt;/span> &lt;span class="nv">AZURE_SUBSCRIPTION_ID&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;********-****-****-****-************&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">2&lt;/span>&lt;span class="cl">az provider register --wait --subscription &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">AZURE_SUBSCRIPTION_ID&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span> --namespace Microsoft.ConnectedVMwarevSphere
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">3&lt;/span>&lt;span class="cl">az provider register --wait --subscription &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">AZURE_SUBSCRIPTION_ID&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span> --namespace Microsoft.HybridCompute
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">4&lt;/span>&lt;span class="cl">az provider register --wait --subscription &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">AZURE_SUBSCRIPTION_ID&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span> --namespace Microsoft.GuestConfiguration
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="resource-requirements">Resource requirements&lt;/h3>
&lt;p>The &lt;em>Resource Bridge&lt;/em> appliance requires the following resources assignment:&lt;/p>
&lt;ul>
&lt;li>4 vCPU&lt;/li>
&lt;li>16GB RAM&lt;/li>
&lt;li>100GB free disk space&lt;/li>
&lt;/ul>
&lt;h3 id="create-the-vcenter-resource-bridge">Create the vCenter Resource Bridge&lt;/h3>
&lt;p>From Azure portal, select the &lt;strong>Azure Arc&lt;/strong> product then:&lt;/p>
&lt;ol>
&lt;li>VMware vCenters (preview)&lt;/li>
&lt;li>(+) Add&lt;/li>
&lt;/ol>
&lt;p>&lt;img src="https://vuptime.io/images/arc-vmware/arc-resource-bridge-creation-01.png" alt="Resource Bridge creation from Azure UI – step 1">&lt;/p>
&lt;p>You will be requested to:&lt;/p>
&lt;ol>
&lt;li>Attach the &lt;em>Resource Bridge&lt;/em> to a subscription, a resource-group and a region (only East US and West Europe are available by now).&lt;/li>
&lt;li>Provide a name for a &lt;em>custom location&lt;/em>&lt;/li>
&lt;/ol>
&lt;blockquote>
&lt;p>The &lt;em>custom location&lt;/em> will represent, in Azure, the location of your vCenter deployment.&lt;/p>
&lt;/blockquote>
&lt;ol start="3">
&lt;li>Provide a name for the vCenter in Azure&lt;/li>
&lt;/ol>
&lt;p>&lt;img src="https://vuptime.io/images/arc-vmware/arc-resource-bridge-creation-02.png" alt="Resource Bridge creation from Azure UI – step 2">&lt;/p>
&lt;p>In the next screen of the wizard, you can attach &lt;em>tags&lt;/em> to your new resource. In the third step, you are invited to download a PowerShell-based (Windows) or Azure CLI-based (Linux) version of a script.&lt;/p>
&lt;blockquote>
&lt;p>If your subscription is not registered with all the required resource providers, a &lt;strong>Register&lt;/strong> button will appear.&lt;/p>
&lt;/blockquote>
&lt;p>&lt;img src="https://vuptime.io/images/arc-vmware/arc-resource-bridge-creation-03.png" alt="Resource Bridge creation from Azure UI – step 3">&lt;/p>
&lt;p>The downloaded script needs to be run from a workstation or &lt;em>jump server&lt;/em> with direct or proxyfied access to the vCenter where the resource bridge will be deployed.&lt;/p>
&lt;p>The last wizard step provide an insight on the resource bridge deployment status, but does not affect the resource creation.&lt;/p>
&lt;p>&lt;img src="https://vuptime.io/images/arc-vmware/arc-resource-bridge-creation-04.png" alt="Resource Bridge creation from Azure UI – step 4">&lt;/p>
&lt;h4 id="windows-powershell-script">(Windows) Powershell script&lt;/h4>
&lt;blockquote>
&lt;p>&lt;a href="https://docs.microsoft.com/fr-fr/powershell/azure/?view=azps-7.4.0">Azure PowerShell&lt;/a> module is required.&lt;/p>
&lt;/blockquote>
&lt;p>If you choose the PowerShell (Windows) version of the script:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-ps1" data-lang="ps1">&lt;span class="line">&lt;span class="ln">1&lt;/span>&lt;span class="cl">&lt;span class="nb">Set-ExecutionPolicy&lt;/span> &lt;span class="n">-ExecutionPolicy&lt;/span> &lt;span class="n">RemoteSigned&lt;/span> &lt;span class="n">-Scope&lt;/span> &lt;span class="n">CurrentUser&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">2&lt;/span>&lt;span class="cl">&lt;span class="nb">Install-Module&lt;/span> &lt;span class="n">-Name&lt;/span> &lt;span class="n">Az&lt;/span> &lt;span class="n">-Scope&lt;/span> &lt;span class="n">CurrentUser&lt;/span> &lt;span class="n">-Repository&lt;/span> &lt;span class="n">PSGallery&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">3&lt;/span>&lt;span class="cl">&lt;span class="nb">Connect-AzAccount&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">4&lt;/span>&lt;span class="cl">&lt;span class="p">./&lt;/span>&lt;span class="nb">resource-bridge&lt;/span>&lt;span class="n">-onboarding-script&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">ps1&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="linux-azure-cli-script">(Linux) Azure CLI script&lt;/h4>
&lt;blockquote>
&lt;p>&lt;a href="https://docs.microsoft.com/en-us/cli/azure/">Azure CLI&lt;/a> is required.&lt;/p>
&lt;/blockquote>
&lt;p>If you choose the PowerShell (Windows) version of the script:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="ln">1&lt;/span>&lt;span class="cl">az login
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">2&lt;/span>&lt;span class="cl">bash resource-bridge-onboarding-script.sh
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="running-the-deployment-script">Running the deployment script&lt;/h4>
&lt;p>The deployment script will ask for a set of information in order do deploy and configure the &lt;em>resource bridge&lt;/em> appliance.&lt;/p>
&lt;ul>
&lt;li>Proxy settings for the current workstation&lt;/li>
&lt;li>Target vCenter FQDN, username, password&lt;/li>
&lt;li>VM deployment details:
&lt;ul>
&lt;li>VMware logical-datacenter&lt;/li>
&lt;li>Network&lt;/li>
&lt;li>ResourcePool&lt;/li>
&lt;li>Datastore&lt;/li>
&lt;li>VM Folder&lt;/li>
&lt;li>Appliance IP settings&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="https://vuptime.io/images/arc-vmware/arc-resource-bridge-creation-05.png" alt="Resource Bridge creation from Azure UI – step 5">
&lt;img src="https://vuptime.io/images/arc-vmware/arc-resource-bridge-creation-06.png" alt="Resource Bridge creation from Azure UI – step 6">&lt;/p>
&lt;p>The script will run for about 15 minutes to download, deploy and configure the Resource Bridge appliance. When fully deployed, the &lt;em>verification&lt;/em> step of the UI wizard will display a green check to validate that both Azure API and the appliance are communicating together.&lt;/p>
&lt;h2 id="upcoming">Upcoming&lt;/h2>
&lt;p>In the upcoming posts, we will cover the functional capabilities of having VMware resources managed through Azure, from UI or with automation tools.&lt;/p>
&lt;h3 id="credits">Credits&lt;/h3>
&lt;p>Title photo by &lt;a href="https://unsplash.com/@jbcreate_">Joseph Barrientos&lt;/a> on &lt;a href="https://unsplash.com/photos/oQl0eVYd_n8">Unsplash&lt;/a>&lt;/p></description></item><item><title>Azure VMware Solutions REST API - part 2: `az rest`</title><link>https://vuptime.io/post/2022-02-15-azure-vmware-solution-rest-api-part2/</link><pubDate>Tue, 15 Feb 2022 00:00:00 +0000</pubDate><guid>https://vuptime.io/2022/02/15/azure-vmware-solution-rest-api-part2/</guid><description>
&lt;p>After a discovery of Azure VMware Solution REST API through the &lt;a href="https://vuptime.io/2022/01/06/azure-vmware-solution-rest-api-part1/">Postman collection&lt;/a> in &lt;em>part 1&lt;/em>, we will use some of the fundamentals API calls through &lt;code>az rest&lt;/code>, a useful subset of the &lt;a href="https://docs.microsoft.com/en-us/cli/azure/">Azure Command-Line Interface&lt;/a>.&lt;/p>
&lt;p>Compared to Postman, I consider &lt;code>az rest&lt;/code> an easier way to discover Azure REST API in a blog post as it doesn't require to post screenshots or long code samples to narrate the exploration. But of course, you could use the &lt;a href="https://github.com/lrivallain/avs-rest-api-postman-collection">AVS Postman collection&lt;/a> to achieve the same purpose or any other REST client tool (httpie, curl etc.): this is the great power of REST APIs.&lt;/p>
&lt;h2 id="preparation">Preparation&lt;/h2>
&lt;p>A big benefit of using &lt;code>az rest&lt;/code> to manage an Azure product, like Azure VMware Solution, through its REST API is that the tool already manages the authentication or provide a simple way to connect to your tenant and to execute request without manually providing authentication tokens.&lt;/p>
&lt;h3 id="login">Login&lt;/h3>
&lt;p>If you have not already logged-in to your tenant, you can follow the next steps:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="ln">1&lt;/span>&lt;span class="cl">az login
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">2&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">3&lt;/span>&lt;span class="cl">&lt;span class="c1"># Or, if you manage multiple tenants, you can add the --tenant parameter to login to it:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">4&lt;/span>&lt;span class="cl">az login --tenant xxxxxxxxxxx.onmicrosoft.com
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>By default, this command will open a web browser asking you to connect to your azure tenant. Once logged-in your browser, you can close the tab and the CLI will successfully be connected.&lt;/p>
&lt;p>If your terminal session cannot connect to a web browser (if you use a remote session like SSH for example), you can use:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="ln">1&lt;/span>&lt;span class="cl">az login --use-device-code
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">2&lt;/span>&lt;span class="cl">&lt;span class="c1"># To sign in, use a web browser to open the page https://microsoft.com/devicelogin and enter the code ********** to authenticate.&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>After opening the &lt;a href="https://microsoft.com/devicelogin">provided link&lt;/a> and used the token, your CLI should be connected.&lt;/p>
&lt;p>You can check your connection information with:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="ln">1&lt;/span>&lt;span class="cl">az account show --output table
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">2&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">3&lt;/span>&lt;span class="cl">EnvironmentName HomeTenantId IsDefault Name State TenantId
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">4&lt;/span>&lt;span class="cl">----------------- ------------------------------------ ----------- ---------------------------- ------- ------------------------------------
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">5&lt;/span>&lt;span class="cl">AzureCloud ********-****-****-****-************ True Azure VMware Solutions Tests Enabled ********-****-****-****-************
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="subscription">Subscription&lt;/h3>
&lt;p>If you use multiple subscriptions (it is recommended!), you can select to one hosting your AVS:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="ln">1&lt;/span>&lt;span class="cl">&lt;span class="c1"># List available subscriptions&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">2&lt;/span>&lt;span class="cl">az account subscription list --output table
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">3&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">4&lt;/span>&lt;span class="cl">&lt;span class="c1"># Select one subscription&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">5&lt;/span>&lt;span class="cl">az account &lt;span class="nb">set&lt;/span> --subscription ********-****-****-****-************
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="sddc-base-uri">SDDC base URI&lt;/h3>
&lt;p>To achieve quick and successfully REST requests on a specific resource, it could be useful to get its &lt;em>base URI&lt;/em> and to store it in an environment variable.&lt;/p>
&lt;p>For an AVS resource, this base URI is built like:&lt;/p>
&lt;p>&lt;code>https://management.azure.com/subscriptions/${SUBSCRIPTION_ID}/resourceGroups/${RESOURCEGROUP_NAME}/providers/Microsoft.AVS/privateClouds/${SDDC_NAME}&lt;/code>&lt;/p>
&lt;p>With the following components:&lt;/p>
&lt;ul>
&lt;li>&lt;code>https://management.azure.com&lt;/code>: The Azure REST API domain endpoint&lt;/li>
&lt;li>&lt;code>/subscriptions/${SUBSCRIPTION_ID}&lt;/code>&lt;/li>
&lt;li>&lt;code>resourceGroups/${RESOURCEGROUP_NAME}&lt;/code>&lt;/li>
&lt;li>&lt;code>/providers/Microsoft.AVS&lt;/code>: A pointer to the AVS resources provider&lt;/li>
&lt;li>&lt;code>/privateClouds/${SDDC_NAME}&lt;/code>&lt;/li>
&lt;/ul>
&lt;p>With the following commands, you can easily populate an AVS base URI:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="ln">1&lt;/span>&lt;span class="cl">&lt;span class="nb">export&lt;/span> &lt;span class="nv">SUBSCRIPTION_ID&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;********-****-****-****-************&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">2&lt;/span>&lt;span class="cl">&lt;span class="nb">export&lt;/span> &lt;span class="nv">RESOURCEGROUP_NAME&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;resourceGroupName&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">3&lt;/span>&lt;span class="cl">&lt;span class="nb">export&lt;/span> &lt;span class="nv">SDDC_NAME&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;AVS-Tests&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">4&lt;/span>&lt;span class="cl">&lt;span class="nb">export&lt;/span> &lt;span class="nv">SDDC_BASE_URI&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;https://management.azure.com/subscriptions/&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">SUBSCRIPTION_ID&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">/resourceGroups/&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">RESOURCEGROUP_NAME&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">/providers/Microsoft.AVS/privateClouds/&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">SDDC_NAME&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="api-version">API version&lt;/h3>
&lt;p>When using Azure API, you need to specify the API version you want to use. For AVS, I currently use version &lt;em>2021-12-01&lt;/em> (the last version currently available):&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="ln">1&lt;/span>&lt;span class="cl">&lt;span class="nb">export&lt;/span> &lt;span class="nv">API_VERSION&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;api-version=2021-12-01&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="avs-endpoints-and-credentials-management">AVS endpoints and credentials management&lt;/h2>
&lt;p>When you need to connect to an AVS system, you need two mandatory information:&lt;/p>
&lt;ul>
&lt;li>The endpoints name&lt;/li>
&lt;li>The credentials to use&lt;/li>
&lt;/ul>
&lt;p>The endpoints can be retrieved from (&lt;a href="https://docs.microsoft.com/en-us/rest/api/avs/private-clouds/get">Doc.&lt;/a>):&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="ln"> 1&lt;/span>&lt;span class="cl">&lt;span class="c1"># The global information about the AVS deployment:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 2&lt;/span>&lt;span class="cl">az rest -m get -u &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">SDDC_BASE_URI&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">?&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">API_VERSION&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 3&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 4&lt;/span>&lt;span class="cl">&lt;span class="c1"># A filtered result from the previous request:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 5&lt;/span>&lt;span class="cl">az rest -m get -u &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">SDDC_BASE_URI&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">?&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">API_VERSION&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span> &lt;span class="p">|&lt;/span> jq &lt;span class="s2">&amp;#34;.properties.endpoints&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 6&lt;/span>&lt;span class="cl">&lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 7&lt;/span>&lt;span class="cl"> &lt;span class="s2">&amp;#34;hcxCloudManager&amp;#34;&lt;/span>: &lt;span class="s2">&amp;#34;https://10.100.100.9/&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 8&lt;/span>&lt;span class="cl"> &lt;span class="s2">&amp;#34;nsxtManager&amp;#34;&lt;/span>: &lt;span class="s2">&amp;#34;https://10.100.100.3/&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 9&lt;/span>&lt;span class="cl"> &lt;span class="s2">&amp;#34;vcsa&amp;#34;&lt;/span>: &lt;span class="s2">&amp;#34;https://10.100.100.2/&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">10&lt;/span>&lt;span class="cl">&lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>And credentials (&lt;a href="https://docs.microsoft.com/en-us/rest/api/avs/private-clouds/list-admin-credentials">Doc.&lt;/a>):&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="ln">1&lt;/span>&lt;span class="cl">az rest -m post -u &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">SDDC_BASE_URI&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">/listAdminCredentials?&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">API_VERSION&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">2&lt;/span>&lt;span class="cl">&lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">3&lt;/span>&lt;span class="cl"> &lt;span class="s2">&amp;#34;nsxtPassword&amp;#34;&lt;/span>: &lt;span class="s2">&amp;#34;***************&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">4&lt;/span>&lt;span class="cl"> &lt;span class="s2">&amp;#34;nsxtUsername&amp;#34;&lt;/span>: &lt;span class="s2">&amp;#34;admin&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">5&lt;/span>&lt;span class="cl"> &lt;span class="s2">&amp;#34;vcenterPassword&amp;#34;&lt;/span>: &lt;span class="s2">&amp;#34;***************&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">6&lt;/span>&lt;span class="cl"> &lt;span class="s2">&amp;#34;vcenterUsername&amp;#34;&lt;/span>: &lt;span class="s2">&amp;#34;cloudadmin@vsphere.local&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">7&lt;/span>&lt;span class="cl">&lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;blockquote>
&lt;p>Please note that you must use the &lt;code>post&lt;/code> HTTP method to get credentials.&lt;/p>
&lt;/blockquote>
&lt;p>With this information, you can now connect to your AVS instance.&lt;/p>
&lt;h2 id="avs-network-management">AVS network management&lt;/h2>
&lt;p>Some parts of an AVS workload management can be made through the Azure API and portal (in replacement or addition to the VMware products API or UI).&lt;/p>
&lt;h3 id="nsx-t-tier1-gateway">NSX-T Tier1 gateway&lt;/h3>
&lt;p>When dealing with NSX-T based networks, the Tier1 gateway (T1 GW) is an important element to consider.&lt;/p>
&lt;p>In a vast majority of scenarios (including the AVS deployment model), the T1 GW is considered the first router component, accessible from a workload to communicate with network items out of its subnet.&lt;/p>
&lt;p>By default, a first T1 GW is deployed with AVS and you can retrieve details about it by using (&lt;a href="https://docs.microsoft.com/en-us/rest/api/avs/workload-networks/get-gateway">Doc.&lt;/a>):&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="ln">1&lt;/span>&lt;span class="cl">az rest -m get -u &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">SDDC_BASE_URI&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">/workloadNetworks/default/gateways?&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">API_VERSION&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;blockquote>
&lt;p>Note: Only a &lt;code>get&lt;/code> method is available as you cannot Create, Update or Delete T1 gateways through the Azure API/UI: actions on T1 GW are only available from NSX-T itself (including creating new GWs).&lt;/p>
&lt;/blockquote>
&lt;h3 id="dhcp-service">DHCP service&lt;/h3>
&lt;p>It is possible to rely on the T1 GW to provide DHCP leases within network segment. The DHCP service can run as a &lt;em>server&lt;/em> or a &lt;em>relay&lt;/em> from another server.&lt;/p>
&lt;p>The simpliest role to configure is the &lt;em>server&lt;/em> one:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="ln"> 1&lt;/span>&lt;span class="cl">&lt;span class="c1"># Prepare data for the request&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 2&lt;/span>&lt;span class="cl">&lt;span class="nv">server_name&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;DHCPServer&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 3&lt;/span>&lt;span class="cl">&lt;span class="nv">body&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="k">$(&lt;/span>cat &lt;span class="s">&amp;lt;&amp;lt;EOF
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 4&lt;/span>&lt;span class="cl">&lt;span class="s">{
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 5&lt;/span>&lt;span class="cl">&lt;span class="s"> &amp;#34;properties&amp;#34;: {
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 6&lt;/span>&lt;span class="cl">&lt;span class="s"> &amp;#34;displayName&amp;#34;: &amp;#34;${DHCPServer}&amp;#34;,
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 7&lt;/span>&lt;span class="cl">&lt;span class="s"> &amp;#34;revision&amp;#34;: 0,
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 8&lt;/span>&lt;span class="cl">&lt;span class="s"> &amp;#34;dhcpType&amp;#34;: &amp;#34;SERVER&amp;#34;,
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 9&lt;/span>&lt;span class="cl">&lt;span class="s"> &amp;#34;serverAddress&amp;#34;: &amp;#34;10.100.104.1/24&amp;#34;,
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">10&lt;/span>&lt;span class="cl">&lt;span class="s"> &amp;#34;leaseTime&amp;#34;:null
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">11&lt;/span>&lt;span class="cl">&lt;span class="s"> }
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">12&lt;/span>&lt;span class="cl">&lt;span class="s">}
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">13&lt;/span>&lt;span class="cl">&lt;span class="s">EOF&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">14&lt;/span>&lt;span class="cl">&lt;span class="k">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">15&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">16&lt;/span>&lt;span class="cl">&lt;span class="c1"># Create the DHCP service&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">17&lt;/span>&lt;span class="cl">az rest -m put -u &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">SDDC_BASE_URI&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">/workloadNetworks/default/dhcpConfigurations/&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">DHCPServer&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">?&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">API_VERSION&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span> --body &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">body&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="nsx-t-segments">NSX-T Segments&lt;/h3>
&lt;p>For example, you can Create, Read, Update or Delete (&lt;a href="https://en.wikipedia.org/wiki/Create,_read,_update_and_delete">C.R.U.D.&lt;/a>) &lt;strong>NSX-T segments&lt;/strong> with the Azure API:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="ln"> 1&lt;/span>&lt;span class="cl">&lt;span class="c1"># Prepare data for the request&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 2&lt;/span>&lt;span class="cl">&lt;span class="nv">segment_name&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;VM-tests-109&amp;#34;&lt;/span> &lt;span class="c1"># Name of segment to create&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 3&lt;/span>&lt;span class="cl">&lt;span class="nv">t1_gw_name&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;TNTXX-T1&amp;#34;&lt;/span> &lt;span class="c1"># T1 GW name&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 4&lt;/span>&lt;span class="cl">&lt;span class="nv">body&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="k">$(&lt;/span>cat &lt;span class="s">&amp;lt;&amp;lt;EOF
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 5&lt;/span>&lt;span class="cl">&lt;span class="s">{
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 6&lt;/span>&lt;span class="cl">&lt;span class="s"> &amp;#34;properties&amp;#34;: {
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 7&lt;/span>&lt;span class="cl">&lt;span class="s"> &amp;#34;displayName&amp;#34;: &amp;#34;${segment_name}&amp;#34;,
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 8&lt;/span>&lt;span class="cl">&lt;span class="s"> &amp;#34;connectedGateway&amp;#34;: &amp;#34;${t1_gw_name}&amp;#34;,
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 9&lt;/span>&lt;span class="cl">&lt;span class="s"> &amp;#34;subnet&amp;#34;: {
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">10&lt;/span>&lt;span class="cl">&lt;span class="s"> &amp;#34;dhcpRanges&amp;#34;: [
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">11&lt;/span>&lt;span class="cl">&lt;span class="s"> &amp;#34;10.100.109.10-10.100.109.100&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">12&lt;/span>&lt;span class="cl">&lt;span class="s"> ],
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">13&lt;/span>&lt;span class="cl">&lt;span class="s"> &amp;#34;gatewayAddress&amp;#34;: &amp;#34;10.100.109.1/24&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">14&lt;/span>&lt;span class="cl">&lt;span class="s"> },
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">15&lt;/span>&lt;span class="cl">&lt;span class="s"> &amp;#34;revision&amp;#34;: 0
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">16&lt;/span>&lt;span class="cl">&lt;span class="s"> }
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">17&lt;/span>&lt;span class="cl">&lt;span class="s">}
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">18&lt;/span>&lt;span class="cl">&lt;span class="s">EOF&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">19&lt;/span>&lt;span class="cl">&lt;span class="k">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">20&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">21&lt;/span>&lt;span class="cl">&lt;span class="c1"># Create segment&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">22&lt;/span>&lt;span class="cl">az rest -m put -u &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">SDDC_BASE_URI&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">/workloadNetworks/default/segments/&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">segment_name&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">?&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">API_VERSION&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span> --body &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">body&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">23&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">24&lt;/span>&lt;span class="cl">&lt;span class="c1"># Get the new segment&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">25&lt;/span>&lt;span class="cl">az rest -m get -u &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">SDDC_BASE_URI&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">/workloadNetworks/default/segments/&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">segment_name&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">?&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">API_VERSION&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">26&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">27&lt;/span>&lt;span class="cl">&lt;span class="c1"># Output&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">28&lt;/span>&lt;span class="cl">&lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">29&lt;/span>&lt;span class="cl"> &lt;span class="s2">&amp;#34;id&amp;#34;&lt;/span>: &lt;span class="s2">&amp;#34;/subscriptions/********-****-****-****-************/resourceGroups/resourceGroupName/providers/Microsoft.AVS/privateClouds/AVS-Tests/workloadNetworks/default/segments/VM-tests-109&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">30&lt;/span>&lt;span class="cl"> &lt;span class="s2">&amp;#34;name&amp;#34;&lt;/span>: &lt;span class="s2">&amp;#34;VM-tests-109&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">31&lt;/span>&lt;span class="cl"> &lt;span class="s2">&amp;#34;properties&amp;#34;&lt;/span>: &lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">32&lt;/span>&lt;span class="cl"> &lt;span class="s2">&amp;#34;connectedGateway&amp;#34;&lt;/span>: &lt;span class="s2">&amp;#34;TNTXX-T1&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">33&lt;/span>&lt;span class="cl"> &lt;span class="s2">&amp;#34;displayName&amp;#34;&lt;/span>: &lt;span class="s2">&amp;#34;VM-tests-109&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">34&lt;/span>&lt;span class="cl"> &lt;span class="s2">&amp;#34;provisioningState&amp;#34;&lt;/span>: &lt;span class="s2">&amp;#34;Fulfilled&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">35&lt;/span>&lt;span class="cl"> &lt;span class="s2">&amp;#34;revision&amp;#34;&lt;/span>: 0,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">36&lt;/span>&lt;span class="cl"> &lt;span class="s2">&amp;#34;status&amp;#34;&lt;/span>: &lt;span class="s2">&amp;#34;IN_PROGRESS&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">37&lt;/span>&lt;span class="cl"> &lt;span class="s2">&amp;#34;subnet&amp;#34;&lt;/span>: &lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">38&lt;/span>&lt;span class="cl"> &lt;span class="s2">&amp;#34;dhcpRanges&amp;#34;&lt;/span>: &lt;span class="o">[&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">39&lt;/span>&lt;span class="cl"> &lt;span class="s2">&amp;#34;10.100.109.10-10.100.109.100&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">40&lt;/span>&lt;span class="cl"> &lt;span class="o">]&lt;/span>,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">41&lt;/span>&lt;span class="cl"> &lt;span class="s2">&amp;#34;gatewayAddress&amp;#34;&lt;/span>: &lt;span class="s2">&amp;#34;10.100.109.1/24&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">42&lt;/span>&lt;span class="cl"> &lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">43&lt;/span>&lt;span class="cl"> &lt;span class="o">}&lt;/span>,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">44&lt;/span>&lt;span class="cl"> &lt;span class="s2">&amp;#34;resourceGroup&amp;#34;&lt;/span>: &lt;span class="s2">&amp;#34;resourceGroupName&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">45&lt;/span>&lt;span class="cl"> &lt;span class="s2">&amp;#34;type&amp;#34;&lt;/span>: &lt;span class="s2">&amp;#34;Microsoft.AVS/privateClouds/workloadNetworks/segments&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">46&lt;/span>&lt;span class="cl">&lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="avs-interconnectivity-management">AVS interconnectivity management&lt;/h2>
&lt;p>When your AVS instance is deployed, you will certainly need to connect it with external components like other Azure Resources, jump servers, on-premises resources etc.&lt;/p>
&lt;p>I will not cover &lt;a href="https://docs.microsoft.com/en-us/azure/azure-vmware/concepts-networking">all the available AVS interconnectivity solutions&lt;/a> in this post but here is a list of supported ones:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://docs.microsoft.com/en-us/azure/virtual-network/virtual-network-manage-subnet">Azure vNet connect&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://docs.microsoft.com/en-us/azure/expressroute/expressroute-introduction">ExpressRoute&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://docs.microsoft.com/en-us/azure/expressroute/expressroute-global-reach">ExpressRoute Global Reach&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>In this post, we will see how-to setup an &lt;em>ExpressRoute&lt;/em> circuit.&lt;/p>
&lt;h3 id="expressroute">ExpressRoute&lt;/h3>
&lt;p>The first information to collect is the &lt;em>ExpressRoute ID&lt;/em> or &lt;em>Circuit ID&lt;/em>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="ln">1&lt;/span>&lt;span class="cl">az rest -m get -u &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">SDDC_BASE_URI&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">?&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">API_VERSION&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span> &lt;span class="p">|&lt;/span> jq &lt;span class="s2">&amp;#34;.properties.circuit&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">2&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">3&lt;/span>&lt;span class="cl">&lt;span class="c1"># Output&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">4&lt;/span>&lt;span class="cl">&lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">5&lt;/span>&lt;span class="cl"> &lt;span class="s2">&amp;#34;expressRouteID&amp;#34;&lt;/span>: &lt;span class="s2">&amp;#34;/subscriptions/********-****-****-****-************/resourceGroups/resourceGroupName/providers/Microsoft.Network/expressRouteCircuits/tntxx-cust-p02-westeurope-er&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">6&lt;/span>&lt;span class="cl"> &lt;span class="s2">&amp;#34;expressRoutePrivatePeeringID&amp;#34;&lt;/span>: &lt;span class="s2">&amp;#34;/subscriptions/********-****-****-****-************/resourceGroups/resourceGroupName/providers/Microsoft.Network/expressRouteCircuits/tntxx-cust-p02-westeurope-er/peerings/AzurePrivatePeering&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">7&lt;/span>&lt;span class="cl"> &lt;span class="s2">&amp;#34;primarySubnet&amp;#34;&lt;/span>: &lt;span class="s2">&amp;#34;10.100.100.232/30&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">8&lt;/span>&lt;span class="cl"> &lt;span class="s2">&amp;#34;secondarySubnet&amp;#34;&lt;/span>: &lt;span class="s2">&amp;#34;10.100.100.236/30&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">9&lt;/span>&lt;span class="cl">&lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>We keep only the &lt;code>expressRouteID&lt;/code> information to create a new &lt;em>ExpressRoute&lt;/em> &lt;em>authorization key&lt;/em>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="ln"> 1&lt;/span>&lt;span class="cl">&lt;span class="nv">connection_name&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;expressroute-test&amp;#34;&lt;/span> &lt;span class="c1"># name the future authorization key&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 2&lt;/span>&lt;span class="cl">&lt;span class="nv">sddc_er_id&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="k">$(&lt;/span>az rest -m get -u &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">SDDC_BASE_URI&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">?&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">API_VERSION&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span> &lt;span class="p">|&lt;/span> jq &lt;span class="s2">&amp;#34;.properties.circuit.expressRouteID&amp;#34;&lt;/span>&lt;span class="k">)&lt;/span> &lt;span class="c1"># store the expressRouteID&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 3&lt;/span>&lt;span class="cl">&lt;span class="nv">body&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="k">$(&lt;/span>cat &lt;span class="s">&amp;lt;&amp;lt;EOF
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 4&lt;/span>&lt;span class="cl">&lt;span class="s">{
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 5&lt;/span>&lt;span class="cl">&lt;span class="s"> &amp;#34;properties&amp;#34;: {
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 6&lt;/span>&lt;span class="cl">&lt;span class="s"> &amp;#34;expressRouteId&amp;#34;: ${sddc_er_id}
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 7&lt;/span>&lt;span class="cl">&lt;span class="s"> }
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 8&lt;/span>&lt;span class="cl">&lt;span class="s">}
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 9&lt;/span>&lt;span class="cl">&lt;span class="s">EOF&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">10&lt;/span>&lt;span class="cl">&lt;span class="k">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">11&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">12&lt;/span>&lt;span class="cl">az rest -m put -u &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">SDDC_BASE_URI&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">/authorizations/&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">connection_name&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">?&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">API_VERSION&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span> --body &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">body&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">13&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">14&lt;/span>&lt;span class="cl">&lt;span class="c1"># Output&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">15&lt;/span>&lt;span class="cl">&lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">16&lt;/span>&lt;span class="cl"> &lt;span class="s2">&amp;#34;id&amp;#34;&lt;/span>: &lt;span class="s2">&amp;#34;/subscriptions/********-****-****-****-************/resourceGroups/resourceGroupName/providers/Microsoft.AVS/privateClouds/AVS-CSU-FR-LRI/authorizations/expressroute-test&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">17&lt;/span>&lt;span class="cl"> &lt;span class="s2">&amp;#34;name&amp;#34;&lt;/span>: &lt;span class="s2">&amp;#34;expressroute-test&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">18&lt;/span>&lt;span class="cl"> &lt;span class="s2">&amp;#34;properties&amp;#34;&lt;/span>: &lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">19&lt;/span>&lt;span class="cl"> &lt;span class="s2">&amp;#34;expressRouteAuthorizationId&amp;#34;&lt;/span>: &lt;span class="s2">&amp;#34;/subscriptions/********-****-****-****-************/resourceGroups/tntxx-cust-p02-westeurope/providers/Microsoft.Network/expressRouteCircuits/tntxx-cust-p02-westeurope-er/authorizations/avs_resource_expressroute-test&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">20&lt;/span>&lt;span class="cl"> &lt;span class="s2">&amp;#34;expressRouteAuthorizationKey&amp;#34;&lt;/span>: &lt;span class="s2">&amp;#34;d502f9cb-91a2-4069-a474-7363e723bccc&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">21&lt;/span>&lt;span class="cl"> &lt;span class="s2">&amp;#34;expressRouteId&amp;#34;&lt;/span>: &lt;span class="s2">&amp;#34;/subscriptions/********-****-****-****-************/resourceGroups/tntxx-cust-p02-westeurope/providers/Microsoft.Network/expressRouteCircuits/tntxx-cust-p02-westeurope-er&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">22&lt;/span>&lt;span class="cl"> &lt;span class="s2">&amp;#34;provisioningState&amp;#34;&lt;/span>: &lt;span class="s2">&amp;#34;Succeeded&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">23&lt;/span>&lt;span class="cl"> &lt;span class="o">}&lt;/span>,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">24&lt;/span>&lt;span class="cl"> &lt;span class="s2">&amp;#34;resourceGroup&amp;#34;&lt;/span>: &lt;span class="s2">&amp;#34;AVS-CSU-FR-LRI&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">25&lt;/span>&lt;span class="cl"> &lt;span class="s2">&amp;#34;type&amp;#34;&lt;/span>: &lt;span class="s2">&amp;#34;Microsoft.AVS/privateClouds/authorizations&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">26&lt;/span>&lt;span class="cl">&lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="https://vuptime.io/images/avs-api/expressroute-authorizations.png" alt="AVS ExpressRoute authorization from the Azure portal">&lt;/p>
&lt;p>This will provide you with an authorization key: &lt;code>expressRouteAuthorizationKey&lt;/code> to be used to create a new connection from an expressRoute compatible component, like a &lt;em>Virtual network gateway&lt;/em>:&lt;/p>
&lt;p>&lt;img src="https://vuptime.io/images/avs-api/expressroute-connection.png" alt="Create an ExpressRoute connection to your AVS">&lt;/p>
&lt;h2 id="conclusion">Conclusion&lt;/h2>
&lt;p>As you may understand from the &lt;a href="https://docs.microsoft.com/en-us/rest/api/avs/">AVS API reference&lt;/a> or the &lt;a href="https://github.com/lrivallain/avs-rest-api-postman-collection">AVS Postman collection&lt;/a>, this post is not a complete coverage of the AVS REST API capabilities but an example of what you can do with it and the &lt;code>az rest&lt;/code> CLI tool.&lt;/p>
&lt;p>To simplify the above commands, I did not mention any header like &lt;code>Accept&lt;/code> or &lt;code>Content-Type&lt;/code> as we used the default type of data when dealing with requests and answers: &lt;code>application/json&lt;/code>.&lt;/p>
&lt;p>Using API with &lt;code>az rest&lt;/code> is a very easy way to manage automation of an AVS deployed instance with an &lt;a href="https://en.wikipedia.org/wiki/Imperative_programming">imperative approach&lt;/a>. A &lt;a href="https://en.wikipedia.org/wiki/Declarative_programming">declarative approach&lt;/a> may be preferred to managed large AVS workloads with production and self-remediation requirements and I will try to cover it in a future (not-yet-planned) post.&lt;/p>
&lt;h3 id="credits">Credits&lt;/h3>
&lt;p>Title photo by &lt;a href="https://unsplash.com/@joshuaryanphotog">Joshua Reddekopp&lt;/a> on &lt;a href="https://unsplash.com/photos/GkFQEOubrCo">Unsplash&lt;/a>&lt;/p></description></item><item><title>Azure VMware Solutions REST API - part 1: Postman collection</title><link>https://vuptime.io/post/2022-02-06-azure-vmware-solution-rest-api-part1/</link><pubDate>Sun, 06 Feb 2022 00:00:00 +0000</pubDate><guid>https://vuptime.io/2022/01/06/azure-vmware-solution-rest-api-part1/</guid><description>
&lt;p>Working on Azure VMware Solution since a couple of months now, I found very usefull to have a prepared list of API calls on a notebook or quick-reference document.&lt;/p>
&lt;p>After a period of time, I did collect enought sample to consider doing a full &lt;a href="https://www.postman.com/">Postman&lt;/a> collection and by doing that, I was also considering to cover the complete &lt;a href="https://docs.microsoft.com/en-us/rest/api/avs/">Azure VMware REST API&lt;/a> (and not only the parts that I already used).&lt;/p>
&lt;h2 id="the-postman-collection">The Postman collection&lt;/h2>
&lt;p>I can find a complete Postman collection to use AVS REST API in the following GitHub repository: &lt;a href="https://github.com/lrivallain/avs-rest-api-postman-collection">Azure VMware Solution REST API Postman collection&lt;/a> &lt;code>avs-rest-api-postman-collection.json&lt;/code>.&lt;/p>
&lt;p>This repository also contains an &lt;em>environment example&lt;/em> you could use to populate your API calls: &lt;code>avs-rest-api-postman_environment.json&lt;/code>.&lt;/p>
&lt;p>With the AVS REST API you could easly the following parts of you AVS deployment:&lt;/p>
&lt;ul>
&lt;li>The SDDC itself
&lt;ul>
&lt;li>Credentials&lt;/li>
&lt;li>Endpoints&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>The &lt;em>Express Route&lt;/em> authorizations&lt;/li>
&lt;li>&lt;em>Global Reach&lt;/em> connections&lt;/li>
&lt;li>Clusters
&lt;ul>
&lt;li>Datastores&lt;/li>
&lt;li>Virtual machines grouping&lt;/li>
&lt;li>Placement policies&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Addons&lt;/li>
&lt;li>AVS scripts&lt;/li>
&lt;li>HCX&lt;/li>
&lt;li>Quota and Trial availability&lt;/li>
&lt;li>Workload networks:
&lt;ul>
&lt;li>DHCP&lt;/li>
&lt;li>DNS&lt;/li>
&lt;li>Segments&lt;/li>
&lt;li>Public IPs&lt;/li>
&lt;li>Port mirroring&lt;/li>
&lt;li>Gateways (NSX-T Tiers 1)&lt;/li>
&lt;li>Virtual Machine grouping&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Other AVS clouds links&lt;/li>
&lt;/ul>
&lt;blockquote>
&lt;p>This collection does not cover the VMware side of the API available when deploying an AVS cluster. If you need to use VMware products REST APIs, the documentation and endpoints are the same ones than with on-prem SDDC products. It is another benefit of using VMware managed-products instances: You do not change your habits and your existing automation tooling.&lt;/p>
&lt;/blockquote>
&lt;h3 id="collection-import">Collection import&lt;/h3>
&lt;p>From Postman, web or desktop client, you could import the collection by refering to the following link: &lt;a href="https://raw.githubusercontent.com/lrivallain/avs-rest-api-postman-collection/master/avs-rest-api-postman-collection.json">https://raw.githubusercontent.com/lrivallain/avs-rest-api-postman-collection/master/avs-rest-api-postman-collection.json&lt;/a>.&lt;/p>
&lt;p>You may also need to import the &lt;em>environment&lt;/em> sample to populate your own data: &lt;a href="https://github.com/lrivallain/avs-rest-api-postman-collection/raw/master/avs-rest-api-postman_environment.json">https://github.com/lrivallain/avs-rest-api-postman-collection/raw/master/avs-rest-api-postman_environment.json&lt;/a>.&lt;/p>
&lt;h3 id="login">Login&lt;/h3>
&lt;p>In order to use the collection, you will have to enter some information like:&lt;/p>
&lt;ul>
&lt;li>subscription ID: &lt;code>subscriptionId&lt;/code>&lt;/li>
&lt;li>resource-group name: &lt;code>resourceGroupName&lt;/code>&lt;/li>
&lt;li>authorization token: &lt;code>accessToken&lt;/code>&lt;/li>
&lt;/ul>
&lt;p>The easiest way to get an authentication token is by using &lt;a href="https://docs.microsoft.com/en-us/cli/azure/">Azure Command-Line Interface&lt;/a>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="ln">1&lt;/span>&lt;span class="cl">az account get-access-token --subscription 01010101-0101-0101-0101-010101010101
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>You can pick the &lt;code>accessToken&lt;/code> value returned or use &lt;code>jq&lt;/code> to only get this value:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="ln">1&lt;/span>&lt;span class="cl">az account get-access-token --subscription 01010101-0101-0101-0101-010101010101 &lt;span class="p">|&lt;/span> jq &lt;span class="s2">&amp;#34;.accessToken&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Eventually, use the value in the &lt;code>accessToken&lt;/code> section of your environment.&lt;/p>
&lt;blockquote>
&lt;p>The token generated with &lt;code>get-access-token&lt;/code> is valid for only one hour. For other token generation methods you can refer to the &lt;a href="https://docs.microsoft.com/en-us/rest/api/azure/#register-your-client-application-with-azure-ad">Azure documentation&lt;/a>.&lt;/p>
&lt;/blockquote>
&lt;h4 id="setup-accesstoken-for-all-api-calls">Setup &lt;code>accessToken&lt;/code> for all API calls&lt;/h4>
&lt;p>Sadly in the export/import process of Postman collection, a variable used for authentication is lost and needs to be set manually:&lt;/p>
&lt;p>&lt;img src="https://vuptime.io/images/avs-api/authentication-configuration.png" alt="Set the token value to a variable reference">&lt;/p>
&lt;p>&lt;strong>Procedure&lt;/strong>:&lt;/p>
&lt;ol>
&lt;li>Click on the collection name&lt;/li>
&lt;li>On the right pane, select the &lt;em>current token/access token&lt;/em> field&lt;/li>
&lt;li>Enter: &lt;code>{{accessToken}}&lt;/code> to reference your token variable&lt;/li>
&lt;li>Save and quit this tab&lt;/li>
&lt;/ol>
&lt;blockquote>
&lt;p>This has to be done only once when you import the collection. When you will generate a new access-token, this variable will remain and map to the updated token value.&lt;/p>
&lt;/blockquote>
&lt;h3 id="testing">Testing&lt;/h3>
&lt;p>You can now test the collection by listing the AVS deployments in your subscription:&lt;/p>
&lt;p>&lt;img src="https://vuptime.io/images/avs-api/list-avs-sddc.png" alt="List AVS SDDC">&lt;/p>
&lt;h2 id="conclusion">Conclusion&lt;/h2>
&lt;p>Even if this collection covers the 100% of the current AVS REST API (version 2021-12-01), the official reference documentation remains the one from the Azure docs website: &lt;a href="https://docs.microsoft.com/en-us/rest/api/avs/">Azure VMware REST API&lt;/a> which contains &lt;strong>much more documentation&lt;/strong> to explain the content of each request and response. I strongly encourage everyone to have a look to this documentation before using the Postman collection.&lt;/p>
&lt;p>In the next post, we will review some examples of the AVS REST API by using a very useful tool: &lt;code>az rest&lt;/code>.&lt;/p>
&lt;h3 id="credits">Credits&lt;/h3>
&lt;p>Title photo by &lt;a href="https://unsplash.com/@rodlong">Rod Long&lt;/a> on &lt;a href="https://unsplash.com/photos/vpOeXr5wmR4">Unsplash&lt;/a>&lt;/p></description></item><item><title>VMware Event Broker on Kubernetes with Knative functions - part 2</title><link>https://vuptime.io/post/2021-05-06-vmware-event-broker-on-k8s-with-knative-part2/</link><pubDate>Thu, 06 May 2021 00:00:00 +0000</pubDate><guid>https://vuptime.io/2021/05/06/vmware-event-broker-on-k8s-with-knative-part2/</guid><description>
&lt;p>This post is the second part of a small series about &lt;em>VMware Event Broker on Kubernetes with Knative functions&lt;/em>.&lt;/p>
&lt;blockquote>
&lt;p>If you plan to apply the following procedure, we assume that the content mentioned in the &lt;a href="https://vuptime.io/2021/05/05/vmware-event-broker-on-k8s-with-knative-part1">&lt;strong>Part 1&lt;/strong>&lt;/a> is already deployed in your target setup.&lt;/p>
&lt;/blockquote>
&lt;h1 id="deploy-vmware-event-broker-with-knative-support">Deploy VMware Event Broker with knative support&lt;/h1>
&lt;blockquote>
&lt;p>&lt;strong>Disclaimer&lt;/strong>: This section of the post was made with the help of &lt;a href="https://github.com/embano1">@embano1&lt;/a> who provided a knative-ready helm chart for vcenter-event-broker deployment (&lt;a href="https://github.com/vmware-samples/vcenter-event-broker-appliance/pull/392">PR:392&lt;/a>). He also provided an example of the &lt;code>override.yaml&lt;/code> file we will use below.&lt;/p>
&lt;/blockquote>
&lt;h2 id="create-a-namespace">Create a namespace&lt;/h2>
&lt;p>The following commands will create a namespace &lt;code>vmware-fn&lt;/code> to host and run automation functions.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="ln"> 1&lt;/span>&lt;span class="cl">cat &lt;span class="s">&amp;lt;&amp;lt; EOF &amp;gt; vmware-fn-ns.yaml
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 2&lt;/span>&lt;span class="cl">&lt;span class="s">---
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 3&lt;/span>&lt;span class="cl">&lt;span class="s">apiVersion: v1
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 4&lt;/span>&lt;span class="cl">&lt;span class="s">kind: Namespace
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 5&lt;/span>&lt;span class="cl">&lt;span class="s">metadata:
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 6&lt;/span>&lt;span class="cl">&lt;span class="s"> name: vmware-fn
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 7&lt;/span>&lt;span class="cl">&lt;span class="s">EOF&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 8&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 9&lt;/span>&lt;span class="cl">kubectl apply -f vmware-fn-ns.yaml
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">10&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">11&lt;/span>&lt;span class="cl">kubectl get ns vmware-fn
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">12&lt;/span>&lt;span class="cl">&lt;span class="c1"># Output&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">13&lt;/span>&lt;span class="cl">NAME STATUS AGE
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">14&lt;/span>&lt;span class="cl">vmware-fn Active 10s
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;blockquote>
&lt;p>Of course: you can customize this target namespace and even re-use an existing one.&lt;/p>
&lt;/blockquote>
&lt;h2 id="create-a-broker">Create a Broker&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="ln"> 1&lt;/span>&lt;span class="cl">cat &lt;span class="s">&amp;lt;&amp;lt; EOF &amp;gt; mt-broker.yaml
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 2&lt;/span>&lt;span class="cl">&lt;span class="s">---
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 3&lt;/span>&lt;span class="cl">&lt;span class="s">apiVersion: eventing.knative.dev/v1
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 4&lt;/span>&lt;span class="cl">&lt;span class="s">kind: Broker
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 5&lt;/span>&lt;span class="cl">&lt;span class="s">metadata:
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 6&lt;/span>&lt;span class="cl">&lt;span class="s"> name: vmware-event-broker
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 7&lt;/span>&lt;span class="cl">&lt;span class="s"> namespace: vmware-fn
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 8&lt;/span>&lt;span class="cl">&lt;span class="s">EOF&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 9&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">10&lt;/span>&lt;span class="cl">kubectl apply -f mt-broker.yaml
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">11&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">12&lt;/span>&lt;span class="cl">kubectl get broker -n vmware-fn
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">13&lt;/span>&lt;span class="cl">&lt;span class="c1"># Output (I remove a loooong URL field)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">14&lt;/span>&lt;span class="cl">NAME AGE READY
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">15&lt;/span>&lt;span class="cl">vmware-event-broker 23s True
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="prepare-event-router-configuration">Prepare event-router configuration&lt;/h3>
&lt;p>Create an &lt;code>override.yaml&lt;/code> with your settings:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="ln"> 1&lt;/span>&lt;span class="cl">cat &lt;span class="s">&amp;lt;&amp;lt; EOF &amp;gt; override.yaml
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 2&lt;/span>&lt;span class="cl">&lt;span class="s">eventrouter:
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 3&lt;/span>&lt;span class="cl">&lt;span class="s"> config:
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 4&lt;/span>&lt;span class="cl">&lt;span class="s"> logLevel: debug
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 5&lt;/span>&lt;span class="cl">&lt;span class="s"> vcenter:
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 6&lt;/span>&lt;span class="cl">&lt;span class="s"> address: https://vcsa.local
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 7&lt;/span>&lt;span class="cl">&lt;span class="s"> username: test@vsphere.local
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 8&lt;/span>&lt;span class="cl">&lt;span class="s"> password: VMware1!
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 9&lt;/span>&lt;span class="cl">&lt;span class="s"> insecure: true # ignore TLS certs if required
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">10&lt;/span>&lt;span class="cl">&lt;span class="s"> eventProcessor: knative
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">11&lt;/span>&lt;span class="cl">&lt;span class="s"> knative:
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">12&lt;/span>&lt;span class="cl">&lt;span class="s"> destination:
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">13&lt;/span>&lt;span class="cl">&lt;span class="s"> ref:
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">14&lt;/span>&lt;span class="cl">&lt;span class="s"> apiVersion: eventing.knative.dev/v1
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">15&lt;/span>&lt;span class="cl">&lt;span class="s"> kind: Broker # we use a Knative broker to send events to
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">16&lt;/span>&lt;span class="cl">&lt;span class="s"> name: vmware-event-broker # name of the broker
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">17&lt;/span>&lt;span class="cl">&lt;span class="s"> namespace: vmware-fn # namespace where the broker is deployed
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">18&lt;/span>&lt;span class="cl">&lt;span class="s">EOF&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;blockquote>
&lt;p>Ensure to specify broker name and namespace according to the one configured in the previous section.&lt;/p>
&lt;/blockquote>
&lt;h3 id="helm-deployment">Helm deployment&lt;/h3>
&lt;p>If not already done, we will register the &lt;em>veba&lt;/em> helm-charts registry and get metadata locally:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="ln">1&lt;/span>&lt;span class="cl">&lt;span class="c1"># register chart repo and update chart information&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">2&lt;/span>&lt;span class="cl">helm repo add vmware-veba https://projects.registry.vmware.com/chartrepo/veba
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">3&lt;/span>&lt;span class="cl">helm repo update
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>At this time, the support of knative with &lt;code>helm&lt;/code> &lt;em>vmware event router&lt;/em> deployment method is only supported in chart version &amp;gt;= v0.6.2. Ensure that this version is available:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="ln">1&lt;/span>&lt;span class="cl">helm search repo event-router --versions &lt;span class="p">|&lt;/span> grep v0.6.2
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">2&lt;/span>&lt;span class="cl">&lt;span class="c1"># Output&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">3&lt;/span>&lt;span class="cl">vmware-veba/event-router v0.6.2 v0.6.0 The VMware Event Router is used to connect to v...
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Lets deploy it.&lt;/p>
&lt;blockquote>
&lt;p>Here we create a specific namespace &lt;code>vmware&lt;/code> for this purpose but you can reuse &lt;code>vmware-fn&lt;/code> or any other one.&lt;/p>
&lt;/blockquote>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="ln">1&lt;/span>&lt;span class="cl">helm install -n vmware --create-namespace veba-knative vmware-veba/event-router -f override.yaml --wait --version v0.6.2
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">2&lt;/span>&lt;span class="cl">&lt;span class="c1"># Output&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">3&lt;/span>&lt;span class="cl">NAME: veba-knative
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">4&lt;/span>&lt;span class="cl">LAST DEPLOYED: Wed May &lt;span class="m">5&lt;/span> 12:55:39 &lt;span class="m">2021&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">5&lt;/span>&lt;span class="cl">NAMESPACE: vmware
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">6&lt;/span>&lt;span class="cl">STATUS: deployed
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">7&lt;/span>&lt;span class="cl">REVISION: &lt;span class="m">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">8&lt;/span>&lt;span class="cl">TEST SUITE: None
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>We can now check that the deployment status:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="ln">1&lt;/span>&lt;span class="cl">helm list --namespace vmware
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">2&lt;/span>&lt;span class="cl">&lt;span class="c1"># Output&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">3&lt;/span>&lt;span class="cl">NAME NAMESPACE REVISION STATUS CHART APP VERSION
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">4&lt;/span>&lt;span class="cl">veba-knative vmware &lt;span class="m">1&lt;/span> deployed event-router-v0.6.2 v0.6.0
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">5&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">6&lt;/span>&lt;span class="cl">kubectl get pod -n vmware
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">7&lt;/span>&lt;span class="cl">&lt;span class="c1"># Output&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">8&lt;/span>&lt;span class="cl">NAME READY STATUS RESTARTS AGE
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">9&lt;/span>&lt;span class="cl">router-cdc874b59-vpckd 1/1 Running &lt;span class="m">0&lt;/span> 36s
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="usage">Usage&lt;/h1>
&lt;p>Now its time to perform some tasks based on event routing setup.&lt;/p>
&lt;h2 id="deploy-a-sample-echo-function">Deploy a sample &lt;em>echo&lt;/em> function&lt;/h2>
&lt;p>The first (and very useful!) thing we can do, is to &lt;em>echo&lt;/em> cloud events occurring in the target vCenter server.&lt;/p>
&lt;p>VEBA team provide multiple &lt;em>echo&lt;/em> samples (python or powershell based). Here we will use the python-based one provided by &lt;a href="https://github.com/embano1/kn-echo">@embano1/kn-echo&lt;/a>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="ln"> 1&lt;/span>&lt;span class="cl">cat &lt;span class="s">&amp;lt;&amp;lt; EOF &amp;gt; kn-py-echo.yaml
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 2&lt;/span>&lt;span class="cl">&lt;span class="s">---
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 3&lt;/span>&lt;span class="cl">&lt;span class="s">apiVersion: serving.knative.dev/v1
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 4&lt;/span>&lt;span class="cl">&lt;span class="s">kind: Service
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 5&lt;/span>&lt;span class="cl">&lt;span class="s">metadata:
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 6&lt;/span>&lt;span class="cl">&lt;span class="s"> name: kn-py-echo-svc
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 7&lt;/span>&lt;span class="cl">&lt;span class="s">spec:
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 8&lt;/span>&lt;span class="cl">&lt;span class="s"> template:
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 9&lt;/span>&lt;span class="cl">&lt;span class="s"> metadata:
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">10&lt;/span>&lt;span class="cl">&lt;span class="s"> annotations:
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">11&lt;/span>&lt;span class="cl">&lt;span class="s"> autoscaling.knative.dev/maxScale: &amp;#34;1&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">12&lt;/span>&lt;span class="cl">&lt;span class="s"> autoscaling.knative.dev/minScale: &amp;#34;0&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">13&lt;/span>&lt;span class="cl">&lt;span class="s"> spec:
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">14&lt;/span>&lt;span class="cl">&lt;span class="s"> containers:
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">15&lt;/span>&lt;span class="cl">&lt;span class="s"> - image: embano1/kn-echo
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">16&lt;/span>&lt;span class="cl">&lt;span class="s">---
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">17&lt;/span>&lt;span class="cl">&lt;span class="s">apiVersion: eventing.knative.dev/v1
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">18&lt;/span>&lt;span class="cl">&lt;span class="s">kind: Trigger
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">19&lt;/span>&lt;span class="cl">&lt;span class="s">metadata:
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">20&lt;/span>&lt;span class="cl">&lt;span class="s"> name: kn-py-echo-trigger
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">21&lt;/span>&lt;span class="cl">&lt;span class="s">spec:
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">22&lt;/span>&lt;span class="cl">&lt;span class="s"> broker: vmware-event-broker
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">23&lt;/span>&lt;span class="cl">&lt;span class="s"> subscriber:
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">24&lt;/span>&lt;span class="cl">&lt;span class="s"> ref:
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">25&lt;/span>&lt;span class="cl">&lt;span class="s"> apiVersion: serving.knative.dev/v1
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">26&lt;/span>&lt;span class="cl">&lt;span class="s"> kind: Service
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">27&lt;/span>&lt;span class="cl">&lt;span class="s"> name: kn-py-echo-svc
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">28&lt;/span>&lt;span class="cl">&lt;span class="s">EOF&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">29&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">30&lt;/span>&lt;span class="cl">kubectl apply -n vmware-fn -f kn-py-echo.yaml
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">31&lt;/span>&lt;span class="cl">&lt;span class="c1"># Output&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">32&lt;/span>&lt;span class="cl">service.serving.knative.dev/kn-py-echo-svc created
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">33&lt;/span>&lt;span class="cl">trigger.eventing.knative.dev/kn-py-echo-trigger created
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>We can check what was created:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="ln"> 1&lt;/span>&lt;span class="cl">kn service list -n vmware-fn
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 2&lt;/span>&lt;span class="cl">&lt;span class="c1"># Output&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 3&lt;/span>&lt;span class="cl">NAME URL LATEST AGE CONDITIONS READY REASON
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 4&lt;/span>&lt;span class="cl">kn-py-echo-svc http://kn-py-echo-svc.vmware-fn.example.com kn-py-echo-svc-00001 3m34s &lt;span class="m">3&lt;/span> OK / &lt;span class="m">3&lt;/span> True
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 5&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 6&lt;/span>&lt;span class="cl">kn trigger list -n vmware-fn
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 7&lt;/span>&lt;span class="cl">&lt;span class="c1"># Output&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 8&lt;/span>&lt;span class="cl">NAME BROKER SINK AGE CONDITIONS READY REASON
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 9&lt;/span>&lt;span class="cl">kn-py-echo-trigger vmware-event-broker ksvc:kn-py-echo-svc 2m8s &lt;span class="m">5&lt;/span> OK / &lt;span class="m">5&lt;/span> True
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">10&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">11&lt;/span>&lt;span class="cl">kubectl get pod -n vmware-fn
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">12&lt;/span>&lt;span class="cl">&lt;span class="c1"># Output&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">13&lt;/span>&lt;span class="cl">NAME READY STATUS RESTARTS AGE
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">14&lt;/span>&lt;span class="cl">kn-py-echo-svc-00001-deployment-7d8fcf598-5g8f7 2/2 Running &lt;span class="m">0&lt;/span> 63s
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>As we specified &lt;code>autoscaling.knative.dev/minScale: &amp;quot;0&amp;quot;&lt;/code> in the service definition, the deployed pods may or may not be deployed at a specific time: if there is no event fired by vCenter for a period of time, Knative Serving will terminate the pod associated to the service, and recreate it when new event will arrive:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="ln">1&lt;/span>&lt;span class="cl">kubectl get pod -n vmware-fn
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">2&lt;/span>&lt;span class="cl">&lt;span class="c1"># Output&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">3&lt;/span>&lt;span class="cl">NAME READY STATUS RESTARTS AGE
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">4&lt;/span>&lt;span class="cl">No resources found in vmware-fn namespace.
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>If you want to look at incoming events, get the current running pod name and look at its logs:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="ln">1&lt;/span>&lt;span class="cl">kubectl logs -n vmware-fn kn-py-echo-svc-00001-deployment-7d8fcf598-ngtdd user-container -f
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="deploy-vm-creation-attr-function">Deploy &lt;em>vm-creation-attr&lt;/em> function&lt;/h2>
&lt;p>I also did a re-write of the &lt;a href="https://github.com/lrivallain/openfaas-fn/tree/master/vm-creation-attr-fn">&lt;em>vm-creation-attr&lt;/em> function&lt;/a> I did write for OpenFaaS process to be knative compliant.&lt;/p>
&lt;blockquote>
&lt;p>As a reminder, I did a(nother long) post a few month back &lt;a href="https://vuptime.io/2020/12/17/vmware-event-broker-0.5.0-on-k8s-first-steps/#first-function">about this function&lt;/a>. The main goal is to populate &lt;em>custom attributes&lt;/em> values for VM object based on the user who created the VM, the creation date and the last-poweredon date.&lt;/p>
&lt;/blockquote>
&lt;p>The knative function is hosted on GitHub: &lt;a href="https://github.com/lrivallain/kn-vm-creation-attr-fn">lrivallain/kn-vm-creation-attr-fn&lt;/a>. You can get the &lt;code>function.yaml&lt;/code> file to start the deployment:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="ln">1&lt;/span>&lt;span class="cl">curl -LO https://raw.githubusercontent.com/lrivallain/kn-vm-creation-attr-fn/main/function.yaml
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="configuration">Configuration&lt;/h3>
&lt;p>Edit the content of &lt;code>function.yaml&lt;/code> to configure the following settings:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="ln"> 1&lt;/span>&lt;span class="cl">&lt;span class="c1"># In `ConfigMap` section&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 2&lt;/span>&lt;span class="cl">VC_SERVER: vcsa.local
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 3&lt;/span>&lt;span class="cl">VC_USER: test@vsphere.local
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 4&lt;/span>&lt;span class="cl">VC_SSLVERIFY: True
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 5&lt;/span>&lt;span class="cl">VC_ATTR_OWNER: event-owner
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 6&lt;/span>&lt;span class="cl">VC_ATTR_CREATION_DATE: event-creation_date
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 7&lt;/span>&lt;span class="cl">VC_ATTR_LAST_POWEREDON: event-last_poweredon
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 8&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 9&lt;/span>&lt;span class="cl">&lt;span class="c1"># In `Secret` section&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">10&lt;/span>&lt;span class="cl">VC_PASSWORD: Vk13YXJlMSEK
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>The &lt;code>VC_PASSWORD&lt;/code> is base64 encoded: you can generate it by using a command like:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="ln">1&lt;/span>&lt;span class="cl">&lt;span class="nb">echo&lt;/span> -n &lt;span class="s2">&amp;#34;YourP@ssw0rd&amp;#34;&lt;/span> &lt;span class="p">|&lt;/span> base64
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>We assume that you use the previously mentioned &lt;code>vmware-event-broker&lt;/code> broker name, but you can change it by using:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="ln">1&lt;/span>&lt;span class="cl">sed -i s/vmware-event-broker/NAMEOFYOURBROKER/ &lt;span class="k">function&lt;/span>.yaml
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="deploy">Deploy&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="ln">1&lt;/span>&lt;span class="cl">kubectl appy -n vmware-fn -f &lt;span class="k">function&lt;/span>.yaml
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Then you can check the result with following commands:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="ln">1&lt;/span>&lt;span class="cl">kn service list -n vmware-fn
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">2&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">3&lt;/span>&lt;span class="cl">kn trigger list -n vmware-fn
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">4&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">5&lt;/span>&lt;span class="cl">kubectl get pod -n vmware-fn
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;blockquote>
&lt;p>You will notice that there is multiple &lt;code>kn-vm-creation-attr-fn-trigger-xxxx&lt;/code> triggers deployed. It is due to the filtering applied to incoming event, to only get the one matching some specific actions results.&lt;/p>
&lt;/blockquote>
&lt;h3 id="test">Test&lt;/h3>
&lt;p>By looking at pod logs, you can see the actions resulting from the incoming events:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="ln"> 1&lt;/span>&lt;span class="cl">172.17.0.1 - - [04/May/2021 14:08:00] &amp;#34;POST / HTTP/1.1&amp;#34; 204 -
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 2&lt;/span>&lt;span class="cl">2021-05-04 14:08:00,230 INFO werkzeug Thread-3 : 172.17.0.1 - - [04/May/2021 14:08:00] &amp;#34;POST / HTTP/1.1&amp;#34; 204 -
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 3&lt;/span>&lt;span class="cl">2021-05-04 14:09:18,462 DEBUG handler Thread-4 : &amp;#34;***cloud event*** {&amp;#34;attributes&amp;#34;: {&amp;#34;specversion&amp;#34;: &amp;#34;1.0&amp;#34;, &amp;#34;id&amp;#34;: &amp;#34;42516969-218a-406f-9ccc-db387befc4bf&amp;#34;,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 4&lt;/span>&lt;span class="cl">&amp;#34;source&amp;#34;: &amp;#34;https://vcsa.local/sdk&amp;#34;, &amp;#34;type&amp;#34;: &amp;#34;com.vmware.event.router/event&amp;#34;, &amp;#34;datacontenttype&amp;#34;: &amp;#34;application/json&amp;#34;, &amp;#34;subject&amp;#34;: &amp;#34;DrsVmPoweredOnEvent&amp;#34;, &amp;#34;time&amp;#34;: &amp;#34;2021-05-04T07:33:33.773581268Z&amp;#34;, &amp;#34;knativearrivaltime&amp;#34;: &amp;#34;2021-05-04T07:33:33.772937393Z&amp;#34;}, &amp;#34;data&amp;#34;: {&amp;#34;Key&amp;#34;: 992270, &amp;#34;ChainId&amp;#34;: 992267, &amp;#34;CreatedTime&amp;#34;: &amp;#34;2021-05-04T07:33:32.759Z&amp;#34;, &amp;#34;UserName&amp;#34;: &amp;#34;VSPHERE.LOCAL\\test-user&amp;#34;, &amp;#34;Datacenter&amp;#34;: {&amp;#34;Name&amp;#34;: &amp;#34;Datacenter&amp;#34;, &amp;#34;Datacenter&amp;#34;: {&amp;#34;Type&amp;#34;: &amp;#34;Datacenter&amp;#34;, &amp;#34;Value&amp;#34;: &amp;#34;datacenter-21&amp;#34;}}, &amp;#34;ComputeResource&amp;#34;: {&amp;#34;Name&amp;#34;: &amp;#34;Cluster01&amp;#34;, &amp;#34;ComputeResource&amp;#34;: {&amp;#34;Type&amp;#34;: &amp;#34;ClusterComputeResource&amp;#34;, &amp;#34;Value&amp;#34;: &amp;#34;domain-c84&amp;#34;}}, &amp;#34;Host&amp;#34;: {&amp;#34;Name&amp;#34;: &amp;#34;esxi1.local&amp;#34;, &amp;#34;Host&amp;#34;: {&amp;#34;Type&amp;#34;: &amp;#34;HostSystem&amp;#34;, &amp;#34;Value&amp;#34;: &amp;#34;host-34&amp;#34;}}, &amp;#34;Vm&amp;#34;: {&amp;#34;Name&amp;#34;: &amp;#34;TestVM&amp;#34;, &amp;#34;Vm&amp;#34;: {&amp;#34;Type&amp;#34;: &amp;#34;VirtualMachine&amp;#34;, &amp;#34;Value&amp;#34;: &amp;#34;vm-596&amp;#34;}}, &amp;#34;Ds&amp;#34;: null, &amp;#34;Net&amp;#34;: null, &amp;#34;Dvs&amp;#34;: null, &amp;#34;FullFormattedMessage&amp;#34;: &amp;#34;DRS powered On TestVM on esxi1.local in Datacenter&amp;#34;, &amp;#34;ChangeTag&amp;#34;: &amp;#34;&amp;#34;, &amp;#34;Template&amp;#34;: false}
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 5&lt;/span>&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 6&lt;/span>&lt;span class="cl">2021-05-04 14:09:18,464 DEBUG vcenter Thread-4 : Initializing vCenter connection...
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 7&lt;/span>&lt;span class="cl">2021-05-04 14:09:18,992 INFO vcenter Thread-4 : Connected to vCenter 10.6.29.7
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 8&lt;/span>&lt;span class="cl">2021-05-04 14:09:19,483 INFO handler Thread-4 : Apply attribute &amp;gt; event-last_poweredon
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 9&lt;/span>&lt;span class="cl">2021-05-04 14:09:19,774 DEBUG handler Thread-4 : End of event
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">10&lt;/span>&lt;span class="cl">172.17.0.1 - - [04/May/2021 14:09:19] &amp;#34;POST / HTTP/1.1&amp;#34; 204 -
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">11&lt;/span>&lt;span class="cl">2021-05-04 14:09:19,777 INFO werkzeug Thread-4 : 172.17.0.1 - - [04/May/2021 14:09:19] &amp;#34;POST / HTTP/1.1&amp;#34; 204 -
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="is-it-serverless">Is it serverless?&lt;/h2>
&lt;p>With a &lt;code>autoscaling.knative.dev/minScale: &amp;quot;0&amp;quot;&lt;/code> annotation setting (as provided by default in the above functions), have look at the pods list to see the result of an event:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="ln"> 1&lt;/span>&lt;span class="cl">k get pods --watch -n vmware-fn
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 2&lt;/span>&lt;span class="cl">&lt;span class="c1"># Output&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 3&lt;/span>&lt;span class="cl">kn-vm-creation-attr-fn-service-00002-deployment-848865fdd-xgvb9 0/2 Pending &lt;span class="m">0&lt;/span> 0s
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 4&lt;/span>&lt;span class="cl">kn-vm-creation-attr-fn-service-00002-deployment-848865fdd-xgvb9 0/2 ContainerCreating &lt;span class="m">0&lt;/span> 1s
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 5&lt;/span>&lt;span class="cl">kn-vm-creation-attr-fn-service-00002-deployment-848865fdd-xgvb9 1/2 Running &lt;span class="m">0&lt;/span> 5s
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 6&lt;/span>&lt;span class="cl">kn-vm-creation-attr-fn-service-00002-deployment-848865fdd-xgvb9 1/2 Running &lt;span class="m">0&lt;/span> 6s
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 7&lt;/span>&lt;span class="cl">kn-vm-creation-attr-fn-service-00002-deployment-848865fdd-xgvb9 2/2 Running &lt;span class="m">0&lt;/span> 7s
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 8&lt;/span>&lt;span class="cl">&lt;span class="c1"># And after about 60s without events:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 9&lt;/span>&lt;span class="cl">kn-vm-creation-attr-fn-service-00002-deployment-848865fdd-xgvb9 2/2 Terminating &lt;span class="m">0&lt;/span> 68s
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">10&lt;/span>&lt;span class="cl">kn-vm-creation-attr-fn-service-00002-deployment-848865fdd-xgvb9 1/2 Terminating &lt;span class="m">0&lt;/span> 71s
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">11&lt;/span>&lt;span class="cl">kn-vm-creation-attr-fn-service-00002-deployment-848865fdd-xgvb9 0/2 Terminating &lt;span class="m">0&lt;/span> 2m8s
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>As you can see, the function is acting as a serverless one: when needed, the appropriate number of pods is spawned, and when there is not incoming (and matching) event: no pods are kept on the cluster.&lt;/p>
&lt;p>You can easily change values of &lt;code>autoscaling.knative.dev/maxScale: &amp;quot;1&amp;quot;&lt;/code> and &lt;code>autoscaling.knative.dev/minScale: &amp;quot;0&amp;quot;&lt;/code> according to your needs: for example, with &lt;code>minScale: &amp;quot;1&amp;quot;&lt;/code>: at least one pod will always remain listening for events: This could improve the time to execute an action it there is no pod to spawn after an inactivity period.&lt;/p>
&lt;p>So, considering that the service provider is &lt;em>knative&lt;/em>, our functions are acting like serverless ones and the management component is in charge of scaling (up and down to 0), the components running our application code, according to the incoming requests: This enable all the benefits of serverless applications and of-course, its drawbacks.&lt;/p>
&lt;h2 id="credits">Credits&lt;/h2>
&lt;p>Title photo by &lt;a href="https://unsplash.com/@jstrippa">James Harrison&lt;/a> on &lt;a href="https://unsplash.com/photos/vpOeXr5wmR4">Unsplash&lt;/a>&lt;/p></description></item><item><title>VMware Event Broker on Kubernetes with Knative functions - part 1</title><link>https://vuptime.io/post/2021-05-05-vmware-event-broker-on-k8s-with-knative-part1/</link><pubDate>Wed, 05 May 2021 00:00:00 +0000</pubDate><guid>https://vuptime.io/2021/05/05/vmware-event-broker-on-k8s-with-knative-part1/</guid><description>
&lt;p>As mentioned in some previous posts (&lt;a href="https://vuptime.io/2020/11/02/vmware-event-broker-on-k8s-first-steps/">here&lt;/a> or &lt;a href="https://vuptime.io/2020/12/17/vmware-event-broker-0.5.0-on-k8s-first-steps/">here&lt;/a>), I do not deploy the instance-based packaging of the &lt;a href="https://vmweventbroker.io/">VMware Event Router&lt;/a>: aka VEBA. I prefer to reuse existing Kubernetes cluster(s) to host the &lt;code>vmware event router&lt;/code> and the associated functions.&lt;/p>
&lt;p>Currently, most of my automation work relies on &lt;a href="https://www.openfaas.com/">OpenFaaS®&lt;/a> functions, and &lt;a href="https://argoproj.github.io/">Argo workflows&lt;/a> for long running tasks (triggered by OpenFaaS).&lt;/p>
&lt;p>Since &lt;a href="https://github.com/vmware-samples/vcenter-event-broker-appliance/releases/tag/v0.5.0">v0.5.0 release&lt;/a>, the VMware Event Broker, supports a new processor: &lt;code>knative&lt;/code>.&lt;/p>
&lt;p>This &lt;strong>part 1&lt;/strong> post will cover the deployment of Knative components, in order to prepare the deployment of VMware Event Broker through &lt;code>helm&lt;/code> chart mentioned in &lt;a href="https://vuptime.io/2021/05/06/vmware-event-broker-on-k8s-with-knative-part2">&lt;strong>part2&lt;/strong>&lt;/a>.&lt;/p>
&lt;h1 id="about-knative">About Knative&lt;/h1>
&lt;p>&lt;a href="https://knative.dev">&lt;strong>Knative&lt;/strong>&lt;/a> is a Google-held Kubernetes-based platform to build, deploy, and manage modern serverless workloads. The project is made of three major components:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://knative.dev/docs/serving/">Knative Serving&lt;/a>: Easily manage stateless services on Kubernetes by reducing the developer effort required for auto-scaling, networking, and rollouts.&lt;/li>
&lt;li>&lt;a href="https://knative.dev/docs/eventing/">Knative Eventing&lt;/a>: Easily route events between on-cluster and off-cluster components by exposing event routing as configuration rather than embedded in code.&lt;/li>
&lt;/ul>
&lt;p>Some major &lt;em>serverless&lt;/em>* cloud services are now based or compatible with knative API like &lt;a href="https://www.openshift.com/learn/topics/serverless">Red Hat OpenShift Serverless&lt;/a> or &lt;a href="https://cloud.google.com/run">Google Cloud Run&lt;/a>.&lt;/p>
&lt;p>The &lt;strong>Knative Eventing&lt;/strong> provide an abstraction of the messaging layer supporting multiple and pluggable event sources. Multiple delivery modes are also supported (fanout, direct) and enable a variety of usages. Here is an overview of events way within the Eventing component:&lt;/p>
&lt;figure>&lt;img src="https://vuptime.io/images/veba-first-steps/kn-broker-trigger-overview.svg"/>&lt;figcaption>
&lt;h4>Broker Trigger Diagram (src: https://knative.dev/docs/eventing/)&lt;/h4>
&lt;/figcaption>
&lt;/figure>
&lt;p>The &lt;strong>Knative Serving&lt;/strong> project provides middleware primitives that enable the deployment of serverless containers with automatic scaling (up and down to zero). The component is in charge of traffic routing to deployed application and to manage versioning, rollbacks, load-testing etc.&lt;/p>
&lt;figure>&lt;img src="https://vuptime.io/images/veba-first-steps/kn-object_model.png"/>&lt;figcaption>
&lt;h4>Knative service overview (src: https://knative.dev/docs/serving/)&lt;/h4>
&lt;/figcaption>
&lt;/figure>
&lt;h2 id="deploy-knative-on-your-cluster">Deploy Knative on your cluster&lt;/h2>
&lt;h3 id="setup-description">Setup description&lt;/h3>
&lt;p>In the following setup, we will deploy &lt;strong>Serving&lt;/strong> and &lt;strong>Eventing&lt;/strong> components with &lt;a href="https://github.com/knative-sandbox/net-kourier">Kourier&lt;/a> as Ingress for Knative Serving.&lt;/p>
&lt;blockquote>
&lt;p>Kourier is a lightweight alternative for the Istio ingress as its deployment consists only of an Envoy proxy and a control plane for it.&lt;/p>
&lt;/blockquote>
&lt;p>I assume that you already have a working Kubernetes cluster.&lt;/p>
&lt;blockquote>
&lt;p>If not, you can try &lt;a href="https://kind.sigs.k8s.io/docs/user/quick-start/">&lt;code>kind&lt;/code>&lt;/a> to deploy a local, dev-purpose, cluster.&lt;/p>
&lt;/blockquote>
&lt;p>The following process also relies on &lt;code>helm&lt;/code> to deploy the vmware event router.&lt;/p>
&lt;p>We will use the (current) latest version of knative, but you can probably change the value of the following setting according to the &lt;a href="https://github.com/knative/operator/releases">knative latest available release&lt;/a>.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="ln">1&lt;/span>&lt;span class="cl">&lt;span class="nb">export&lt;/span> &lt;span class="nv">KN_VERSION&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;v0.22.0&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="knative-serving">Knative Serving&lt;/h3>
&lt;p>&lt;a href="https://knative.dev/docs/install/install-serving-with-yaml/">Knative documentation&lt;/a> is really helpful for the following steps. I will only put together the commands I used in my setup:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="ln">1&lt;/span>&lt;span class="cl">&lt;span class="c1"># custom resources definitions&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">2&lt;/span>&lt;span class="cl">kubectl apply -f https://github.com/knative/serving/releases/download/&lt;span class="si">${&lt;/span>&lt;span class="nv">KN_VERSION&lt;/span>&lt;span class="si">}&lt;/span>/serving-crds.yaml
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">3&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">4&lt;/span>&lt;span class="cl">&lt;span class="c1"># Knative Serving core components&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">5&lt;/span>&lt;span class="cl">kubectl apply -f https://github.com/knative/serving/releases/download/&lt;span class="si">${&lt;/span>&lt;span class="nv">KN_VERSION&lt;/span>&lt;span class="si">}&lt;/span>/serving-core.yaml
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>A new &lt;code>knative-serving&lt;/code> namespace will be deployed on the cluster with some core resources.&lt;/p>
&lt;p>Then we install and configure Kourier to act as our Ingress controller:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="ln">1&lt;/span>&lt;span class="cl">&lt;span class="c1"># Install and configure Kourier&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">2&lt;/span>&lt;span class="cl">kubectl apply -f https://raw.githubusercontent.com/knative/serving/&lt;span class="si">${&lt;/span>&lt;span class="nv">KN_VERSION&lt;/span>&lt;span class="si">}&lt;/span>/third_party/kourier-latest/kourier.yaml
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">3&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">4&lt;/span>&lt;span class="cl">&lt;span class="c1"># Specfiy knative Serving to use Kourier&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">5&lt;/span>&lt;span class="cl">kubectl patch configmap/config-network --namespace knative-serving --type merge --patch &lt;span class="s1">&amp;#39;{&amp;#34;data&amp;#34;:{&amp;#34;ingress.class&amp;#34;:&amp;#34;kourier.ingress.networking.knative.dev&amp;#34;}}&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Depending on the target platform you use, you may, or may not have a value already set for the &lt;code>External-IP&lt;/code> of the &lt;code>kourier&lt;/code> service.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="ln">1&lt;/span>&lt;span class="cl">kubectl -n kourier-system get service kourier
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">2&lt;/span>&lt;span class="cl">&lt;span class="c1"># Output&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">3&lt;/span>&lt;span class="cl">NAME TYPE CLUSTER-IP EXTERNAL-IP PORT&lt;span class="o">(&lt;/span>S&lt;span class="o">)&lt;/span> AGE
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">4&lt;/span>&lt;span class="cl">kourier LoadBalancer 10.43.165.137 pending 80:30471/TCP,443:32405/TCP 10m
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>If you have a pending value (like in my on-premise setup), you can manually assign an IP address to the service:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="ln">1&lt;/span>&lt;span class="cl">kubectl patch service kourier -p &lt;span class="s1">&amp;#39;{&amp;#34;spec&amp;#34;: {&amp;#34;type&amp;#34;: &amp;#34;LoadBalancer&amp;#34;, &amp;#34;externalIPs&amp;#34;:[&amp;#34;192.168.1.36&amp;#34;]}}&amp;#39;&lt;/span> -n kourier-system
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">2&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">3&lt;/span>&lt;span class="cl">kubectl -n kourier-system get service kourier
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">4&lt;/span>&lt;span class="cl">&lt;span class="c1"># Output&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">5&lt;/span>&lt;span class="cl">NAME TYPE CLUSTER-IP EXTERNAL-IP PORT&lt;span class="o">(&lt;/span>S&lt;span class="o">)&lt;/span> AGE
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">6&lt;/span>&lt;span class="cl">kourier LoadBalancer 10.43.165.137 192.168.1.36 80:30471/TCP,443:32405/TCP 10m
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>You can have a quick look at running pods on your `` namespace to see if everything is running fine:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="ln">1&lt;/span>&lt;span class="cl">kubectl get pods -n knative-serving
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">2&lt;/span>&lt;span class="cl">&lt;span class="c1"># Output&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">3&lt;/span>&lt;span class="cl">NAME READY STATUS RESTARTS AGE
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">4&lt;/span>&lt;span class="cl">3scale-kourier-control-67c86f4f69-6mnwr 1/1 Running &lt;span class="m">0&lt;/span> 11m
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">5&lt;/span>&lt;span class="cl">activator-799bbf59dc-s6vls 1/1 Running &lt;span class="m">0&lt;/span> 11m
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">6&lt;/span>&lt;span class="cl">autoscaler-75895c6c95-mbnqw 1/1 Running &lt;span class="m">0&lt;/span> 11m
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">7&lt;/span>&lt;span class="cl">controller-57956677cf-74hp9 1/1 Running &lt;span class="m">0&lt;/span> 11m
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">8&lt;/span>&lt;span class="cl">webhook-ff79fddb7-gjvwq 1/1 Running &lt;span class="m">0&lt;/span> 11m
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="knative-eventing">Knative Eventing&lt;/h3>
&lt;p>As for the Serving component, you can rely on a very clear &lt;a href="https://knative.dev/docs/install/install-eventing-with-yaml/">documentation to install the Eventing component&lt;/a>.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="ln"> 1&lt;/span>&lt;span class="cl">&lt;span class="c1"># custom resources definitions&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 2&lt;/span>&lt;span class="cl">kubectl apply -f https://github.com/knative/eventing/releases/download/&lt;span class="si">${&lt;/span>&lt;span class="nv">KN_VERSION&lt;/span>&lt;span class="si">}&lt;/span>/eventing-crds.yaml
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 3&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 4&lt;/span>&lt;span class="cl">&lt;span class="c1"># Knative Eventing core components&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 5&lt;/span>&lt;span class="cl">kubectl apply -f https://github.com/knative/eventing/releases/download/&lt;span class="si">${&lt;/span>&lt;span class="nv">KN_VERSION&lt;/span>&lt;span class="si">}&lt;/span>/eventing-core.yaml
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 6&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 7&lt;/span>&lt;span class="cl">&lt;span class="c1"># Prepare In-memory channel (messaging) layer&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 8&lt;/span>&lt;span class="cl">kubectl apply -f https://github.com/knative/eventing/releases/download/&lt;span class="si">${&lt;/span>&lt;span class="nv">KN_VERSION&lt;/span>&lt;span class="si">}&lt;/span>/in-memory-channel.yaml
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 9&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">10&lt;/span>&lt;span class="cl">&lt;span class="c1"># Prepare MT-channel based broker&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">11&lt;/span>&lt;span class="cl">kubectl apply -f https://github.com/knative/eventing/releases/download/v0.22.0/mt-channel-broker.yaml
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;blockquote>
&lt;p>&lt;strong>Channels&lt;/strong> are Kubernetes custom resources that define a single event forwarding and persistence layer. &lt;a href="https://knative.dev/docs/eventing/channels/">[More details]&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;p>&lt;strong>Brokers&lt;/strong> can be used in combination with subscriptions and triggers to deliver events from an event source to an event sink.&lt;/p>
&lt;/blockquote>
&lt;p>Here, the default &lt;em>MT Channel Based Broker&lt;/em> relies on a default, unsuitable for production, &lt;em>In-Memory&lt;/em> channel.&lt;/p>
&lt;p>We will only use the &lt;em>clusterDefault&lt;/em> settings but, if needed, you can edit the broker configuration by using the next command:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="ln">1&lt;/span>&lt;span class="cl">kubectl edit cm -n knative-eventing config-br-defaults
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="knative-cli">knative CLI&lt;/h3>
&lt;p>Event if &lt;code>kubectl&lt;/code> could be used to manage knative components, a &lt;code>kn&lt;/code> CLI tool is also available with completion of otherwise complex procedures such as auto-scaling and traffic splitting.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="ln">1&lt;/span>&lt;span class="cl">curl https://github.com/knative/client/releases/download/&lt;span class="si">${&lt;/span>&lt;span class="nv">KN_VERSION&lt;/span>&lt;span class="si">}&lt;/span>/kn-linux-amd64 -L &amp;gt; kn
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">2&lt;/span>&lt;span class="cl">chmod +x kn
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">3&lt;/span>&lt;span class="cl">sudo mv kn /usr/local/bin/kn
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">4&lt;/span>&lt;span class="cl">&lt;span class="c1"># Test it&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">5&lt;/span>&lt;span class="cl">kn version
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="part-2-deploy-vmware-event-broker">Part 2: Deploy VMware Event Broker&lt;/h1>
&lt;p>See you in &lt;a href="https://vuptime.io/2021/05/06/vmware-event-broker-on-k8s-with-knative-part2">&lt;strong>Part 2&lt;/strong>&lt;/a> to deploy the VMware Event Broker and some functions.&lt;/p>
&lt;h2 id="credits">Credits&lt;/h2>
&lt;p>Title photo by &lt;a href="https://unsplash.com/@jupp">Jonathan Kemper&lt;/a> on &lt;a href="https://unsplash.com/photos/H488ymQgIgM">Unsplash&lt;/a>&lt;/p></description></item><item><title>Run Argo workflow from a VEBA event through OpenFaaS</title><link>https://vuptime.io/post/2021-01-06-run-arg-workflows-from-veba-events/</link><pubDate>Wed, 06 Jan 2021 00:00:00 +0000</pubDate><guid>https://vuptime.io/2021/01/06/run-arg-workflows-from-veba-events/</guid><description>
&lt;p>I recently made posts about the &lt;a href="https://vmweventbroker.io/">VMware Event Broker&lt;/a> (aka VEBA) to explain basic on-boarding in the &lt;em>FaaS&lt;/em> and &lt;em>Event-Driven&lt;/em> worlds.&lt;/p>
&lt;p>As you may have noticed, the FaaS concept is perfect for use-case where the automation will be:&lt;/p>
&lt;ul>
&lt;li>Stateless&lt;/li>
&lt;li>Fast running&lt;/li>
&lt;li>No latency sensitive&lt;/li>
&lt;li>Responsible of a single thing&lt;/li>
&lt;li>Deterministic&lt;/li>
&lt;/ul>
&lt;blockquote>
&lt;p>BTW, there is a nice list of FaaS Best Practices on the VEBA documentation: &lt;a href="https://vmweventbroker.io/kb/contribute-functions">Writing your own functions&lt;/a>.&lt;/p>
&lt;/blockquote>
&lt;p>When you need to break one (or more) of the above rules, it may be necessary to rely on other kinds of automation, like &lt;strong>Workflows&lt;/strong>.&lt;/p>
&lt;p>In the following post, I will demonstrate how it is possible to forward VEBA events to a very powerful Workflow engine named &lt;a href="https://argoproj.github.io">&lt;strong>Argo&lt;/strong>&lt;/a> to run, for example:&lt;/p>
&lt;ul>
&lt;li>long-running automation&lt;/li>
&lt;li>multi steps automation&lt;/li>
&lt;li>stateful functions&lt;/li>
&lt;li>retry-able functions&lt;/li>
&lt;/ul>
&lt;p>This work relies on an OpenFaaS function: &lt;a href="https://github.com/lrivallain/openfaas-fn/tree/master/veba-to-argo-fn">veba-to-argo-fn&lt;/a>.&lt;/p>
&lt;h2 id="how-does-it-works">How does it works&lt;/h2>
&lt;p>This OpenFaaS function is a simple &lt;em>forwarder&lt;/em> (or &lt;em>proxy&lt;/em>) to execute a pre-definied &lt;a href="https://argoproj.github.io/argo/workflow-templates/">Worklow Template&lt;/a> by providing the incoming cloud-event as an input parameter of the Workflow excecution.&lt;/p>
&lt;figure>&lt;img src="https://vuptime.io/images/argo/veba-to-argo-fn.png"/>&lt;figcaption>
&lt;h4>VEBA to Argo&lt;/h4>
&lt;/figcaption>
&lt;/figure>
&lt;h3 id="pre-requisites">Pre-requisites&lt;/h3>
&lt;p>You need:&lt;/p>
&lt;ul>
&lt;li>A deployed VEBA instance (appliance based or K8S based): &lt;a href="https://vuptime.io/2020/12/17/vmware-event-broker-0.5.0-on-k8s-first-steps/#openfaas-deployment">How-to on vUptime blog&lt;/a>&lt;/li>
&lt;li>A deployed OpenFaaS instance (+&lt;code>faas-cli&lt;/code>)&lt;/li>
&lt;li>A deployed Argo instance (+&lt;code>argo&lt;/code> cli): &lt;a href="https://argoproj.github.io/argo/quick-start/">Quick Start&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>A clone of the below repository:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="ln">1&lt;/span>&lt;span class="cl">git clone https://github.com/lrivallain/openfaas-fn.git
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">2&lt;/span>&lt;span class="cl">&lt;span class="nb">cd&lt;/span> openfaas-fn/veba-to-argo-fn
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="deploy-the-argo-echoer-template-wf">Deploy the Argo &lt;em>echoer&lt;/em> template WF&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="ln">1&lt;/span>&lt;span class="cl">argo template create echoer-argowf.yaml
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">2&lt;/span>&lt;span class="cl">argo template list
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">3&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">4&lt;/span>&lt;span class="cl">&lt;span class="c1"># Expected output&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">5&lt;/span>&lt;span class="cl">NAME
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">6&lt;/span>&lt;span class="cl">echoer
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;blockquote>
&lt;p>This &lt;code>echoer&lt;/code> workflow template is a very simple workflow that just repeats the incoming data in its stdin (logs).&lt;/p>
&lt;/blockquote>
&lt;h2 id="configure-the-function">Configure the function&lt;/h2>
&lt;h3 id="argo-config-secret">Argo config secret&lt;/h3>
&lt;p>Copy and customize the &lt;code>argoconfig.example.yaml&lt;/code> file:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="ln">1&lt;/span>&lt;span class="cl">cp argoconfig.example.yaml argoconfig.yaml
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="ln"> 1&lt;/span>&lt;span class="cl">&lt;span class="nt">argoserver&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 2&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">server&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">argo.vlab.lcl&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 3&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">protocol&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">http&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 4&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">namespace&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">argo&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 5&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">serviceaccount&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">argo-svc&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 6&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">template&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">echoer&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 7&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">event_param_name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">message&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 8&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">labels&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 9&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">through&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">openfaas&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">10&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">coming-from&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">veba&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">11&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">foo&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">bar&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Deploy this configuration file as a new &lt;em>faas&lt;/em> secret.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="ln">1&lt;/span>&lt;span class="cl">faas-cli secret create argoconfig --from-file&lt;span class="o">=&lt;/span>argoconfig.yaml
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">2&lt;/span>&lt;span class="cl">faas-cli secret list
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">3&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">4&lt;/span>&lt;span class="cl">&lt;span class="c1"># Expected output&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">5&lt;/span>&lt;span class="cl">NAME
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">6&lt;/span>&lt;span class="cl">argoconfig
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="stackyaml">&lt;code>stack.yaml&lt;/code>&lt;/h3>
&lt;p>Edit the &lt;code>stack.yaml&lt;/code> according to your needs:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="ln"> 1&lt;/span>&lt;span class="cl">&lt;span class="nt">version&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">1.0&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 2&lt;/span>&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">provider&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 3&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">openfaas&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 4&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">gateway&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">http://openfaas.vlab.local&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 5&lt;/span>&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">functions&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 6&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">veba-to-argo-echoer&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 7&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">lang&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">python3&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 8&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">handler&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">./handler&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 9&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">image&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">lrivallain/veba-to-argo&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">10&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">environment&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">11&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">write_debug&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">12&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">read_debug&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">13&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">secrets&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">14&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">argoconfig&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">15&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">annotations&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">16&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">topic&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">VmCreatedEvent, VmClonedEvent, VmRegisteredEvent, DrsVmPoweredOnEvent, VmPoweredOnEvent&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Now we need to pull the OpenFaaS language template for the specified lang in our stack.yml file:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="ln">1&lt;/span>&lt;span class="cl">faas template store pull python3
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="deploy-the-function">Deploy the function&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="ln">1&lt;/span>&lt;span class="cl">faas-cli deploy -f stack.yaml
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">2&lt;/span>&lt;span class="cl">faas-cli list
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">3&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">4&lt;/span>&lt;span class="cl">&lt;span class="c1"># Expected output&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">5&lt;/span>&lt;span class="cl">Function Invocations Replicas
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">6&lt;/span>&lt;span class="cl">veba-to-argo-echoer &lt;span class="m">0&lt;/span> &lt;span class="m">1&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="test">Test&lt;/h3>
&lt;p>You can also check the function from the UI and do a first test by running:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="ln">1&lt;/span>&lt;span class="cl">&lt;span class="nb">echo&lt;/span> &lt;span class="s1">&amp;#39;{&amp;#34;id&amp;#34;: &amp;#34;test&amp;#34;, &amp;#34;source&amp;#34;: &amp;#34;sourcetest&amp;#34;, &amp;#34;subject&amp;#34;: &amp;#34;any&amp;#34;, &amp;#34;data&amp;#34;: {}}&amp;#39;&lt;/span> &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">2&lt;/span>&lt;span class="cl">&lt;span class="se">&lt;/span> &lt;span class="p">|&lt;/span> faas-cli invoke veba-to-argo-echoer
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>This should produce an excecution of a Worklow based on the echoer template in Argo.&lt;/p>
&lt;h3 id="results">Results&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="ln"> 1&lt;/span>&lt;span class="cl">argo get @latest
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 2&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 3&lt;/span>&lt;span class="cl">&lt;span class="c1"># Expected output&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 4&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 5&lt;/span>&lt;span class="cl">Name: echoer-7ldps
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 6&lt;/span>&lt;span class="cl">Namespace: argo
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 7&lt;/span>&lt;span class="cl">ServiceAccount: argo-svc
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 8&lt;/span>&lt;span class="cl">Status: Succeeded
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 9&lt;/span>&lt;span class="cl">Conditions:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">10&lt;/span>&lt;span class="cl"> Completed True
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">11&lt;/span>&lt;span class="cl">Created: Wed Jan &lt;span class="m">06&lt;/span> 09:56:19 +0000 &lt;span class="o">(&lt;/span>&lt;span class="m">44&lt;/span> seconds from now&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">12&lt;/span>&lt;span class="cl">Started: Wed Jan &lt;span class="m">06&lt;/span> 09:56:19 +0000 &lt;span class="o">(&lt;/span>&lt;span class="m">44&lt;/span> seconds from now&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">13&lt;/span>&lt;span class="cl">Finished: Wed Jan &lt;span class="m">06&lt;/span> 09:56:22 +0000 &lt;span class="o">(&lt;/span>&lt;span class="m">47&lt;/span> seconds from now&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">14&lt;/span>&lt;span class="cl">Duration: &lt;span class="m">3&lt;/span> seconds
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">15&lt;/span>&lt;span class="cl">ResourcesDuration: 1s*&lt;span class="o">(&lt;/span>100Mi memory&lt;span class="o">)&lt;/span>,1s*&lt;span class="o">(&lt;/span>&lt;span class="m">1&lt;/span> cpu&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">16&lt;/span>&lt;span class="cl">Parameters:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">17&lt;/span>&lt;span class="cl"> message: &lt;span class="o">{&lt;/span>&lt;span class="s2">&amp;#34;id&amp;#34;&lt;/span>: &lt;span class="s2">&amp;#34;test&amp;#34;&lt;/span>, &lt;span class="s2">&amp;#34;source&amp;#34;&lt;/span>: &lt;span class="s2">&amp;#34;sourcetest&amp;#34;&lt;/span>, &lt;span class="s2">&amp;#34;subject&amp;#34;&lt;/span>: &lt;span class="s2">&amp;#34;any&amp;#34;&lt;/span>, &lt;span class="s2">&amp;#34;data&amp;#34;&lt;/span>: &lt;span class="o">{}}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">18&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">19&lt;/span>&lt;span class="cl">STEP TEMPLATE PODNAME DURATION MESSAGE
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">20&lt;/span>&lt;span class="cl"> ✔ echoer-7ldps echoer/echo echoer-7ldps 26s
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>And in the logs:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="ln">1&lt;/span>&lt;span class="cl">argo logs @latest
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">2&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">3&lt;/span>&lt;span class="cl">&lt;span class="c1"># Expected output&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">4&lt;/span>&lt;span class="cl">echoer-7ldps: &lt;span class="o">{&lt;/span>&lt;span class="s2">&amp;#34;id&amp;#34;&lt;/span>: &lt;span class="s2">&amp;#34;test&amp;#34;&lt;/span>, &lt;span class="s2">&amp;#34;source&amp;#34;&lt;/span>: &lt;span class="s2">&amp;#34;sourcetest&amp;#34;&lt;/span>, &lt;span class="s2">&amp;#34;subject&amp;#34;&lt;/span>: &lt;span class="s2">&amp;#34;any&amp;#34;&lt;/span>, &lt;span class="s2">&amp;#34;data&amp;#34;&lt;/span>: &lt;span class="o">{}}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="ui">UI&lt;/h3>
&lt;p>Argo provide an UI to have a quick-view on the content status.&lt;/p>
&lt;p>Here is the view of an echoer instance:&lt;/p>
&lt;figure>&lt;img src="https://vuptime.io/images/argo/echoer-ui.png"/>&lt;figcaption>
&lt;h4>echoer instance in the UI&lt;/h4>
&lt;/figcaption>
&lt;/figure>
&lt;p>and a view of the &lt;em>printed&lt;/em> logs:&lt;/p>
&lt;figure>&lt;img src="https://vuptime.io/images/argo/echoer-ui-logs.png"/>&lt;figcaption>
&lt;h4>echoer instance in the UI&lt;/h4>
&lt;/figcaption>
&lt;/figure>
&lt;h3 id="retries">Retries&lt;/h3>
&lt;p>If needed, you can re-run an existing instance of a workflow (with the same inputs) with the following kind of command:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="ln">1&lt;/span>&lt;span class="cl">argo resubmit @latest --watch
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="veba-event">VEBA event&lt;/h2>
&lt;p>In the same way, if you trigger on of the vCenter events configured in your &lt;code>stack.yaml&lt;/code> file (like &lt;code>VmCreatedEvent, VmClonedEvent, VmRegisteredEvent, DrsVmPoweredOnEvent, VmPoweredOnEvent&lt;/code> in the provided example) from you vCenter server:&lt;/p>
&lt;ol>
&lt;li>VEBA event router will trigger the OpenFaaS function with event as an incoming data&lt;/li>
&lt;li>OpenFaaS function will trigger the Argo worklow with the event as an incoming data&lt;/li>
&lt;/ol>
&lt;p>With the &lt;code>echoer&lt;/code> workflow, you will be able to get the content of the event sent by VEBA and of course, you can now run a (more or less complex) workflow(s) catching the event data and making multiple actions.&lt;/p>
&lt;h2 id="conclusion">Conclusion&lt;/h2>
&lt;p>The above example is just a very simple sample of the enabled capabilities and it was difficult to demonstrate in this blog post the behavior of the full setup without being too complex for readers.&lt;/p>
&lt;p>But I strongly encourage you to test it by yourself and to provide me a feedback.&lt;/p>
&lt;p>You can also fill a GitHub issue on the project if needed: &lt;a href="https://github.com/lrivallain/openfaas-fn/issues/new/choose">&lt;strong>New issue&lt;/strong>&lt;/a>.&lt;/p></description></item><item><title>VMware Event Broker 0.5.0 (aka VEBA) on Kubernetes – First steps</title><link>https://vuptime.io/post/2020-12-17-vmware-event-broker-0.5.0-on-k8s-first-steps/</link><pubDate>Thu, 17 Dec 2020 00:00:00 +0000</pubDate><guid>https://vuptime.io/2020/12/17/vmware-event-broker-0.5.0-on-k8s-first-steps/</guid><description>
&lt;blockquote>
&lt;p>This post is a re-edition of a previous one: &lt;a href="2020/11/02/vmware-event-broker-on-k8s-first-steps/">VMware Event Broker (aka VEBA) on Kubernetes – First steps&lt;/a>, update to be applicable to the new 0.5.0 release of &lt;em>VEBA&lt;/em>, including the support of &lt;code>helm&lt;/code> chart deployment.&lt;/p>
&lt;/blockquote>
&lt;p>In the following post, we will (re)discover how to deploy the VMware Event Broker services (VEBA) within an existing Kubernetes (K8S) cluster and use it to add/edit custom attributes information to virtual machines.&lt;/p>
&lt;p>The goal of the VEBA deployment is to be able to listen for events in the VMware vCenter infrastructure and to run specific tasks when filtered events occurs: it is the &lt;a href="https://octo.vmware.com/vsphere-power-event-driven-automation/">&lt;em>event driven automation&lt;/em>&lt;/a> concept.&lt;/p>
&lt;p>To be accurate, VEBA stands for &lt;strong>&amp;quot;VMware Event Broker Appliance&amp;quot;&lt;/strong>: a Photon OS based virtual machine, available in OVA format, with an embedded small K8S cluster to support the &lt;strong>&amp;quot;VMware Event Broker&amp;quot;&lt;/strong> services.
In the following post, I re-use an existing K8S cluster to support the &amp;quot;VMware Event Broker&amp;quot; services but I will use the VEBA acronym to simplify the redaction: even if I do not use the appliance deployment method.&lt;/p>
&lt;p>If you need more details about VEB(A), the official website if well documented: &lt;a href="https://vmweventbroker.io/">vmweventbroker.io&lt;/a> and lot of other use-cases are listed: notification, automation, integration, remediation, audit, analytics…&lt;/p>
&lt;h2 id="vmware-event-broker-components">VMware Event Broker components&lt;/h2>
&lt;figure>&lt;img src="https://vuptime.io/images/veba-first-steps/veba-architecture-v0.5.0.png"/>&lt;figcaption>
&lt;h4>VEBA Architecture&lt;/h4>
&lt;/figcaption>
&lt;/figure>
&lt;h3 id="vmware-event-router">VMware Event Router&lt;/h3>
&lt;p>The &lt;em>VMware Event Router&lt;/em>, is the VEBA component, watching for new events generated by an &lt;em>Event Stream Source&lt;/em> and routing the event to the &lt;strong>Event Stream Processors&lt;/strong>. In the mean time, the &lt;em>VER&lt;/em> translate the events to the &lt;a href="https://cloudevents.io">&lt;em>cloudevents&lt;/em>&lt;/a> format: a specification for describing event data in a common way.&lt;/p>
&lt;h3 id="event-stream-source">Event Stream Source&lt;/h3>
&lt;p>Currently, the VEBA only support one source for event stream: the vCenter Server.&lt;/p>
&lt;p>As announced at VMworld2020 (&lt;strong>VEBA and the Power of Event-Driven Automation – Reloaded [HCP1358]&lt;/strong>), a Cloud Director &lt;em>event stream source&lt;/em> is in preparation.&lt;/p>
&lt;h3 id="event-stream-processors">Event Stream Processors&lt;/h3>
&lt;p>The &lt;em>Event Stream Processor&lt;/em> is in charge of handling the event propagated by the &lt;em>VMware Event Router&lt;/em> to the appropriate automation tasks that are configured to run for the specific type of event.&lt;/p>
&lt;p>As the time I write this post, 3 processors are available:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://aws.amazon.com/eventbridge/">Amazon EventBridge&lt;/a>: to run on AWS &lt;em>serverless&lt;/em> event services, your automation tasks.&lt;/li>
&lt;li>&lt;a href="https://www.openfaas.com/">OpenFaaS®&lt;/a>: An open-source project to run &lt;em>Function as a Service&lt;/em> (FaaS) automation task over a K8S deployment.&lt;/li>
&lt;li>&lt;a href="https://knative.dev/">KNative&lt;/a> &lt;strong>NEW in 0.5.0&lt;/strong>: a Google-sponsored industry-wide project to extends Kubernetes to provide developers with a set of tools that simplify the process of deploying and managing event-driven applications that can run anywhere.&lt;/li>
&lt;/ul>
&lt;p>In my setup, I use the OpenFaaS processor.&lt;/p>
&lt;h2 id="pre-requisites">Pre-requisites&lt;/h2>
&lt;h3 id="kubernetes">Kubernetes&lt;/h3>
&lt;p>To proceed, we consider that an existing cluster is deployed.&lt;/p>
&lt;p>If you need to deploy a really light and simple lab setup, I can highly recommend to use &lt;code>k3s&lt;/code> to deploy your own K8S cluster: &lt;a href="https://rancher.com/docs/k3s/latest/en/quick-start/">K3S: Quick-Start Guide&lt;/a>.&lt;/p>
&lt;p>In my own lab, I use a K8S cluster deployed by &lt;a href="https://rancher.com/">Rancher&lt;/a> with the vSphere node driver (but that doesn't change anything to the current use-case).&lt;/p>
&lt;h3 id="kubectl-cli">&lt;code>kubectl&lt;/code> cli&lt;/h3>
&lt;p>&lt;a href="https://kubernetes.io/docs/tasks/tools/install-kubectl/">&lt;code>kubectl&lt;/code>&lt;/a> is the standard CLI tool to operate K8S resources.&lt;/p>
&lt;p>Once installed, you need to link your K8S cluster configuration file. There are multiple methods to do so, so I prefer to link the official documentation for &lt;a href="https://kubernetes.io/docs/concepts/configuration/organize-cluster-access-kubeconfig/">Organizing Cluster Access Using kubeconfig Files&lt;/a>.&lt;/p>
&lt;p>You can check the setup by running:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="ln">1&lt;/span>&lt;span class="cl">&lt;span class="c1"># Display the current configuration&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">2&lt;/span>&lt;span class="cl">kubectl config view
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">3&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">4&lt;/span>&lt;span class="cl">&lt;span class="c1"># Get client and server version&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">5&lt;/span>&lt;span class="cl">kubectl version --short
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>The last command should output something close to this:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="ln">1&lt;/span>&lt;span class="cl">Client Version: v1.19.3
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">2&lt;/span>&lt;span class="cl">Server Version: v1.19.2
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="helm-cli">&lt;code>helm&lt;/code> cli&lt;/h3>
&lt;p>The &lt;code>helm&lt;/code> cli will provide a simple way to deploy both OpenFaaS and VEBA stacks:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="ln">1&lt;/span>&lt;span class="cl">curl https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3 &lt;span class="p">|&lt;/span> sudo bash
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="faas-cli">&lt;code>faas-cli&lt;/code>&lt;/h3>
&lt;p>The &lt;a href="https://github.com/openfaas/faas-cli">&lt;code>faas-cli&lt;/code>&lt;/a> requirement is linked to the usage of the OpenFaaS processor in the following setup.&lt;/p>
&lt;p>Here is one installation method:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="ln">1&lt;/span>&lt;span class="cl">curl -sSL https://cli.openfaas.com &lt;span class="p">|&lt;/span> sudo sh
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;blockquote>
&lt;p>You can also use an alternative installation method described in the &lt;a href="https://github.com/openfaas/faas-cli">&lt;code>faas-cli&lt;/code> project GitHub repository&lt;/a>.&lt;/p>
&lt;/blockquote>
&lt;h2 id="openfaas-deployment">OpenFaaS deployment&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="ln">1&lt;/span>&lt;span class="cl">kubectl create ns openfaas
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">2&lt;/span>&lt;span class="cl">kubectl create ns openfaas-fn
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">3&lt;/span>&lt;span class="cl">helm repo add openfaas https://openfaas.github.io/faas-netes
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">4&lt;/span>&lt;span class="cl">helm repo update
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">5&lt;/span>&lt;span class="cl">helm upgrade openfaas --install openfaas/openfaas &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">6&lt;/span>&lt;span class="cl">&lt;span class="se">&lt;/span> --namespace openfaas &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">7&lt;/span>&lt;span class="cl">&lt;span class="se">&lt;/span> --set &lt;span class="nv">functionNamespace&lt;/span>&lt;span class="o">=&lt;/span>openfaas-fn &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">8&lt;/span>&lt;span class="cl">&lt;span class="se">&lt;/span> --set &lt;span class="nv">generateBasicAuth&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nb">true&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>You can check the deployment status by running:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="ln">1&lt;/span>&lt;span class="cl">kubectl -n openfaas get deployments -l &lt;span class="s2">&amp;#34;release=openfaas, app=openfaas&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Once deployed, you can get the generated password and the endpoint URL by:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="ln">1&lt;/span>&lt;span class="cl">&lt;span class="c1"># Get password&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">2&lt;/span>&lt;span class="cl">&lt;span class="nb">export&lt;/span> &lt;span class="nv">OF_PASS&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="k">$(&lt;/span>&lt;span class="nb">echo&lt;/span> &lt;span class="k">$(&lt;/span>kubectl -n openfaas get secret basic-auth -o &lt;span class="nv">jsonpath&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;{.data.basic-auth-password}&amp;#34;&lt;/span> &lt;span class="p">|&lt;/span> base64 --decode&lt;span class="k">))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">3&lt;/span>&lt;span class="cl">&lt;span class="nb">echo&lt;/span> &lt;span class="nv">$OF_PASS&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">4&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">5&lt;/span>&lt;span class="cl">&lt;span class="c1"># Get URI&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">6&lt;/span>&lt;span class="cl">&lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;export OPENFAAS_URL=http://&amp;#34;&lt;/span>&lt;span class="k">$(&lt;/span>kubectl -n openfaas describe pods &lt;span class="k">$(&lt;/span>kubectl -n openfaas get pods &lt;span class="p">|&lt;/span> grep &lt;span class="s2">&amp;#34;gateway-&amp;#34;&lt;/span> &lt;span class="p">|&lt;/span> awk &lt;span class="s1">&amp;#39;{print $1}&amp;#39;&lt;/span>&lt;span class="k">)&lt;/span> &lt;span class="p">|&lt;/span> grep &lt;span class="s2">&amp;#34;^Node:&amp;#34;&lt;/span> &lt;span class="p">|&lt;/span> awk -F &lt;span class="s2">&amp;#34;/&amp;#34;&lt;/span> &lt;span class="s1">&amp;#39;{print $2}&amp;#39;&lt;/span>&lt;span class="k">)&lt;/span>&lt;span class="s2">&amp;#34;:31112&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="ingress-access-to-openfaas">Ingress access to OpenFaaS&lt;/h3>
&lt;p>If you want to access with a friendly URI to your OpenFaaS instance, you can use an ingress like the following one:&lt;/p>
&lt;ol>
&lt;li>Create a DNS record for your new openfaas fqdn then&lt;/li>
&lt;li>Create the following file:&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="ln">1&lt;/span>&lt;span class="cl">mkdir openfaas
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">2&lt;/span>&lt;span class="cl">vi openfaas/ingress.yml
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="ln"> 1&lt;/span>&lt;span class="cl">&lt;span class="nt">apiVersion&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">networking.k8s.io/v1beta1&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 2&lt;/span>&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">kind&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">Ingress&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 3&lt;/span>&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">metadata&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 4&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">openfaas-gateway-ingress&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 5&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">namespace&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">openfaas&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 6&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">annotations&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 7&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">kubernetes.io/ingress.class&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">traefik&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 8&lt;/span>&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">spec&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 9&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">rules&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">10&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">host&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">openfaas.vlab.lcl&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">11&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">http&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">12&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">paths&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">13&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">backend&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">14&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">serviceName&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">gateway&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">15&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">servicePort&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">8080&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Deploy it:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="ln">1&lt;/span>&lt;span class="cl">kubectl apply -f ingress.yml
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">2&lt;/span>&lt;span class="cl">kubectl get ingress -n openfaas
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">3&lt;/span>&lt;span class="cl">&lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;export OPENFAAS_URL=http://&lt;/span>&lt;span class="k">$(&lt;/span>kubectl get ingress -n openfaas 2&amp;gt;/dev/null&lt;span class="p">|&lt;/span> grep &lt;span class="s2">&amp;#34;gateway-&amp;#34;&lt;/span> &lt;span class="p">|&lt;/span> awk &lt;span class="s1">&amp;#39;{print $3}&amp;#39;&lt;/span>&lt;span class="k">)&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="check-the-deployment">Check the deployment&lt;/h3>
&lt;p>If you requested the OpenFaaS deployment, you now have a set of pods in the &lt;code>openfaas&lt;/code> namespace:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="ln"> 1&lt;/span>&lt;span class="cl">kubectl get pods -n openfaas
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 2&lt;/span>&lt;span class="cl">&lt;span class="c1"># You should get a new set of running pods&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 3&lt;/span>&lt;span class="cl">NAME READY STATUS RESTARTS AGE
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 4&lt;/span>&lt;span class="cl">basic-auth-plugin-bc899c574-6hzhf 1/1 Running &lt;span class="m">0&lt;/span> 18h
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 5&lt;/span>&lt;span class="cl">nats-7d86c64647-nj9mm 1/1 Running &lt;span class="m">0&lt;/span> 18h
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 6&lt;/span>&lt;span class="cl">queue-worker-5d8986f858-cql9c 1/1 Running &lt;span class="m">1&lt;/span> 18h
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 7&lt;/span>&lt;span class="cl">alertmanager-677f4db47f-s92xs 1/1 Running &lt;span class="m">0&lt;/span> 18h
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 8&lt;/span>&lt;span class="cl">prometheus-7797994d65-74pvn 1/1 Running &lt;span class="m">0&lt;/span> 18h
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 9&lt;/span>&lt;span class="cl">gateway-7f6d9cb855-xptmw 2/2 Running &lt;span class="m">0&lt;/span> 18h
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">10&lt;/span>&lt;span class="cl">faas-idler-7f66c658bf-gs98m 1/1 Running &lt;span class="m">3&lt;/span> 18h
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="login-to-your-openfaas-cli-and-ui">Login to your OpenFaaS cli and UI&lt;/h3>
&lt;h4 id="login-to-faas-cli">Login to &lt;code>faas-cli&lt;/code>&lt;/h4>
&lt;p>We now need to get the OpenFaaS URI to use the &lt;code>faas-cli&lt;/code> client:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="ln">1&lt;/span>&lt;span class="cl">&lt;span class="nb">echo&lt;/span> &lt;span class="nv">$OF_PASS&lt;/span> &lt;span class="p">|&lt;/span> faas-cli login --password-stdin
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;blockquote>
&lt;p>A warning will recommend you to use an HTTPS endpoint instead of the HTTP one: let's ignore it for the moment.&lt;/p>
&lt;/blockquote>
&lt;p>At least, you should get a message like: &amp;quot;credentials saved for admin &lt;code>http://openfaas.vlab.lcl&amp;quot;&lt;/code> meaning that you successfully configured your &lt;code>faas-cli&lt;/code> client.&lt;/p>
&lt;h4 id="login-to-the-ui">Login to the UI&lt;/h4>
&lt;p>Use the same URL to login with the &lt;code>admin&lt;/code> account to the web UI and you should get something like that:&lt;/p>
&lt;figure>&lt;img src="https://vuptime.io/images/veba-first-steps/empty_OpenFaaS_UI.png"/>&lt;figcaption>
&lt;h4>Empty OpenFaaS UI&lt;/h4>
&lt;/figcaption>
&lt;/figure>
&lt;h2 id="veba-deployment-on-kubernetes">VEBA deployment on Kubernetes&lt;/h2>
&lt;p>The VEBA deployment on K8S is quite simple and does not require a lot of configuration.&lt;/p>
&lt;h3 id="prepare-an-override-file">Prepare an override file&lt;/h3>
&lt;p>Prepare an &lt;code>override.yml&lt;/code> file to provide to veba its deployment settings:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="ln">1&lt;/span>&lt;span class="cl">mkdir veba
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">2&lt;/span>&lt;span class="cl">vim veba/override.yml
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="ln"> 1&lt;/span>&lt;span class="cl">&lt;span class="nt">eventrouter&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 2&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">config&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 3&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">logLevel&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">debug&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 4&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">vcenter&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 5&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">address&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">https://vcsa.vlab.lcl&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 6&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">username&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">administrator@vsphere.local&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 7&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">password&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>---------&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 8&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">insecure&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">false&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># ignore TLS certs ?&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 9&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">openfaas&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">10&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">address&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">http://openfaas.vlab.lcl&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">11&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">basicAuth&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">12&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">username&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">admin&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">13&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">password&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>---------&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="deploy-veba-to-your-kubernetes-cluster">Deploy VEBA to your Kubernetes cluster&lt;/h3>
&lt;p>VEBA team provides a &lt;em>helm&lt;/em> chart to handle the deployment:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="ln">1&lt;/span>&lt;span class="cl">helm repo add vmware-veba https://projects.registry.vmware.com/chartrepo/veba
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">2&lt;/span>&lt;span class="cl">helm repo update
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">3&lt;/span>&lt;span class="cl">helm install -n vc-veba --create-namespace vc-veba vmware-veba/event-router -f veba/override.yml
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">4&lt;/span>&lt;span class="cl">kubectl -n vc-veba logs deploy/router -f
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>You should get logs from the startup of the envent router pod.&lt;/p>
&lt;h3 id="check-the-deployment-1">Check the deployment&lt;/h3>
&lt;p>Few minutes later, you should have a new VEBA deployment:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="ln">1&lt;/span>&lt;span class="cl">kubectl -n vc-veba get deployments
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">2&lt;/span>&lt;span class="cl">&lt;span class="c1"># You should get a ready router&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">3&lt;/span>&lt;span class="cl">NAME READY UP-TO-DATE AVAILABLE AGE
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">4&lt;/span>&lt;span class="cl">router 1/1 &lt;span class="m">1&lt;/span> &lt;span class="m">1&lt;/span> 18h
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">5&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">6&lt;/span>&lt;span class="cl">kubectl get pods -n vc-veba
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">7&lt;/span>&lt;span class="cl">&lt;span class="c1"># You should get a running pod&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">8&lt;/span>&lt;span class="cl">NAME READY STATUS RESTARTS AGE
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">9&lt;/span>&lt;span class="cl">vmware-event-router-859b97c894-bxx94 1/1 Running &lt;span class="m">0&lt;/span> 25m
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>This pod, in the &lt;code>vmware&lt;/code> is the &lt;a href="#VMware%20Event%20Router">&lt;em>VMware Event Router&lt;/em>&lt;/a> as explained previously in this post.&lt;/p>
&lt;h2 id="first-function">First function&lt;/h2>
&lt;p>Time to describe our first function use case:&lt;/p>
&lt;p>We have a lab vCenter with multiple users, multiple projects, PoC etc. And it's a bit hard to know which VM belongs to which user, and if the project is still active.&lt;/p>
&lt;p>A way I found to handle this, is to set &lt;em>Custom Attributes&lt;/em> to the VM objects in vCenter, and to populate values when specific event occurs:&lt;/p>
&lt;ul>
&lt;li>&lt;code>event-creation_date&lt;/code>: To store the creation date&lt;/li>
&lt;li>&lt;code>event-last_poweredon&lt;/code>: To store the last powered on date&lt;/li>
&lt;li>&lt;code>event-owner&lt;/code>: To store the user that created the VM&lt;/li>
&lt;/ul>
&lt;figure>&lt;img src="https://vuptime.io/images/veba-first-steps/custom_attributes.png"/>&lt;figcaption>
&lt;h4>Custom attributes created for this function&lt;/h4>
&lt;/figcaption>
&lt;/figure>
&lt;h3 id="function-filesfolders-structure">Function files/folders structure&lt;/h3>
&lt;p>An VEBA OpenFaaS function is made of the following items:&lt;/p>
&lt;ul>
&lt;li>&lt;code>handler/&lt;/code>: this folder will store the content of our function code (folder name can be personalized)&lt;/li>
&lt;li>&lt;code>stack.yaml&lt;/code>: This file will describe our function&lt;/li>
&lt;li>A config file, passed as a K8S secret to our function, used to store credentials and other environment specific variables. In my example, it's a &lt;em>YAML&lt;/em> file: &lt;code>vcconfig.yml&lt;/code>.&lt;/li>
&lt;/ul>
&lt;p>To simplify this post, I invite you to clone this sample repository:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="ln">1&lt;/span>&lt;span class="cl">git clone https://github.com/lrivallain/veba-sample-custom-attribute.git
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">2&lt;/span>&lt;span class="cl">&lt;span class="nb">cd&lt;/span> veba-sample-custom-attribute/
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="stackyaml-file">&lt;code>stack.yaml&lt;/code> file&lt;/h4>
&lt;p>This description file is used by VEBA to create the function run on our function-processor.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="ln"> 1&lt;/span>&lt;span class="cl">&lt;span class="nt">version&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">1.0&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 2&lt;/span>&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">provider&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 3&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">openfaas&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 4&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">gateway&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">http://openfaas.vlab.lcl&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 5&lt;/span>&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">functions&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 6&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">vm-creation-attr&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 7&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">namespace&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">openfaas-fn&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 8&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">lang&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">python3&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 9&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">handler&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">./handler&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">10&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">image&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">lrivallain/veba-vc-vm-creation-attr&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">11&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">environment&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">12&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">write_debug&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">13&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">read_debug&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">14&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">secrets&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">15&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">vcconfig&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">16&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">annotations&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">17&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">topic&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">VmCreatedEvent, VmClonedEvent, VmRegisteredEvent, DrsVmPoweredOnEvent, VmPoweredOnEvent, VmPoweringOnWithCustomizedDVPortEvent&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>As you see, we specify here the:&lt;/p>
&lt;ul>
&lt;li>OpenFaaS URI gateway (the one in &lt;code>OPENFAAS_URL&lt;/code>)&lt;/li>
&lt;li>The target namespace: &lt;code>openfaas-fn&lt;/code>&lt;/li>
&lt;li>A language type: &lt;code>python3&lt;/code>&lt;/li>
&lt;li>The function folder: &lt;code>./handler&lt;/code>&lt;/li>
&lt;li>A base image to run the function: &lt;code>lrivallain/veba-vc-vm-creation-attr&lt;/code>
&lt;ul>
&lt;li>This image contains the appropriate dependencies to run our function&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>The configuration as a K8S &lt;em>secret&lt;/em> name.&lt;/li>
&lt;li>And in the annotations: the topic(s) to subscribe for this function.
&lt;ul>
&lt;li>Depending on your vCenter version, you can find an Event list in the &lt;a href="https://github.com/lamw/vcenter-event-mapping">vcenter-event-mapping&lt;/a> repository of William Lam.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h4 id="handler-folder">&lt;code>handler/&lt;/code> folder&lt;/h4>
&lt;p>The handler folder is made of:&lt;/p>
&lt;ul>
&lt;li>An &lt;code>index.py&lt;/code> file, use to handle the function instantiation: keep it like it is provided to start: of course, you can inspect the content to analyse the (simple) behaviour.&lt;/li>
&lt;li>A &lt;code>function/&lt;/code> subfolder:
&lt;ul>
&lt;li>The &lt;code>handler.py&lt;/code> file contains the code run each time the function is triggered&lt;/li>
&lt;li>The &lt;code>requirements.txt&lt;/code> file contains some function specific dependencies.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>The &lt;code>Dockerfile&lt;/code> used to build the base image: &lt;code>lrivallain/veba-vc-vm-creation-attr&lt;/code>: &lt;figure>&lt;img src="https://img.shields.io/docker/cloud/build/lrivallain/veba-vc-vm-creation-attr"/>&lt;figcaption>
&lt;h4>Docker Cloud Build Status&lt;/h4>
&lt;/figcaption>
&lt;/figure>
&lt;/li>
&lt;/ul>
&lt;h3 id="vcconfigyaml">&lt;code>vcconfig.yaml&lt;/code>&lt;/h3>
&lt;p>This is a quite simple configuration file to rename to the expected name:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="ln">1&lt;/span>&lt;span class="cl">cp vcconfig.example.yaml vcconfig.yaml
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="ln"> 1&lt;/span>&lt;span class="cl">&lt;span class="nt">vcenter&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 2&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">server&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">vcsa-fqdn&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 3&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">user&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">service-account@vsphere.local&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 4&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">password&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;**********&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 5&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">ssl_verify&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">false&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 6&lt;/span>&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 7&lt;/span>&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">attributes&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 8&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">owner&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">event-owner&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 9&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">creation_date&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">event-creation_date&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">10&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">last_poweredon&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">event-last_poweredon&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>You need to setup your VCSA instance, credentials and the name of custom attributes to use for each need.&lt;/p>
&lt;h4 id="custom-attributes-creation">Custom attributes creation&lt;/h4>
&lt;p>The script currently does not handle the custom attribute creation so you need to create them before using the function:&lt;/p>
&lt;figure>&lt;img src="https://vuptime.io/images/veba-first-steps/custom_attributes.png"/>&lt;figcaption>
&lt;h4>Custom attributes&lt;/h4>
&lt;/figcaption>
&lt;/figure>
&lt;h2 id="deploy-our-function">Deploy our function&lt;/h2>
&lt;p>We now got function code, configuration, and the VEBA over K8S deployed. Let's deploy our function.&lt;/p>
&lt;p>First step is to create the &amp;quot;&lt;em>secret&lt;/em>&amp;quot; to store our local configuration:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="ln">1&lt;/span>&lt;span class="cl">faas-cli secret create vcconfig --from-file&lt;span class="o">=&lt;/span>vcconfig.yml
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>And to confirm if it worked, we can lookup for the &lt;code>vcconfig&lt;/code> secret in a new namespace named: &lt;code>openfaas-fn&lt;/code> (for OpenFaaS Function)&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="ln">1&lt;/span>&lt;span class="cl">kubectl get secrets -n openfaas-fn vcconfig
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">2&lt;/span>&lt;span class="cl">&lt;span class="c1"># Output:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">3&lt;/span>&lt;span class="cl">NAME TYPE DATA AGE
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">4&lt;/span>&lt;span class="cl">vcconfig Opaque &lt;span class="m">1&lt;/span> 2m53s
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Now we need to pull the OpenFaaS language template for the specified &lt;code>lang&lt;/code> in our &lt;code>stack.yml&lt;/code> file:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="ln">1&lt;/span>&lt;span class="cl">faas template store pull python3
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;blockquote>
&lt;p>In fact, this command will pull all (12) the languages templates from the &lt;code>openfaas&lt;/code> registry, not only the one you are looking for.&lt;/p>
&lt;/blockquote>
&lt;p>We are ready to deploy our &lt;em>Function-as-a-Service&lt;/em>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="ln">1&lt;/span>&lt;span class="cl">faas-cli deploy -f stack.yml
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">2&lt;/span>&lt;span class="cl">&lt;span class="c1"># Output&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">3&lt;/span>&lt;span class="cl">Deploying: vm-creation-attr.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">4&lt;/span>&lt;span class="cl">Deployed. &lt;span class="m">202&lt;/span> Accepted.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">5&lt;/span>&lt;span class="cl">URL: http://openfaas.vlab.lcl/function/vm-creation-attr.openfaas-fn
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>We can check that a new pod is now part of the &lt;code>openfaas-fn&lt;/code> namespace:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="ln">1&lt;/span>&lt;span class="cl">$ kubectl get pods -n openfaas-fn
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">2&lt;/span>&lt;span class="cl">&lt;span class="c1"># Output:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">3&lt;/span>&lt;span class="cl">NAME READY STATUS RESTARTS AGE
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">4&lt;/span>&lt;span class="cl">vm-creation-attr-65d9f75464-lf2sk 1/1 Running &lt;span class="m">0&lt;/span> 94s
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>And our function is well listed in &lt;code>faas-cli&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="ln">1&lt;/span>&lt;span class="cl">faas-cli list
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">2&lt;/span>&lt;span class="cl">&lt;span class="c1"># Output:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">3&lt;/span>&lt;span class="cl">Function Invocations Replicas
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">4&lt;/span>&lt;span class="cl">vm-creation-attr &lt;span class="m">0&lt;/span> &lt;span class="m">1&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>The same in UI (need a refresh):&lt;/p>
&lt;figure>&lt;img src="https://vuptime.io/images/veba-first-steps/first-function-ready-UI.png"/>&lt;figcaption>
&lt;h4>First Function deployed in the OpenFaaS UI&lt;/h4>
&lt;/figcaption>
&lt;/figure>
&lt;h2 id="invoke-function">Invoke function&lt;/h2>
&lt;p>Invocation is now easy: juste create or power-on a VM in your vCenter and the event will be catched by VEBA, forwared to your OpenFaaS function and the code will run, inspecting the &lt;code>cloudevents&lt;/code> incoming data and doint the expected tasks.&lt;/p>
&lt;h3 id="follow-function-invocation">Follow function invocation&lt;/h3>
&lt;p>There is two way to follow the function invocation(s).&lt;/p>
&lt;p>By using &lt;code>kubectl&lt;/code> logs and specifing the &lt;code>openfaas-fn&lt;/code> namespace, the pod name (from above commands), and the &lt;code>--tail&lt;/code> and/or &lt;code>--follow&lt;/code> args:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="ln">1&lt;/span>&lt;span class="cl">kubectl logs -n openfaas-fn vm-creation-attr-65d9f75464-lf2sk --tail &lt;span class="m">100&lt;/span> --follow
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">2&lt;/span>&lt;span class="cl">&lt;span class="c1"># Output:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">3&lt;/span>&lt;span class="cl">2020/11/01 14:41:26 Version: 0.18.1 SHA: b46be5a4d9d9d55da9c4b1e50d86346e0afccf2d
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">4&lt;/span>&lt;span class="cl">2020/11/01 14:41:26 Timeouts: read: 5s, write: 5s hard: 0s.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">5&lt;/span>&lt;span class="cl">2020/11/01 14:41:26 Listening on port: &lt;span class="m">8080&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">6&lt;/span>&lt;span class="cl">2020/11/01 14:41:26 Writing lock-file to: /tmp/.lock
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">7&lt;/span>&lt;span class="cl">2020/11/01 14:41:26 Metrics listening on port: &lt;span class="m">8081&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Or with &lt;code>faas-cli&lt;/code> command:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="ln">1&lt;/span>&lt;span class="cl">faas-cli logs vm-creation-attr --tail &lt;span class="m">100&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">2&lt;/span>&lt;span class="cl">&lt;span class="c1"># Output:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">3&lt;/span>&lt;span class="cl">2020-11-01T14:41:26Z 2020/11/01 14:41:26 Version: 0.18.1 SHA: b46be5a4d9d9d55da9c4b1e50d86346e0afccf2d
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">4&lt;/span>&lt;span class="cl">2020-11-01T14:41:26Z 2020/11/01 14:41:26 Timeouts: read: 5s, write: 5s hard: 0s.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">5&lt;/span>&lt;span class="cl">2020-11-01T14:41:26Z 2020/11/01 14:41:26 Listening on port: &lt;span class="m">8080&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">6&lt;/span>&lt;span class="cl">2020-11-01T14:41:26Z 2020/11/01 14:41:26 Writing lock-file to: /tmp/.lock
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">7&lt;/span>&lt;span class="cl">2020-11-01T14:41:26Z 2020/11/01 14:41:26 Metrics listening on port: &lt;span class="m">8081&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Both outputs are very similar, so you can use the one that is the more convenient to you.&lt;/p>
&lt;h4 id="vm-creation">VM creation&lt;/h4>
&lt;p>In the case of a VM creation, we have the following output:&lt;/p>
&lt;figure>&lt;img src="https://vuptime.io/images/veba-first-steps/logs-vm-creation.png"/>&lt;figcaption>
&lt;h4>Logs for the VM creation event&lt;/h4>
&lt;/figcaption>
&lt;/figure>
&lt;p>And the attributes are populated according to the expected behavior:&lt;/p>
&lt;figure>&lt;img src="https://vuptime.io/images/veba-first-steps/attributes-vm-creation.png"/>&lt;figcaption>
&lt;h4>Attributes for the VM creation event&lt;/h4>
&lt;/figcaption>
&lt;/figure>
&lt;h4 id="vm-powered-on">VM powered-On&lt;/h4>
&lt;p>If we power On a VM:&lt;/p>
&lt;figure>&lt;img src="https://vuptime.io/images/veba-first-steps/logs-vm-poweredon.png"/>&lt;figcaption>
&lt;h4>Logs for the VM poweredOn event&lt;/h4>
&lt;/figcaption>
&lt;/figure>
&lt;p>And the attributes are populated according to the expected behavior:&lt;/p>
&lt;figure>&lt;img src="https://vuptime.io/images/veba-first-steps/attributes-vm-poweredon.png"/>&lt;figcaption>
&lt;h4>Attributes for the VM poweredOn event&lt;/h4>
&lt;/figcaption>
&lt;/figure>
&lt;h2 id="conclusion">Conclusion&lt;/h2>
&lt;p>We successfully covered the deployment of our first &lt;em>Event-Driven&lt;/em> &lt;em>Function-as-a-Service&lt;/em> use-case, greatly helped by the &lt;strong>VMware Event Broker&lt;/strong> services.&lt;/p>
&lt;p>There is a &lt;a href="https://github.com/lamw/vcenter-event-mapping">multitude of events&lt;/a> you can subscribe in your VMware virtual datacenter to imagine an infinity list of use cases: it is time to unlock your creativity!&lt;/p></description></item><item><title>Use VMware Container Service Extension with a corporate proxy</title><link>https://vuptime.io/post/2020-11-26-vmware-container-service-extension-with-a-proxy/</link><pubDate>Thu, 26 Nov 2020 00:00:00 +0000</pubDate><guid>https://vuptime.io/2020/11/26/vmware-container-service-extension-with-a-proxy/</guid><description>
&lt;p>The current post is a quickstart to VMware open-source project Container Service Extension (CSE), a Kubernetes as a Service for VMware vCloud Director.&lt;/p>
&lt;p>The project is already well documented (&lt;a href="https://vmware.github.io/container-service-extension/">CSE documentation&lt;/a>) and you should not have any trouble to set it up by following the installation steps.&lt;/p>
&lt;p>Except... if you plan to use it behind a corporate proxy to access to Internet. The goal of this post is to be a reminder to me for this kind of setup.&lt;/p>
&lt;h2 id="cse-server-appliance">CSE server appliance&lt;/h2>
&lt;p>The first step to setup CSE is to prepare an appliance that will host the CSE server component. In my case, I used a freshly deployed Ubuntu 20.04 LTS server, deployed from the ubuntu cloud images repository: &lt;a href="https://cloud-images.ubuntu.com/focal/current/focal-server-cloudimg-amd64.ova">https://cloud-images.ubuntu.com/focal/current/focal-server-cloudimg-amd64.ova&lt;/a>&lt;/p>
&lt;p>Once the appliance is up and running, I setup the proxy information:&lt;/p>
&lt;p>&lt;code>W.X.Y.Z&lt;/code> is the IP address of my HTTP based proxy.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="ln">1&lt;/span>&lt;span class="cl">&lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;HTTP_PROXY=W.X.Y.Z:3128
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">2&lt;/span>&lt;span class="cl">&lt;span class="s2">HTTPS_PROXY=W.X.Y.Z:3128
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">3&lt;/span>&lt;span class="cl">&lt;span class="s2">NO_PROXY=.vlab.lcl,192.168.0.0/16,127.0.0.1,localhost&amp;#34;&lt;/span> &lt;span class="p">|&lt;/span> sudo tee -a /etc/environment &amp;gt;/dev/null
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">4&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">5&lt;/span>&lt;span class="cl">&lt;span class="nb">export&lt;/span> &lt;span class="nv">HTTP_PROXY&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;W.X.Y.Z:3128&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">6&lt;/span>&lt;span class="cl">&lt;span class="nb">export&lt;/span> &lt;span class="nv">HTTPS_PROXY&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;W.X.Y.Z:3128&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">7&lt;/span>&lt;span class="cl">&lt;span class="nb">export&lt;/span> &lt;span class="nv">NO_PROXY&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;.vlab.lcl,192.168.0.0/16,127.0.0.1,localhost&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">8&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">9&lt;/span>&lt;span class="cl">&lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;Acquire::http::proxy \&amp;#34;http://W.X.Y.Z:3128\&amp;#34;;&amp;#34;&lt;/span> &lt;span class="p">|&lt;/span> sudo tee -a /etc/apt/apt.conf &amp;gt;/dev/null
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>A quick test:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="ln">1&lt;/span>&lt;span class="cl">curl https://google.com
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">2&lt;/span>&lt;span class="cl">&amp;lt;HTML&amp;gt;&amp;lt;HEAD&amp;gt;&amp;lt;meta http-equiv&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;content-type&amp;#34;&lt;/span> &lt;span class="nv">content&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;text/html;charset=utf-8&amp;#34;&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">3&lt;/span>&lt;span class="cl">&amp;lt;TITLE&amp;gt;301 Moved&amp;lt;/TITLE&amp;gt;&amp;lt;/HEAD&amp;gt;&amp;lt;BODY&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">4&lt;/span>&lt;span class="cl">&amp;lt;H1&amp;gt;301 Moved&amp;lt;/H1&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">5&lt;/span>&lt;span class="cl">The document has moved
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">6&lt;/span>&lt;span class="cl">&amp;lt;A &lt;span class="nv">HREF&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;https://www.google.com/&amp;#34;&lt;/span>&amp;gt;here&amp;lt;/A&amp;gt;.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">7&lt;/span>&lt;span class="cl">&amp;lt;/BODY&amp;gt;&amp;lt;/HTML&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>It works.&lt;/p>
&lt;h3 id="cse-server-components">CSE server components&lt;/h3>
&lt;p>Let's install software components required for CSE:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="ln">1&lt;/span>&lt;span class="cl">&lt;span class="c1"># vcd-cli + CSE&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">2&lt;/span>&lt;span class="cl">sudo apt-get install python3-pip gcc -y
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">3&lt;/span>&lt;span class="cl">sudo pip3 install vcd-cli
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">4&lt;/span>&lt;span class="cl">sudo pip3 install container-service-extension&lt;span class="o">==&lt;/span>2.6.1
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Yep, still using CSE 2.6 for backwards compatibility.&lt;/p>
&lt;p>Next, we install &lt;code>kubectl&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="ln">1&lt;/span>&lt;span class="cl">&lt;span class="c1"># kubectl&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">2&lt;/span>&lt;span class="cl">curl -LO &lt;span class="s2">&amp;#34;https://storage.googleapis.com/kubernetes-release/release/&lt;/span>&lt;span class="k">$(&lt;/span>curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt&lt;span class="k">)&lt;/span>&lt;span class="s2">/bin/linux/amd64/kubectl&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">3&lt;/span>&lt;span class="cl">chmod +x ./kubectl
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">4&lt;/span>&lt;span class="cl">sudo mv ./kubectl /usr/local/bin/kubectl
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">5&lt;/span>&lt;span class="cl">&lt;span class="c1"># Test it:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">6&lt;/span>&lt;span class="cl">kubectl version --client
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="vcd-cli-integration">&lt;code>vcd&lt;/code> CLI integration&lt;/h3>
&lt;p>Quick method to integrate the &lt;code>cse&lt;/code> CLI to the &lt;code>vcd&lt;/code> CLI:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="ln">1&lt;/span>&lt;span class="cl">mkdir -p ~/.vcd-cli/
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">2&lt;/span>&lt;span class="cl">&lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;extensions:
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">3&lt;/span>&lt;span class="cl">&lt;span class="s2">- container_service_extension.client.cse&amp;#34;&lt;/span> &amp;gt;&amp;gt; ~/.vcd-cli/profiles.yaml
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">4&lt;/span>&lt;span class="cl">&lt;span class="c1"># Test it:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">5&lt;/span>&lt;span class="cl">vcd cse version
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="authentication-key-pairs">Authentication key pairs&lt;/h3>
&lt;p>If needed, create a SSH key pair to be used from this appliance, to the K8S nodes for maintenance:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="ln">1&lt;/span>&lt;span class="cl">ssh-keygen
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="cse-configuration">CSE configuration&lt;/h2>
&lt;p>Once our appliance is ready to host CSE server, we can configure it:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="ln">1&lt;/span>&lt;span class="cl">mkdir ~/.cse
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">2&lt;/span>&lt;span class="cl">cse sample -o ~/.cse/decrypted-config.yaml
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>This command will create a &lt;code>~/.cse/decrypted-config.yaml&lt;/code> file to configure according to the &lt;a href="https://vmware.github.io/container-service-extension/cse2_6/CSE_CONFIG.html">reference documentation&lt;/a>.&lt;/p>
&lt;p>To ease the testing, I made a &lt;em>fork&lt;/em> of the &lt;a href="https://github.com/vmware/container-service-extension-templates">official templates repository&lt;/a> to my GitHub workspace with &lt;a href="https://github.com/lrivallain/container-service-extension-templates">only one ubuntu based template&lt;/a>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="ln"> 1&lt;/span>&lt;span class="cl">&lt;span class="nt">templates&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 2&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">compute_policy&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 3&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">cpu&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">2&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 4&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">deprecated&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">false&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 5&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">description&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;Ubuntu 16.04, Docker-ce 19.03.12, Kubernetes 1.18.6, weave 2.6.5&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 6&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">mem&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">2048&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 7&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">ubuntu-16.04_k8-1.18_weave-2.6.5&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 8&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">revision&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">1&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 9&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">kind&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">native&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">10&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">sha256_ova&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">3c1bec8e2770af5b9b0462e20b7b24633666feedff43c099a6fb1330fcc869a9&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">11&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">source_ova&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;https://cloud-images.ubuntu.com/releases/xenial/release-20180418/ubuntu-16.04-server-cloudimg-amd64.ova&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">12&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">source_ova_name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">ubuntu-16.04-server-cloudimg-amd64.ova&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">13&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">os&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;ubuntu-16.04&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">14&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">docker_version&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;19.03.12&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">15&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">kubernetes&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;upstream&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">16&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">kubernetes_version&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;1.18.6&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">17&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">cni&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;weave&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">18&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">cni_version&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;2.6.5&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">19&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">upgrade_from&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">20&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="s2">&amp;#34;ubuntu-16.04_k8-1.17_weave-2.6.0&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">21&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="s2">&amp;#34;ubuntu-16.04_k8-1.18_weave-2.6.5&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Now we encrypt the file:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="ln">1&lt;/span>&lt;span class="cl">cse encrypt ~/.cse/decrypted-config.yaml --output ~/.cse/config.yaml
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">2&lt;/span>&lt;span class="cl">chmod &lt;span class="m">600&lt;/span> config.yaml
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">3&lt;/span>&lt;span class="cl">rm ~/.cse/decrypted-config.yaml &lt;span class="c1"># otherwise it will be useless to encrypt it&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>If you need to decrypt it (for example to edit the content):&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="ln">1&lt;/span>&lt;span class="cl">cse decrypt ~/.cse/config.yaml --output ~/.cse/decrypted-config.yaml
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Then you can run the install process...&lt;/p>
&lt;blockquote>
&lt;p>&lt;strong>!!!BUT!!!&lt;/strong> We will kill it when the process will download the OVA file(s) in order to hack the content of customization scripts:&lt;/p>
&lt;/blockquote>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="ln">1&lt;/span>&lt;span class="cl">cse install -c ~/.cse/config.yaml --ssh-key ~/.ssh/id_rsa.pub
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">2&lt;/span>&lt;span class="cl">&lt;span class="c1"># !! cut the execution when the OVA is downloading !! CTRL+C&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>When the script is stopped, it is possible to edit the content of customization scripts to insert the proxy settings. In my case:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="ln">1&lt;/span>&lt;span class="cl">vi ~/.cse_scripts/ubuntu-16.04_k8-1.18_weave-2.6.5_rev1/cust.sh
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>I added the following lines at the beginning of the file, just after the line &lt;code>set -e&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="ln"> 1&lt;/span>&lt;span class="cl">&lt;span class="c1"># proxy setup&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 2&lt;/span>&lt;span class="cl">&lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;HTTP_PROXY=W.X.Y.Z:3128
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 3&lt;/span>&lt;span class="cl">&lt;span class="s2">HTTPS_PROXY=W.X.Y.Z:3128
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 4&lt;/span>&lt;span class="cl">&lt;span class="s2">NO_PROXY=.vlab.lcl,192.168.0.0/16,127.0.0.1,localhost&amp;#34;&lt;/span> &amp;gt;&amp;gt; /etc/environment
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 5&lt;/span>&lt;span class="cl">&lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;Acquire::http::proxy \&amp;#34;http://W.X.Y.Z:3128\&amp;#34;;&amp;#34;&lt;/span> &amp;gt;&amp;gt; /etc/apt/apt.conf
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 6&lt;/span>&lt;span class="cl">&lt;span class="nb">export&lt;/span> &lt;span class="nv">HTTP_PROXY&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;W.X.Y.Z:3128&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 7&lt;/span>&lt;span class="cl">&lt;span class="nb">export&lt;/span> &lt;span class="nv">HTTPS_PROXY&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;W.X.Y.Z:3128&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 8&lt;/span>&lt;span class="cl">&lt;span class="nb">export&lt;/span> &lt;span class="nv">NO_PROXY&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;.vlab.lcl,192.168.0.0/16,127.0.0.1,localhost&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 9&lt;/span>&lt;span class="cl">&lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;[Service]
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">10&lt;/span>&lt;span class="cl">&lt;span class="s2">Environment=\&amp;#34;HTTP_PROXY=http://W.X.Y.Z:3128\&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">11&lt;/span>&lt;span class="cl">&lt;span class="s2">Environment=\&amp;#34;HTTPS_PROXY=http://W.X.Y.Z:3128\&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">12&lt;/span>&lt;span class="cl">&lt;span class="s2">Environment=\&amp;#34;NO_PROXY=.vlab.lcl,192.168.0.0/16,127.0.0.1,localhost\&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">13&lt;/span>&lt;span class="cl">&lt;span class="s2">&amp;#34;&lt;/span> &amp;gt;&amp;gt; /etc/systemd/system/docker.service.d/override.conf
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Save+quit etc. And we re-run the CSE initialisation command:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="ln">1&lt;/span>&lt;span class="cl">cse install -c ~/.cse/config.yaml --ssh-key ~/.ssh/id_rsa.pub
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>And your template will now being built using the HTTP proxy you specified. After the template preparation, the template is added to the available ones:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="ln">1&lt;/span>&lt;span class="cl">cse template list -c ~/.cse/config.yaml
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">2&lt;/span>&lt;span class="cl">Password &lt;span class="k">for&lt;/span> config file decryption:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">3&lt;/span>&lt;span class="cl">Decrypting &lt;span class="s1">&amp;#39;config.yaml&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">4&lt;/span>&lt;span class="cl">name revision compute_policy &lt;span class="nb">local&lt;/span> remote
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">5&lt;/span>&lt;span class="cl">-------------------------------- ---------- ---------------- ------- --------
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">6&lt;/span>&lt;span class="cl">ubuntu-16.04_k8-1.18_weave-2.6.5 &lt;span class="m">1&lt;/span> Yes Yes
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;blockquote>
&lt;p>&lt;em>(I removed some columns to ease the post reading)&lt;/em>&lt;/p>
&lt;/blockquote>
&lt;h3 id="patching-pika-for-python-38">Patching Pika for Python 3.8&lt;/h3>
&lt;p>In the next steps, if you use Python version 3.8 (you can check it by running &lt;code> python3 -V&lt;/code> command), you may have an issue with an error message like:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="ln">1&lt;/span>&lt;span class="cl">vcd cse template list
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">2&lt;/span>&lt;span class="cl">Usage: vcd cse template list &lt;span class="o">[&lt;/span>OPTIONS&lt;span class="o">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">3&lt;/span>&lt;span class="cl">Try &lt;span class="s2">&amp;#34;vcd cse template list -h&amp;#34;&lt;/span> &lt;span class="k">for&lt;/span> help.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">4&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">5&lt;/span>&lt;span class="cl">Error: maximum recursion depth exceeded
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>You can patch the Pika library by applying a patch made from this &lt;a href="https://github.com/pika/pika/pull/1254">Pull request from @lukebakken&lt;/a>.&lt;/p>
&lt;p>Two choices:&lt;/p>
&lt;ol>
&lt;li>Download manually this &lt;a href="https://gist.github.com/lrivallain/be77cd8ffd731649705ae7b1e139d8d3#file-pika-1254-patch">patch file&lt;/a> and run &lt;code>patch&lt;/code> command:&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="ln">1&lt;/span>&lt;span class="cl">sudo patch /usr/local/lib/python3.8/dist-packages/pika/compat.py &amp;lt; pika-1254.patch
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="2">
&lt;li>All in one command (you should check the content of a downloaded file before applying it to you environment):&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="ln">1&lt;/span>&lt;span class="cl">curl -s &lt;span class="s1">&amp;#39;https://gist.githubusercontent.com/lrivallain/be77cd8ffd731649705ae7b1e139d8d3/raw/d35069fab35f179dd1a76f29607367424d87314a/pika-1254.patch&amp;#39;&lt;/span> &lt;span class="p">|&lt;/span> sudo patch /usr/local/lib/python3.8/dist-packages/pika/compat.py
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="tests">Tests&lt;/h3>
&lt;p>The following command will run the CSE server services in foreground mode&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="ln">1&lt;/span>&lt;span class="cl">cse run -c ~/.cse/config.yaml
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>After a series of checks, the process should display a message like:&lt;/p>
&lt;blockquote>
&lt;p>&lt;code>waiting for requests (ctrl+c to close)&lt;/code>&lt;/p>
&lt;/blockquote>
&lt;p>You can test it by running the following commands from another terminal instance:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="ln">1&lt;/span>&lt;span class="cl">vcd login vcd.vlab.lcl &amp;lt;org&amp;gt; &amp;lt;username&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">2&lt;/span>&lt;span class="cl">vcd cse template list
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>And you should get a list of templates ready for deployment:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="ln">1&lt;/span>&lt;span class="cl">name revision is_default catalog
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">2&lt;/span>&lt;span class="cl">-------------------------------- ---------- ------------ ---------
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">3&lt;/span>&lt;span class="cl">ubuntu-16.04_k8-1.18_weave-2.6.5 &lt;span class="m">1&lt;/span> Yes cse
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;blockquote>
&lt;p>&lt;em>(I removed some columns to ease the post reading)&lt;/em>&lt;/p>
&lt;/blockquote>
&lt;h3 id="finalize-installation">Finalize installation&lt;/h3>
&lt;p>Using the CSE server in foreground mode is not the easiest way for day-to-day operations, so we will enable it as a system service:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="ln">1&lt;/span>&lt;span class="cl">&lt;span class="c1"># get the service files from the CSE repository&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">2&lt;/span>&lt;span class="cl">curl -L https://github.com/vmware/container-service-extension/raw/2.6.1_ga/cse.service &amp;gt; ~/.cse/cse.service
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">3&lt;/span>&lt;span class="cl">curl -L https://github.com/vmware/container-service-extension/raw/2.6.1_ga/cse.sh &amp;gt; ~/.cse/cse.sh
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">4&lt;/span>&lt;span class="cl">chmod +x ~/.cse/cse.sh
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Edit the &lt;code>CSE_CONFIG_PATH&lt;/code> value of &lt;code>~/.cse/cse.sh&lt;/code> according to the path where is stored your configuration file. For my setup:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="ln">1&lt;/span>&lt;span class="cl">&lt;span class="nv">CSE_CONFIG_PATH&lt;/span>&lt;span class="o">=&lt;/span>/home/ubuntu/.cse/config.yaml
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Edit the &lt;code>ExecStart&lt;/code>, &lt;code>User&lt;/code>, &lt;code>WorkingDirectory&lt;/code> value of &lt;code>~/.cse/cse.service&lt;/code> according to your environment. I also add an &lt;code>Environment&lt;/code> statement to store the password of the configuration file and my proxy settings.&lt;/p>
&lt;p>For my setup:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-ini" data-lang="ini">&lt;span class="line">&lt;span class="ln"> 1&lt;/span>&lt;span class="cl">&lt;span class="k">[Unit]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 2&lt;/span>&lt;span class="cl">&lt;span class="na">Description&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">Container Service Extension for VMware vCloud Director&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 3&lt;/span>&lt;span class="cl">&lt;span class="na">Wants&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">network-online.target&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 4&lt;/span>&lt;span class="cl">&lt;span class="na">After&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">network-online.target&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 5&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 6&lt;/span>&lt;span class="cl">&lt;span class="k">[Service]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 7&lt;/span>&lt;span class="cl">&lt;span class="na">ExecStart&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">/home/ubuntu/.cse/cse.sh&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 8&lt;/span>&lt;span class="cl">&lt;span class="na">User&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">ubuntu&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 9&lt;/span>&lt;span class="cl">&lt;span class="na">WorkingDirectory&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">/home/ubuntu/.cse/&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">10&lt;/span>&lt;span class="cl">&lt;span class="na">Type&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">simple&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">11&lt;/span>&lt;span class="cl">&lt;span class="na">Restart&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">always&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">12&lt;/span>&lt;span class="cl">&lt;span class="na">Environment&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">CSE_CONFIG_PASSWORD=&amp;#34;VMware1!&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">13&lt;/span>&lt;span class="cl">&lt;span class="na">Environment&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">HTTP_PROXY=&amp;#34;W.X.Y.Z:3128&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">14&lt;/span>&lt;span class="cl">&lt;span class="na">Environment&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">HTTPS_PROXY=&amp;#34;W.X.Y.Z:3128&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">15&lt;/span>&lt;span class="cl">&lt;span class="na">Environment&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">NO_PROXY=&amp;#34;.vlab.lcl,192.168.0.0/16,127.0.0.1,localhost&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">16&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">17&lt;/span>&lt;span class="cl">&lt;span class="k">[Install]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">18&lt;/span>&lt;span class="cl">&lt;span class="na">WantedBy&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">default.target&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Then you can enable, start and check this new service:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="ln">1&lt;/span>&lt;span class="cl">sudo cp .cse/cse.service /etc/systemd/system/
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">2&lt;/span>&lt;span class="cl">sudo systemctl &lt;span class="nb">enable&lt;/span> cse
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">3&lt;/span>&lt;span class="cl">sudo systemctl start cse
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">4&lt;/span>&lt;span class="cl">sudo systemctl status cse
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="conclusion">Conclusion&lt;/h2>
&lt;p>You now have a fully working CSE appliance, running behind a corporate proxy and you can use it from any location with an access to the vCD instance.&lt;/p>
&lt;p>You can find more details on the way to create/manage CSE K8S clusters in the &lt;a href="https://vmware.github.io/container-service-extension/cse2_6/CLUSTER_MANAGEMENT.html">CSE documentation&lt;/a>.&lt;/p>
&lt;p>Of course, if you can afford to store a fork of the &lt;a href="https://github.com/vmware/container-service-extension-templates">official templates repository&lt;/a> with your proxy informations and your customisations, it could ease the deployment of new templates when needed: for example by setting up a &lt;em>private&lt;/em> or &lt;em>internal&lt;/em> git repository.&lt;/p></description></item><item><title>VMware Event Broker (aka VEBA) on Kubernetes – First steps</title><link>https://vuptime.io/post/2020-11-02-vmware-event-broker-on-k8s-first-steps/</link><pubDate>Mon, 02 Nov 2020 00:00:00 +0000</pubDate><guid>https://vuptime.io/2020/11/02/vmware-event-broker-on-k8s-first-steps/</guid><description>
&lt;blockquote>
&lt;p>&lt;strong>Warning&lt;/strong>: Since the publication of VEBA 0.5.0, the development team provides a &lt;code>helm&lt;/code> chart deployment method. According to this, I made a re-edition of this post to provide a new setup workflow: &lt;a href="https://vuptime.io/2020/12/17/vmware-event-broker-0.5.0-on-k8s-first-steps/">VMware Event Broker 0.5.0 (aka VEBA) on Kubernetes – First steps&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;p>In the following post, we will discover how to deploy the VMware Event Broker services (VEBA) within an existing Kubernetes (K8S) cluster and use it to add/edit custom attributes information to virtual machines.&lt;/p>
&lt;p>The goal of the VEBA deployment is to be able to listen for events in the VMware vCenter infrastructure and to run specific tasks when filtered events occurs: it is the &lt;a href="https://octo.vmware.com/vsphere-power-event-driven-automation/">&lt;em>event driven automation&lt;/em>&lt;/a> concept.&lt;/p>
&lt;p>To be accurate, VEBA stands for &lt;strong>&amp;quot;VMware Event Broker Appliance&amp;quot;&lt;/strong>: a Photon OS based virtual machine, available in OVA format, with an embedded small K8S cluster to support the &lt;strong>&amp;quot;VMware Event Broker&amp;quot;&lt;/strong> services.
In the following post, I re-use an existing K8S cluster to support the &amp;quot;VMware Event Broker&amp;quot; services but I will use the VEBA acronym to simplify the redaction: even if I do not use the appliance deployment method.&lt;/p>
&lt;p>If you need more details about VEB(A), the official website if well documented: &lt;a href="https://vmweventbroker.io/">vmweventbroker.io&lt;/a> and lot of other use-cases are listed: notification, automation, integration, remediation, audit, analytics…&lt;/p>
&lt;h2 id="vmware-event-broker-components">VMware Event Broker components&lt;/h2>
&lt;figure>&lt;img src="https://vuptime.io/images/veba-first-steps/veba-architecture.png"/>&lt;figcaption>
&lt;h4>VEBA Architecture&lt;/h4>
&lt;/figcaption>
&lt;/figure>
&lt;h3 id="vmware-event-router">VMware Event Router&lt;/h3>
&lt;p>The &lt;em>VMware Event Router&lt;/em>, is the VEBA component, watching for new events generated by an &lt;em>Event Stream Source&lt;/em> and routing the event to the &lt;strong>Event Stream Processors&lt;/strong>. In the mean time, the &lt;em>VER&lt;/em> translate the events to the &lt;a href="https://cloudevents.io">&lt;em>cloudevents&lt;/em>&lt;/a> format: a specification for describing event data in a common way.&lt;/p>
&lt;h3 id="event-stream-source">Event Stream Source&lt;/h3>
&lt;p>Currently, the VEBA only support one source for event stream: the vCenter Server.&lt;/p>
&lt;p>As announced at VMworld2020 (&lt;strong>VEBA and the Power of Event-Driven Automation – Reloaded [HCP1358]&lt;/strong>), a Cloud Director &lt;em>event stream source&lt;/em> is in preparation.&lt;/p>
&lt;h3 id="event-stream-processors">Event Stream Processors&lt;/h3>
&lt;p>The &lt;em>Event Stream Processor&lt;/em> is in charge of handling the event propagated by the &lt;em>VMware Event Router&lt;/em> to the appropriate automation tasks that are configured to run for the specific type of event.&lt;/p>
&lt;p>As the time I write this post, 2 processors are available:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://aws.amazon.com/eventbridge/">Amazon EventBridge&lt;/a>: to run on AWS &lt;em>serverless&lt;/em> event services, your automation tasks.&lt;/li>
&lt;li>&lt;a href="https://www.openfaas.com/">OpenFaaS®&lt;/a>: An open-source project to run &lt;em>Function as a Service&lt;/em> (FaaS) automation task over a K8S deployment.&lt;/li>
&lt;/ul>
&lt;p>In my setup, I use the OpenFaaS processor.&lt;/p>
&lt;h2 id="pre-requisites">Pre-requisites&lt;/h2>
&lt;h3 id="kubernetes">Kubernetes&lt;/h3>
&lt;p>To proceed, we consider that an existing cluster is deployed.&lt;/p>
&lt;p>If you need to deploy a really light and simple lab setup, I can highly recommend to use &lt;code>k3s&lt;/code> to deploy your own K8S cluster: &lt;a href="https://rancher.com/docs/k3s/latest/en/quick-start/">K3S: Quick-Start Guide&lt;/a>.&lt;/p>
&lt;p>In my own lab, I use a K8S cluster deployed by &lt;a href="https://rancher.com/">Rancher&lt;/a> with the vSphere node driver (but that doesn't change anything to the current use-case).&lt;/p>
&lt;h3 id="kubectl-cli">&lt;code>kubectl&lt;/code> cli&lt;/h3>
&lt;p>&lt;a href="https://kubernetes.io/docs/tasks/tools/install-kubectl/">&lt;code>kubectl&lt;/code>&lt;/a> is the standard CLI tool to operate K8S resources.&lt;/p>
&lt;p>Once installed, you need to link your K8S cluster configuration file. There are multiple methods to do so, so I prefer to link the official documentation for &lt;a href="https://kubernetes.io/docs/concepts/configuration/organize-cluster-access-kubeconfig/">Organizing Cluster Access Using kubeconfig Files&lt;/a>.&lt;/p>
&lt;p>You can check the setup by running:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="ln">1&lt;/span>&lt;span class="cl">&lt;span class="c1"># Display the current configuration&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">2&lt;/span>&lt;span class="cl">kubectl config view
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">3&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">4&lt;/span>&lt;span class="cl">&lt;span class="c1"># Get client and server version&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">5&lt;/span>&lt;span class="cl">kubectl version --short
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>The last command should output something close to this:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="ln">1&lt;/span>&lt;span class="cl">Client Version: v1.19.3
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">2&lt;/span>&lt;span class="cl">Server Version: v1.19.2
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="faas-cli">&lt;code>faas-cli&lt;/code>&lt;/h3>
&lt;p>The &lt;a href="https://github.com/openfaas/faas-cli">&lt;code>faas-cli&lt;/code>&lt;/a> requirement is linked to the usage of the OpenFaaS processor in the following setup.&lt;/p>
&lt;p>Here is one installation method:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="ln">1&lt;/span>&lt;span class="cl">curl -sSL https://cli.openfaas.com &lt;span class="p">|&lt;/span> sudo sh
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;blockquote>
&lt;p>You can also use an alternative installation method described in the &lt;a href="https://github.com/openfaas/faas-cli">&lt;code>faas-cli&lt;/code> project GitHub repository&lt;/a>.&lt;/p>
&lt;/blockquote>
&lt;h2 id="veba-deployment-on-kubernetes">VEBA deployment on Kubernetes&lt;/h2>
&lt;p>The VEBA deployment on K8S is quite simple and does not require a lot of configuration.&lt;/p>
&lt;h3 id="get-the-veba-code-and-dependencies">Get the VEBA code and dependencies&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="ln">1&lt;/span>&lt;span class="cl">git clone https://github.com/vmware-samples/vcenter-event-broker-appliance
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">2&lt;/span>&lt;span class="cl">&lt;span class="nb">cd&lt;/span> vcenter-event-broker-appliance/vmware-event-router/hack
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">3&lt;/span>&lt;span class="cl">git clone https://github.com/openfaas/faas-netes -b &lt;span class="s2">&amp;#34;0.9.2&amp;#34;&lt;/span> --single-branch
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="deploy-veba-to-your-kubernetes-cluster">Deploy VEBA to your Kubernetes cluster&lt;/h3>
&lt;p>VEBA team provide a setup script to handle the deployment:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="ln">1&lt;/span>&lt;span class="cl">bash create_k8s_config.sh
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>You will be prompted to provide some settings there:&lt;/p>
&lt;ul>
&lt;li>vCenter Server FQDN&lt;/li>
&lt;li>vCenter Server Username and password&lt;/li>
&lt;li>Deploy OpenFaaS: [y|n]: In my setup, &lt;strong>y&lt;/strong>es, I want to deploy an &lt;em>OpenFaaS&lt;/em> instance&lt;/li>
&lt;li>OpenFaaS Admin Password: The password to configure for the &lt;code>admin&lt;/code> account of &lt;em>OpenFaaS&lt;/em> instance&lt;/li>
&lt;/ul>
&lt;p>Then you are prompted to review the settings and in order to proceed the VEBA deployment.&lt;/p>
&lt;h3 id="check-the-deployment">Check the deployment&lt;/h3>
&lt;p>Few minutes later, you should have a new VEBA deployment:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="ln">1&lt;/span>&lt;span class="cl">kubectl get pods -n vmware
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">2&lt;/span>&lt;span class="cl">&lt;span class="c1"># You should get a running pod&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">3&lt;/span>&lt;span class="cl">NAME READY STATUS RESTARTS AGE
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">4&lt;/span>&lt;span class="cl">vmware-event-router-859b97c894-bxx94 1/1 Running &lt;span class="m">0&lt;/span> 25m
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>This pod, in the &lt;code>vmware&lt;/code> is the &lt;a href="#VMware%20Event%20Router">&lt;em>VMware Event Router&lt;/em>&lt;/a> as explained previously in this post.&lt;/p>
&lt;p>If you requested the OpenFaaS deployment, you now have a set of pods in the &lt;code>openfaas&lt;/code> namespace:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="ln"> 1&lt;/span>&lt;span class="cl">kubectl get pods -n openfaas
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 2&lt;/span>&lt;span class="cl">&lt;span class="c1"># You should get a new set of running pods&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 3&lt;/span>&lt;span class="cl">NAME READY STATUS RESTARTS AGE
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 4&lt;/span>&lt;span class="cl">alertmanager-66556574f7-g225s 1/1 Running &lt;span class="m">0&lt;/span> 27m
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 5&lt;/span>&lt;span class="cl">basic-auth-plugin-86995c9c5f-2zs4r 1/1 Running &lt;span class="m">0&lt;/span> 27m
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 6&lt;/span>&lt;span class="cl">faas-idler-7dbbcb48bb-tjhrg 1/1 Running &lt;span class="m">3&lt;/span> 27m
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 7&lt;/span>&lt;span class="cl">gateway-5c4c48545d-hdshr 2/2 Running &lt;span class="m">2&lt;/span> 27m
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 8&lt;/span>&lt;span class="cl">nats-6ff956f47c-hlqwx 1/1 Running &lt;span class="m">0&lt;/span> 27m
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 9&lt;/span>&lt;span class="cl">prometheus-857c769b7-mcsmt 1/1 Running &lt;span class="m">0&lt;/span> 27m
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">10&lt;/span>&lt;span class="cl">queue-worker-7b5756c9c4-wv9ml 1/1 Running &lt;span class="m">3&lt;/span> 27m
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;blockquote>
&lt;p>It may take a couple of minutes in order to get all pods in a running state. Be patient.&lt;/p>
&lt;/blockquote>
&lt;h3 id="login-to-your-openfaas-cli-and-ui">Login to your OpenFaaS cli and UI&lt;/h3>
&lt;h4 id="login-to-faas-cli">Login to &lt;code>faas-cli&lt;/code>&lt;/h4>
&lt;p>We now need to get the OpenFaaS URI to use the &lt;code>faas-cli&lt;/code> client. The following one-liner should provide you the appropriate information:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="ln">1&lt;/span>&lt;span class="cl">&lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;export OPENFAAS_URL=http://&amp;#34;&lt;/span>&lt;span class="k">$(&lt;/span>kubectl -n openfaas describe pods &lt;span class="k">$(&lt;/span>kubectl -n openfaas get pods &lt;span class="p">|&lt;/span> grep &lt;span class="s2">&amp;#34;gateway-&amp;#34;&lt;/span> &lt;span class="p">|&lt;/span> awk &lt;span class="s1">&amp;#39;{print $1}&amp;#39;&lt;/span>&lt;span class="k">)&lt;/span> &lt;span class="p">|&lt;/span> grep &lt;span class="s2">&amp;#34;^Node:&amp;#34;&lt;/span> &lt;span class="p">|&lt;/span> awk -F &lt;span class="s2">&amp;#34;/&amp;#34;&lt;/span> &lt;span class="s1">&amp;#39;{print $2}&amp;#39;&lt;/span>&lt;span class="k">)&lt;/span>&lt;span class="s2">&amp;#34;:31112&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>The above command output give you the command to run, to setup the &lt;code>OPENFAAS_URL&lt;/code> environment variable. This variable then can be used as an endpoint by the &lt;code>faas-cli&lt;/code> tool.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="ln">1&lt;/span>&lt;span class="cl">&lt;span class="nb">export&lt;/span> &lt;span class="nv">OPENFAAS_URL&lt;/span>&lt;span class="o">=&lt;/span>https://&amp;lt;node ip&amp;gt;:31112
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>And to login:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="ln">1&lt;/span>&lt;span class="cl">&lt;span class="nb">echo&lt;/span> &lt;span class="s1">&amp;#39;**YourPassword**&amp;#39;&lt;/span> &lt;span class="p">|&lt;/span> faas-cli login --password-stdin
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;blockquote>
&lt;p>A warning will recommend you to use an HTTPS endpoint instead of the HTTP one: let's ignore it for the moment.&lt;/p>
&lt;/blockquote>
&lt;p>At least, you should get a message like: &amp;quot;credentials saved for admin &lt;code>http://&amp;lt;node ip&amp;gt;:31112&amp;quot;&lt;/code> meaning that you successfully configured your &lt;code>faas-cli&lt;/code> client.&lt;/p>
&lt;h4 id="login-to-the-ui">Login to the UI&lt;/h4>
&lt;p>Use the same URL to login with the &lt;code>admin&lt;/code> account to the web UI and you should get something like that:&lt;/p>
&lt;figure>&lt;img src="https://vuptime.io/images/veba-first-steps/empty_OpenFaaS_UI.png"/>&lt;figcaption>
&lt;h4>Empty OpenFaaS UI&lt;/h4>
&lt;/figcaption>
&lt;/figure>
&lt;h2 id="first-function">First function&lt;/h2>
&lt;p>Time to describe our first function use case:&lt;/p>
&lt;p>We have a lab vCenter with multiple users, multiple projects, PoC etc. And it's a bit hard to know which VM belongs to which user, and if the project is still active.&lt;/p>
&lt;p>A way I found to handle this, is to set &lt;em>Custom Attributes&lt;/em> to the VM objects in vCenter, and to populate values when specific event occurs:&lt;/p>
&lt;ul>
&lt;li>&lt;code>event-creation_date&lt;/code>: To store the creation date&lt;/li>
&lt;li>&lt;code>event-last_poweredon&lt;/code>: To store the last powered on date&lt;/li>
&lt;li>&lt;code>event-owner&lt;/code>: To store the user that created the VM&lt;/li>
&lt;/ul>
&lt;figure>&lt;img src="https://vuptime.io/images/veba-first-steps/custom_attributes.png"/>&lt;figcaption>
&lt;h4>Custom attributes created for this function&lt;/h4>
&lt;/figcaption>
&lt;/figure>
&lt;h3 id="function-filesfolders-structure">Function files/folders structure&lt;/h3>
&lt;p>An VEBA OpenFaaS function is made of the following items:&lt;/p>
&lt;ul>
&lt;li>&lt;code>handler/&lt;/code>: this folder will store the content of our function code (folder name can be personalized)&lt;/li>
&lt;li>&lt;code>stack.yaml&lt;/code>: This file will describe our function&lt;/li>
&lt;li>A config file, passed as a K8S secret to our function, used to store credentials and other environment specific variables. In my example, it's a &lt;em>YAML&lt;/em> file: &lt;code>vcconfig.yml&lt;/code>.&lt;/li>
&lt;/ul>
&lt;p>To simplify this post, I invite you to clone this sample repository:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="ln">1&lt;/span>&lt;span class="cl">git clone https://github.com/lrivallain/veba-sample-custom-attribute.git
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">2&lt;/span>&lt;span class="cl">&lt;span class="nb">cd&lt;/span> veba-sample-custom-attribute/
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="stackyaml-file">&lt;code>stack.yaml&lt;/code> file&lt;/h4>
&lt;p>This description file is used by VEBA to create the function run on our function-processor.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="ln"> 1&lt;/span>&lt;span class="cl">&lt;span class="nt">provider&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 2&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">openfaas&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 3&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">gateway&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">http://&amp;lt;node ip&amp;gt;:31112&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 4&lt;/span>&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">functions&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 5&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">vm-creation-attr&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 6&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">lang&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">python3&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 7&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">handler&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">./handler&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 8&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">image&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">lrivallain/veba-vc-vm-creation-attr&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 9&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">environment&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">10&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">write_debug&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">11&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">read_debug&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">12&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">secrets&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">13&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">vcconfig&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">14&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">annotations&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">15&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">topic&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">VmCreatedEvent, VmClonedEvent, VmRegisteredEvent, DrsVmPoweredOnEvent, VmPoweredOnEvent, VmPoweringOnWithCustomizedDVPortEvent&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>As you see, we specify here the:&lt;/p>
&lt;ul>
&lt;li>OpenFaaS URI (the one in &lt;code>OPENFAAS_URL&lt;/code>)&lt;/li>
&lt;li>A language type: &lt;code>python3&lt;/code>&lt;/li>
&lt;li>The function folder: &lt;code>./handler&lt;/code>&lt;/li>
&lt;li>A base image to run the function: &lt;code>lrivallain/veba-vc-vm-creation-attr&lt;/code>
&lt;ul>
&lt;li>This image contains the appropriate dependencies to run our function&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>The configuration as a K8S &lt;em>secret&lt;/em> name.&lt;/li>
&lt;li>And in the annotations: the topic(s) to subscribe for this function.
&lt;ul>
&lt;li>Depending on your vCenter version, you can find an Event list in the &lt;a href="https://github.com/lamw/vcenter-event-mapping">vcenter-event-mapping&lt;/a> repository of William Lam.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h4 id="handler-folder">&lt;code>handler/&lt;/code> folder&lt;/h4>
&lt;p>The handler folder is made of:&lt;/p>
&lt;ul>
&lt;li>An &lt;code>index.py&lt;/code> file, use to handle the function instantiation: keep it like it is provided to start: of course, you can inspect the content to analyse the (simple) behaviour.&lt;/li>
&lt;li>A &lt;code>function/&lt;/code> subfolder:
&lt;ul>
&lt;li>The &lt;code>handler.py&lt;/code> file contains the code run each time the function is triggered&lt;/li>
&lt;li>The &lt;code>requirements.txt&lt;/code> file contains some function specific dependencies.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>The &lt;code>Dockerfile&lt;/code> used to build the base image: &lt;code>lrivallain/veba-vc-vm-creation-attr&lt;/code>: &lt;figure>&lt;img src="https://img.shields.io/docker/cloud/build/lrivallain/veba-vc-vm-creation-attr"/>&lt;figcaption>
&lt;h4>Docker Cloud Build Status&lt;/h4>
&lt;/figcaption>
&lt;/figure>
&lt;/li>
&lt;/ul>
&lt;h3 id="vcconfigyaml">&lt;code>vcconfig.yaml&lt;/code>&lt;/h3>
&lt;p>This is a quite simple configuration file to rename to the expected name:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="ln">1&lt;/span>&lt;span class="cl">cp vcconfig.example.yaml vcconfig.yaml
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="ln"> 1&lt;/span>&lt;span class="cl">&lt;span class="nt">vcenter&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 2&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">server&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">vcsa-fqdn&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 3&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">user&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">service-account@vsphere.local&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 4&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">password&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;**********&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 5&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">ssl_verify&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">false&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 6&lt;/span>&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 7&lt;/span>&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">attributes&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 8&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">owner&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">event-owner&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 9&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">creation_date&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">event-creation_date&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">10&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">last_poweredon&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">event-last_poweredon&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>You need to setup your VCSA instance, credentials and the name of custom attributes to use for each need.&lt;/p>
&lt;h4 id="custom-attributes-creation">Custom attributes creation&lt;/h4>
&lt;p>The script currently does not handle the custom attribute creation so you need to create them before using the function:&lt;/p>
&lt;figure>&lt;img src="https://vuptime.io/images/veba-first-steps/custom_attributes.png"/>&lt;figcaption>
&lt;h4>Custom attributes&lt;/h4>
&lt;/figcaption>
&lt;/figure>
&lt;h2 id="deploy-our-function">Deploy our function&lt;/h2>
&lt;p>We now got function code, configuration, and the VEBA over K8S deployed. Let's deploy our function.&lt;/p>
&lt;p>First step is to create the &amp;quot;&lt;em>secret&lt;/em>&amp;quot; to store our local configuration:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="ln">1&lt;/span>&lt;span class="cl">faas-cli secret create vcconfig --from-file&lt;span class="o">=&lt;/span>vcconfig.yml
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>And to confirm if it worked, we can lookup for the &lt;code>vcconfig&lt;/code> secret in a new namespace named: &lt;code>openfaas-fn&lt;/code> (for OpenFaaS Function)&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="ln">1&lt;/span>&lt;span class="cl">kubectl get secrets -n openfaas-fn vcconfig
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">2&lt;/span>&lt;span class="cl">&lt;span class="c1"># Output:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">3&lt;/span>&lt;span class="cl">NAME TYPE DATA AGE
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">4&lt;/span>&lt;span class="cl">vcconfig Opaque &lt;span class="m">1&lt;/span> 2m53s
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Now we need to pull the OpenFaaS language template for the specified &lt;code>lang&lt;/code> in our &lt;code>stack.yml&lt;/code> file:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="ln">1&lt;/span>&lt;span class="cl">faas template store pull python3
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;blockquote>
&lt;p>In fact, this command will pull all (12) the languages templates from the &lt;code>openfaas&lt;/code> registry, not only the one you are looking for.&lt;/p>
&lt;/blockquote>
&lt;p>We are ready to deploy our &lt;em>Function-as-a-Service&lt;/em>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="ln">1&lt;/span>&lt;span class="cl">faas-cli deploy -f stack.yml
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">2&lt;/span>&lt;span class="cl">&lt;span class="c1"># Output&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">3&lt;/span>&lt;span class="cl">Deploying: vm-creation-attr.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">4&lt;/span>&lt;span class="cl">Deployed. &lt;span class="m">202&lt;/span> Accepted.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">5&lt;/span>&lt;span class="cl">URL: http://10.6.30.114:31112/function/vm-creation-attr.openfaas-fn
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>We can check that a new pod is now part of the &lt;code>openfaas-fn&lt;/code> namespace:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="ln">1&lt;/span>&lt;span class="cl">$ kubectl get pods -n openfaas-fn
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">2&lt;/span>&lt;span class="cl">&lt;span class="c1"># Output:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">3&lt;/span>&lt;span class="cl">NAME READY STATUS RESTARTS AGE
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">4&lt;/span>&lt;span class="cl">vm-creation-attr-65d9f75464-lf2sk 1/1 Running &lt;span class="m">0&lt;/span> 94s
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>And our function is well listed in &lt;code>faas-cli&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="ln">1&lt;/span>&lt;span class="cl">faas-cli list
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">2&lt;/span>&lt;span class="cl">&lt;span class="c1"># Output:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">3&lt;/span>&lt;span class="cl">Function Invocations Replicas
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">4&lt;/span>&lt;span class="cl">vm-creation-attr &lt;span class="m">0&lt;/span> &lt;span class="m">1&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>The same in UI (need a refresh):&lt;/p>
&lt;figure>&lt;img src="https://vuptime.io/images/veba-first-steps/first-function-ready-UI.png"/>&lt;figcaption>
&lt;h4>First Function deployed in the OpenFaaS UI&lt;/h4>
&lt;/figcaption>
&lt;/figure>
&lt;h2 id="invoke-function">Invoke function&lt;/h2>
&lt;p>Invocation is now easy: juste create or power-on a VM in your vCenter and the event will be catched by VEBA, forwared to your OpenFaaS function and the code will run, inspecting the &lt;code>cloudevents&lt;/code> incoming data and doint the expected tasks.&lt;/p>
&lt;h3 id="follow-function-invocation">Follow function invocation&lt;/h3>
&lt;p>There is two way to follow the function invocation(s).&lt;/p>
&lt;p>By using &lt;code>kubectl&lt;/code> logs and specifing the &lt;code>openfaas-fn&lt;/code> namespace, the pod name (from above commands), and the &lt;code>--tail&lt;/code> and/or &lt;code>--follow&lt;/code> args:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="ln">1&lt;/span>&lt;span class="cl">kubectl logs -n openfaas-fn vm-creation-attr-65d9f75464-lf2sk --tail &lt;span class="m">100&lt;/span> --follow
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">2&lt;/span>&lt;span class="cl">&lt;span class="c1"># Output:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">3&lt;/span>&lt;span class="cl">2020/11/01 14:41:26 Version: 0.18.1 SHA: b46be5a4d9d9d55da9c4b1e50d86346e0afccf2d
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">4&lt;/span>&lt;span class="cl">2020/11/01 14:41:26 Timeouts: read: 5s, write: 5s hard: 0s.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">5&lt;/span>&lt;span class="cl">2020/11/01 14:41:26 Listening on port: &lt;span class="m">8080&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">6&lt;/span>&lt;span class="cl">2020/11/01 14:41:26 Writing lock-file to: /tmp/.lock
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">7&lt;/span>&lt;span class="cl">2020/11/01 14:41:26 Metrics listening on port: &lt;span class="m">8081&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Or with &lt;code>faas-cli&lt;/code> command:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="ln">1&lt;/span>&lt;span class="cl">faas-cli logs vm-creation-attr --tail &lt;span class="m">100&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">2&lt;/span>&lt;span class="cl">&lt;span class="c1"># Output:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">3&lt;/span>&lt;span class="cl">2020-11-01T14:41:26Z 2020/11/01 14:41:26 Version: 0.18.1 SHA: b46be5a4d9d9d55da9c4b1e50d86346e0afccf2d
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">4&lt;/span>&lt;span class="cl">2020-11-01T14:41:26Z 2020/11/01 14:41:26 Timeouts: read: 5s, write: 5s hard: 0s.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">5&lt;/span>&lt;span class="cl">2020-11-01T14:41:26Z 2020/11/01 14:41:26 Listening on port: &lt;span class="m">8080&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">6&lt;/span>&lt;span class="cl">2020-11-01T14:41:26Z 2020/11/01 14:41:26 Writing lock-file to: /tmp/.lock
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">7&lt;/span>&lt;span class="cl">2020-11-01T14:41:26Z 2020/11/01 14:41:26 Metrics listening on port: &lt;span class="m">8081&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Both outputs are very similar, so you can use the one that is the more convenient to you.&lt;/p>
&lt;h4 id="vm-creation">VM creation&lt;/h4>
&lt;p>In the case of a VM creation, we have the following output:&lt;/p>
&lt;figure>&lt;img src="https://vuptime.io/images/veba-first-steps/logs-vm-creation.png"/>&lt;figcaption>
&lt;h4>Logs for the VM creation event&lt;/h4>
&lt;/figcaption>
&lt;/figure>
&lt;p>And the attributes are populated according to the expected behavior:&lt;/p>
&lt;figure>&lt;img src="https://vuptime.io/images/veba-first-steps/attributes-vm-creation.png"/>&lt;figcaption>
&lt;h4>Attributes for the VM creation event&lt;/h4>
&lt;/figcaption>
&lt;/figure>
&lt;h4 id="vm-powered-on">VM powered-On&lt;/h4>
&lt;p>If we power On a VM:&lt;/p>
&lt;figure>&lt;img src="https://vuptime.io/images/veba-first-steps/logs-vm-poweredon.png"/>&lt;figcaption>
&lt;h4>Logs for the VM poweredOn event&lt;/h4>
&lt;/figcaption>
&lt;/figure>
&lt;p>And the attributes are populated according to the expected behavior:&lt;/p>
&lt;figure>&lt;img src="https://vuptime.io/images/veba-first-steps/attributes-vm-poweredon.png"/>&lt;figcaption>
&lt;h4>Attributes for the VM poweredOn event&lt;/h4>
&lt;/figcaption>
&lt;/figure>
&lt;h2 id="conclusion">Conclusion&lt;/h2>
&lt;p>We successfully covered the deployment of our first &lt;em>Event-Driven&lt;/em> &lt;em>Function-as-a-Service&lt;/em> use-case, greatly helped by the &lt;strong>VMware Event Broker&lt;/strong> services.&lt;/p>
&lt;p>There is a &lt;a href="https://github.com/lamw/vcenter-event-mapping">multitude of events&lt;/a> you can subscribe in your VMware virtual datacenter to imagine an infinity list of use cases: it is time to unlock your creativity!&lt;/p></description></item><item><title>VMworld 2020 – Récapitulatif jour 2</title><link>https://vuptime.io/post/2020-10-01-vmworld-2020-eu-day2/</link><pubDate>Thu, 01 Oct 2020 00:00:00 +0000</pubDate><guid>https://vuptime.io/2020/10/01/VMworld-2020-EU-Day2/</guid><description>
&lt;h2 id="conclusion">Conclusion&lt;/h2>
&lt;p>Ce n'est pas logique mais je vais conclure ce couple d'articles au sujet du VMworld avant les résumés des conférences regardées ce jour (que vous trouverez donc plus bas dans le présent article).&lt;/p>
&lt;p>Forcément, un évènement en virtuel n'a pas la saveur d'un évènement en présentiel, surtout quand on apprécie de retrouver à cette occasion, des connaissances, des collègues, des partenaires de travail. Techniquement, j'aurais tout aussi bien pu regarder hors de la période du VMworld, les sessions, qui étaient déjà enregistrées et diffusées à la demande et non en live. Je précise &amp;quot;techniquement&amp;quot; car je suis à peu près certain que si je n'avais pas utiliser ces deux jours pour regarder ces sessions, je n'aurais jamais trouvé ou prit le temps ensuite de le faire, à cette échelle.&lt;/p>
&lt;p>Je suis donc content d'avoir pû en profiter pendant 2 jours: de m'être nourris de nouvelles technologie, de nouveaux points de vue sur l'état de l'art des infrastructures. Je n'ai pas utilisé les moyens de mise en relation virtuelle des participants: Discord (j'étais connecté mais peu actif), Cloud City, le pass premium et les interractions avec les &lt;em>experts&lt;/em> qui étaient proposées. J'ai &lt;strong>consommé&lt;/strong> le contenu des &lt;em>breakout sessions&lt;/em> et je n'ai pas &lt;strong>participé&lt;/strong>, c'est mon seul regrêt cette année. Les explications sont multiples et personnelles. Je tâcherais de travailler là dessus si un nouvel évènement virtuel de ce type devait avoir lieu l'an prochain: j'espère que non tout de même 🤞.&lt;/p>
&lt;p>La qualité des &lt;em>breakout sessions&lt;/em> auxquelles j'ai assisté était variable. Je ne regarde généralement que les sessions annoncées avec un &lt;em>technical level&lt;/em> à 300, mais malgré celà, il y avait peu de séance vraiment techniques et les &lt;em>deep dives&lt;/em> ne sont plus forcément si complexes et si intéressants de ce point de vue. Je pense qu'il faudrait militer pour faire apparaitre un &lt;em>technical level&lt;/em> de 400 histoire de pouvoir sélectionner des contenus &lt;strong>systèmatiquement techniques&lt;/strong>.&lt;/p>
&lt;p>En terme d'expérience utilisateur sur le site et les vidéos: un beau travail a été réalisé pour que le contenu soit facilement accessible, compréhensible, présenté de manière cohérente. Quelques bugs du site ont toutefois ternis un peu l'expérience, sans être trop génants. La qualité des captations était variables selon les speakers qui ont dû aussi, improviser chez eux, avec les moyens du bords (ou du moins forcément limités). Il aura manqué un verre d'eau par-ci pour faire passer une quinte de toux, des notifications slack en silencieux par là, un fond vert pour untel ou des transitions plus naturelles entre 2 speakers d'une même session. Mais globalement, c'était vraiment très bien et ce fût très apprécié.&lt;/p>
&lt;p>Le dernier point (last but not least), forcément, cette année, pas de soirée(s) dans les rues, bars et boites de Barcelone. Boire un mojito seul devant mon écran de PC pendant un DJ set ne m'ayant pas particulièrement attiré, j'ai vaqué à des occupations différentes lors de mes soirées cette année.&lt;/p>
&lt;p>Allez, place aux résumés de présentation de cette dernière journée:&lt;/p>
&lt;h2 id="automate-it-processes-with-vrealize-automation-and-vrealize-orchestrator-hcmb2254">Automate IT Processes with vRealize Automation and vRealize Orchestrator &lt;code>[HCMB2254]&lt;/code>&lt;/h2>
&lt;ul>
&lt;li>Speakers(s):
&lt;ul>
&lt;li>&lt;strong>Francisco Poo Hernandez&lt;/strong>, Senior Technical Marketing Manager, VMware&lt;/li>
&lt;li>&lt;strong>Galina Kostova&lt;/strong>, Senior Product Manager, VMware&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>Cette courte session (33') propose de découvrir les moyens d'automatiser des process IT à l'aide de vRealize Automation et vRealize Orchestrator. La première explication concernant ce dernier est au sujet du support (assez récent) de langages de programmation tels que:&lt;/p>
&lt;ul>
&lt;li>Python 3.7&lt;/li>
&lt;li>PowerCLI 11 / PowerShell 6.2&lt;/li>
&lt;li>Node.js 10 et 12&lt;/li>
&lt;li>Javascript 5 (JavaScript était déjà supporté auparavant, toutefois, à chaud comme ça, le versionning ne me parle pas et ne correspond pas à celui des spécifications officielle de JS: [https://fr.wikipedia.org/wiki/JavaScript#Versions](voir l'article Wikipédia sur JavaScipt)... Est-ce un moteur ou une nu mérotation interne?)&lt;/li>
&lt;/ul>
&lt;p>Puis l'on aborde ABX (Action Based Extensibility) dont le but est de déclencher, via moteur d’exécution léger, des scripts en fonction d'évènements spécifiques. On est clairement dans le mode &amp;quot;event driven&amp;quot; qui devient de plus en plus présent pour les tâches simples dans le monde de l'IT.&lt;/p>
&lt;p>C'est d'ailleurs un critère de choix évoqué lorsqu'on a la possibilité d'automatiser une tâche à l'aide de vRO ou d'ABX. vRO s'en sort forcément mieux pour des tâches complexes ou fortement liées à des composants variés via sa notion de plugins, de workflows enchaînant des actions pouvant êtres très variées. ABX s'adapte toutefois mieux à des tâches rapides, légères et simples et ses actions peuvent aussi être chaînées (presqu'à la manière d'un framework vRO) et c'est un produit plus orienté cloud que on-premise.&lt;/p>
&lt;p>La seconde partie de la présentation concerne &lt;code>Code Stream&lt;/code>, le produit de &lt;em>pipelines DevOps&lt;/em> de VMware. Bon nombre de &lt;em>endpoints&lt;/em> sont disponibles mais finalement la présentation s'attarde sur l'intégration de vRO et Docker dans &lt;code>Code Stream&lt;/code> pour les tâches de CI.&lt;/p>
&lt;p>Enfin, Francisco propose une démonstration: à partir d'une recommandation de &lt;em>Skyline Advisor&lt;/em> à propros d'une menace potentielle liée aux failles &lt;em>Spectre/Meltdown&lt;/em> présente sur l'infrastructure, déclencher une interaction avec vRO: déclencher un workflow qui permettra de résoudre la situation (ici il s'agit de mettre à jour le virtual-hardware de la machine). Puis la démonstration utilise &lt;code>Code Stream&lt;/code> et un pipeline complexe afin de valider tous les impacts potentiels de cette action de remédiation.&lt;/p>
&lt;figure>&lt;img src="https://vuptime.io/images/vmworld2020/HCMB2254_codestream_demo.png"/>&lt;figcaption>
&lt;h4>Demo CodeStream&lt;/h4>
&lt;/figcaption>
&lt;/figure>
&lt;p>Cette tâche pourra être lancée:&lt;/p>
&lt;ul>
&lt;li>Manuellement depuis le &lt;em>service broker&lt;/em> de vRA&lt;/li>
&lt;li>Automatiquement lors d'une notification de &lt;em>Skyline Advisor&lt;/em>&lt;/li>
&lt;/ul>
&lt;p>Pour ma part, je ne suis pas encore un gros utilisateur de &lt;code>Code Stream&lt;/code> mais je pense qu'il constitue un &lt;em>wrapper&lt;/em> intéressant pour piloter un enchaînement de workflow vRO et d'actions codées dans d'autres types de langage. Finalement, c'est un complément des développements vRO qui permet de superviser d'une autre manière l’exécution des workflows et d'un potentiel enchaînement.&lt;/p>
&lt;h2 id="deep-dive-troubleshooting-applications-without-tcpdump-vcnc1920">Deep Dive: Troubleshooting Applications Without TCPdump &lt;code>[VCNC1920]&lt;/code>&lt;/h2>
&lt;ul>
&lt;li>Speakers(s):
&lt;ul>
&lt;li>&lt;strong>Nathan McMahon&lt;/strong>, Director, Avi Enablement, VMware&lt;/li>
&lt;li>&lt;strong>Ashutosh Gupta&lt;/strong>, Software Architect, VMware&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>&lt;code>tcpdump&lt;/code> est un outil qui a 35 ans et pourtant, c'est un outil qui peut aider un administrateur au quotidien quand il s'agit de troubleshooter un problème réseau, y compris lorsque vous travaillez avec de gros volumes de transfert. Toutefois, cela reste un outil basique qui nécessite:&lt;/p>
&lt;ul>
&lt;li>de savoir qu'on a un problème pour avoir à utiliser cette commande (ce n'est pas un outil qui vous détecte les pannes réseau, mais qui vous aide à comprendre ce qui s'y passe).&lt;/li>
&lt;li>de capturer le trafic au moment où le problème apparaît (pas de retour en arrière sur des mesures conservée en mémoire au fil de l'eau par exemple, pas de statistiques si l'outil n'est pas en cours d'exécution...)&lt;/li>
&lt;li>il faut un accès au segment réseau concerné par l'incident (via une VM par exemple)&lt;/li>
&lt;li>il faut avoir bien configuré &lt;code>tcpdump&lt;/code> avant l’occurrence du problème pour trier au mieux les éléments de la capture&lt;/li>
&lt;/ul>
&lt;p>Ces contraintes semblent importantes mais en réalité, ce vieil outil est tout de même très pratique pour diagnostiquer des problèmes réseau et est presque, incontournable. Forcément, un outil de 35 ans va être limité à appréhender les évolutions récentes du contenu qui passe sur les réseaux: HTTP/2, SSL presque partout, volumes démultipliés... c'est possible, mais ça devient complexe.&lt;/p>
&lt;p>De nouveau outils lui font à présent concurrence pour mieux appréhender ses limites et contraintes: vRealize Network Insight par exemple permet de faire bien plus de chose, via des échantillonnage, de l'apprentissage, des sondes positionnées sur des segments multiples, de la conservation de métriques...&lt;/p>
&lt;p>Avec les logs de VMware NSX-T &lt;em>Advanced Load Balancer&lt;/em> (ex AVI) il est aussi possible de collecter des informations très intéressantes au moment de diagnostique un souci qui pourrait être lié au réseau, sur une application. C'est l'objet de la démonstration qui suit et qui vise à montrer la manière de détecter, au sein d'un pool applicatif, de potentiels erreurs ou problèmes de performances. Frocément, ce produit permet de faire énormément plus de chose que &lt;code>tcpdump&lt;/code>, notamment si on veut mesurer l'état d'une application distribuée, au delà de l'état d'une simple connection réseau.&lt;/p>
&lt;figure>&lt;img src="https://vuptime.io/images/vmworld2020/VCNC1920_avi_demo.png"/>&lt;figcaption>
&lt;h4>Demo AVI&lt;/h4>
&lt;/figcaption>
&lt;/figure>
&lt;h2 id="nsx-t-container-networking-deep-dive-vcnc1163">NSX-T Container Networking Deep Dive &lt;code>[VCNC1163]&lt;/code>&lt;/h2>
&lt;ul>
&lt;li>Speakers(s):
&lt;ul>
&lt;li>&lt;strong>Yasen Simeonov&lt;/strong>, Senior Technical Product Manager, VMware&lt;/li>
&lt;li>&lt;strong>Ali Al Idrees&lt;/strong>, Lead EMEA SDDC Solutions Architect, VMware&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>Ce n'est plus très nouveau, VMware vise depuis quelques années à pousser NSX-T pour tous les types de workload d'une infrastructure, que vous utilisiez du bare-metal, de la virtualisation, du Kubernetes... L'intégration avec ce dernier type de workload est à présent plutôt mature et permet à présent de partager un &lt;em>Shared T1 router&lt;/em> entre &lt;code>namespaces&lt;/code> différents (avant le seul modèle était de déployer un &lt;em>routeur T1&lt;/em> par &lt;code>namespace&lt;/code>).&lt;/p>
&lt;p>Avec &lt;em>NSX Container Plug-in&lt;/em> (NCP), NSX-T DataCenter peut être à la fois intégré avec K8S, &lt;em>OpenShift, Pivotal Cloud Foundry&lt;/em> etc. Cette intégration permet par exemple d'utiliser:&lt;/p>
&lt;ul>
&lt;li>Persistance de règles de IP par service (K8s)&lt;/li>
&lt;li>Les metadata de K8S au sein de NSX sous forme de tags qui sont propagés automatiquement pour la réalisation de règles de sécurité.&lt;/li>
&lt;li>des règles de sécurité dans les description de service K8S&lt;/li>
&lt;li>Load Balancing intégré...&lt;/li>
&lt;/ul>
&lt;p>Ensuite la présentation aborde &lt;em>Tanzu Application Service&lt;/em> et notamment la partie réseau et sécurité: comment sont provisionnés les segments réseau, les routeurs T1, l’interconnexion via le T0, la création de nouveaux segments réseaux par tenant (Org).&lt;/p>
&lt;p>Avec &lt;em>vSphere with Tanzu&lt;/em> (vSphere 7) il devient possible de mixer &lt;code>pods&lt;/code> et machine virtuelles au sein d'un &lt;code>namespace&lt;/code> ce qui rend plus cohérent l'administration générale, tout en rendant un peu complexe, la liste de couches d'infrastructures impliquées:&lt;/p>
&lt;figure>&lt;img src="https://vuptime.io/images/vmworld2020/VCNC1163_vsphere_with_tanzu.png"/>&lt;figcaption>
&lt;h4>VCNC1163 vSphere with Tanzu&lt;/h4>
&lt;/figcaption>
&lt;/figure>
&lt;p>Si vous préférez &lt;em>OpenShift&lt;/em> (4), l'intégration est presque aussi aboutie et un projet d'opérateur spécifique pour NSX-T est en cours de développement dans les équipes VMware (ou de Red Hat, ou des deux, ce n'était pas clair).&lt;/p>
&lt;p>La présentation se termine avec une démonstration de la &lt;code>Hipster shop&lt;/code>, une pseudo-boutique en ligne dont l'architecture utilise massivement les &lt;em>micro-services&lt;/em>. Au cours de la mise en place de cette boutique virtuelle sur un cluster OpenShift, on peut voir les interactions avec NSX-T, l'arrivée de nouveaux ports sur les segments, la création de règles de sécurité etc. L'usage de l'outil &lt;code>Traceflow&lt;/code> intégré à NSX-T permet aussi l'analyse de potentielles erreurs réseau: ici une règle de sécurité bloquait le flux espéré.&lt;/p>
&lt;h2 id="vmware-cloud-foundation-deep-dive-hci2519">VMware Cloud Foundation Deep Dive &lt;code>[HCI2519]&lt;/code>&lt;/h2>
&lt;ul>
&lt;li>Speakers(s):
&lt;ul>
&lt;li>&lt;strong>Jason Shaw&lt;/strong>, Senior Technical Marketing Architect, VMware&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>La solution de base pour une architecture standardisée de SDDC chez VMware s'appelle &lt;em>&amp;quot;Cloud Foundation&amp;quot;&lt;/em>. Basée sur la recommandation d'utiliser des nœuds matériels &lt;em>'vSAN ready'&lt;/em>, cette manière de concevoir et déployer un socle standard d'architecture permet de s'affranchir des &lt;em>silos de complexité&lt;/em> généré par des choix opérés au fil de l'eau, des besoin, des projets, des changements d'avis.&lt;/p>
&lt;p>Grace à des tests poussés coté VMware, vous avez une sorte de garantie vis à vis d'une association de produits et de versions:&lt;/p>
&lt;figure>&lt;img src="https://vuptime.io/images/vmworld2020/HCI2519_VCF_products.png"/>&lt;figcaption>
&lt;h4>HCI2519 VCF products&lt;/h4>
&lt;/figcaption>
&lt;/figure>
&lt;p>Issu des &lt;em>VMware Validated Designs&lt;/em>, le concept &lt;em>Application Virtual Networks&lt;/em> (AVN) (des &lt;em>overlay&lt;/em> réseau dédiés pour une solution applicative) est fortement utilisé pour vCF.&lt;/p>
&lt;p>Un certain nombre de tâches plus ou moins complexes de la vie d'un SDDC sont aussi prises en charges par VCD telles que:&lt;/p>
&lt;ul>
&lt;li>Le déploiement de Edge NSX (HA, password management, lifecycle management...)&lt;/li>
&lt;li>La configuration de vSAN et vVol (ce dernier depuis vCF4.1)&lt;/li>
&lt;li>L'ajout de nouveaux hosts (scale-out) sur les &lt;em>workload domains&lt;/em>&lt;/li>
&lt;/ul>
&lt;p>Une démonstration de ce dernier point permet de voir ce qui est requis pour démarrer ce type de tâche: grosso modo, un fichier &lt;code>json&lt;/code> avec les FQDN des hosts (installés!) et leur infos d'authentification. Une bonne dose de vérifications sont tout de même à réaliser en amont: la checklist est proposée dans le wizard de vCF.&lt;/p>
&lt;p>Bien sûr, Cloud Foundation propose aussi d'aider pour gérer le cycle de vie des composants déployés: notamment pour mettre à jour les composants, les certificats SSL.&lt;/p>
&lt;p>Les API (et le &lt;em>Developer Center&lt;/em>) disponibles sur vCF permettent d'automatiser certaines opérations sans même passer par l'interface graphique.&lt;/p>
&lt;p>Enfin, on nous présente la notion de &lt;em>True Hybrid Cloud&lt;/em>, une promesse de VCF pour que vous puissiez envisager de migrer toute ou partie de votre SDDC vers des providers compatibles (on pense forcément à VMware on AWS!) à l'aide de HCX.&lt;/p>
&lt;figure>&lt;img src="https://vuptime.io/images/vmworld2020/vmworld2020.png"/>&lt;figcaption>
&lt;h4>VMworld 2020&lt;/h4>
&lt;/figcaption>
&lt;/figure></description></item><item><title>VMworld 2020 – Récapitulatif jour 1</title><link>https://vuptime.io/post/2020-09-30-vmworld-2020-eu-day1/</link><pubDate>Wed, 30 Sep 2020 00:00:00 +0000</pubDate><guid>https://vuptime.io/2020/09/30/VMworld-2020-EU-Day1/</guid><description>
&lt;h2 id="introduction">Introduction&lt;/h2>
&lt;p>Cette année le VMworld a une saveur une peu particulière. Habituellement, 2 VMwords (un US et un EU) tiennent place chaque année avec plusieurs milliers de personnes réunies sous un même toit pendant 3 ou 4 jours. Forcément, cette année, ce format n'a pas été possible au regard de la pandémie actuellement en cours et VMware a choisi de ne faire qu'un unique évènement virtuel, qui plus est, globalement gratuit.&lt;/p>
&lt;p>Pour ma part, je n'ai pas pris de pass &lt;em>premium&lt;/em> (pourtant accessible financièrement parlant) car j'ai pas remarqué un intérêt majeur me concernant vis à vis du pass gratuit permettant déjà l'accès à un nombre incalculable de conférences très intéressantes.&lt;/p>
&lt;p>C'est donc depuis chez moi que j'ai réservé 2 jours de temps pour assister à quelques conférences et reporter ici quelques notes prises au fil de l'eau.&lt;/p>
&lt;h2 id="vmworld-general-session">VMworld General Session&lt;/h2>
&lt;ul>
&lt;li>Speakers(s):
&lt;ul>
&lt;li>&lt;strong>Pat Gelsinger&lt;/strong>, Chief Executive Officer&lt;/li>
&lt;li>&lt;strong>Sanjay Poonen&lt;/strong>, Chief Operating Officer&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>Cette première Keynote en virtuel n'aura pas apporté tellement d'autres choses que des témoignages de dirigeants louant les produits VMware, particulièrement au regard de l'année 2020 qui a provoqué des challenges intéressants.&lt;/p>
&lt;p>Il est dur de commenter une &lt;em>vision&lt;/em> de l'avenir des infrastructure IT ou du développement d'applications et de services. Forcément, Kubenetes est à présent l'élement central et VMware semble vouloir miser dessus bien plus que sur son business traditionnel.&lt;/p>
&lt;h2 id="kubernetes-operators-for-vmware-tanzu-kubernetes-grid-kub1248">Kubernetes Operators for VMware Tanzu Kubernetes Grid &lt;code>[KUB1248]&lt;/code>&lt;/h2>
&lt;ul>
&lt;li>Speakers(s):
&lt;ul>
&lt;li>&lt;strong>Tom Schwaller&lt;/strong>, Technical Product Line Manager, VMware&lt;/li>
&lt;li>&lt;strong>Michael Gasch&lt;/strong>, Staff Engineer - Office of the CTO, VMware&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>Après une introduction rapide aux opérateurs Kubernetes (Kubernetes Operators) et à leurs capacités à étendre le périmètre fonctionnel de K8S, Tom et Michael nous ont expliqué que c'est fondamentalement ce que réalise &lt;a href="https://github.com/kubernetes-sigs/cluster-api">&lt;code>Cluster API&lt;/code>&lt;/a> pour déployer et opérer de nouveaux clusters K8S. Chez moi on dit &lt;em>&amp;quot;eat your own dog food&amp;quot;&lt;/em> et je trouve cela très intéressant de voir qu'un projet s'appuie sur ses propres bases pour s'étendre, se diversifier et s'opérer.&lt;/p>
&lt;p>Un second exemple d'opérateur était &lt;a href="https://github.com/flant/shell-operator">&lt;code>shell operator&lt;/code>&lt;/a> permettant de jouer des commandes shell basées sur des évènements au sein d'un cluster. C'est une méthode très simple pour générer de l'&lt;strong>event-driven&lt;/strong> au sein de votre infrastructure.&lt;/p>
&lt;p>Pour avoir une meilleure vision de la diversité offerte par ce système d'opérateurs, il est possible de visiter les hub suivants:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://operatorhub.io/">operatorhub.io&lt;/a> (156 items)&lt;/li>
&lt;li>&lt;a href="https://github.com/operator-framework/awesome-operators">github.com/operator-framework/awesome-operators&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>Et bien sûr, c'est la force du monde K8S, beaucoup d'outils permettent à présent de créer des opérateurs répondants à vos besoins: &lt;a href="https://github.com/operator-framework">&lt;code>Operator Framework&lt;/code>&lt;/a>, &lt;a href="https://github.com/kubernetes-sigs/kubebuilder">&lt;code>Kubebuilder&lt;/code>&lt;/a>, &lt;a href="https://github.com/nolar/kopf">&lt;code>Kopf&lt;/code>&lt;/a>...&lt;/p>
&lt;p>La seconde partie de la présentation se porte sur le point de vue d'un développeur de contrôleur et le rapport à l'architecture de Kubernetes. L'occasion de faire un rappel très utile comparant &lt;em>commande&lt;/em> et &lt;em>évènement&lt;/em> et comment fonctionne le cœur de Kubernetes qui est grandement basé sur le concept d'évènements pilotant des commandes et non l'inverse.&lt;/p>
&lt;p>Lorsqu'on souhaite créer un nouveau contrôleur, il faut prendre en compte un grand nombre d'éléments:&lt;/p>
&lt;ul>
&lt;li>Autonomie: uniquement basé sur la réception d'évènements.&lt;/li>
&lt;li>Asynchronisme et concurrence by design: il ne faut pas attendre les évènements dans un ordre spécifique.&lt;/li>
&lt;li>Stateless / Stateful: &lt;em>&lt;code>etcd&lt;/code>&lt;/em> est le seul composant faisant autorité. Le reste des données d'état étant grosso modo du &lt;em>&amp;quot;cache&amp;quot;&lt;/em> qu'il faudra réconcilier de temps à autre avec l'état d'&lt;code>etcd&lt;/code>.&lt;/li>
&lt;li>Anticiper les erreurs: Il y aura toujours des pannes, des erreurs... il faut les anticiper, ainsi que les effets sur le reste de l'infrastructure: &lt;em>defensive programming&lt;/em>.&lt;/li>
&lt;li>Effets de bords: Ne pas utiliser autre chose de K8S car on sort de la &lt;em>garantie&lt;/em> du comportement de K8S.&lt;/li>
&lt;/ul>
&lt;p>La dernière partie de la présentation est une démonstration de &lt;a href="https://github.com/nolar/kopf">&lt;code>Kopf&lt;/code>&lt;/a>: un projet permettant de créer des opérateurs à base de python et initialement développé par &lt;strong>Zalando&lt;/strong>. La démonstration utilise &lt;code>Kopf&lt;/code> afin de déployer des machines virtuelles au travers d'un contrôleur &lt;em>maison&lt;/em>: &lt;em>kopf vm controller&lt;/em>. La réactivité est impressionnante ainsi que l'apparente simplicité de décrire ses propres opérateurs et contrôleurs.&lt;/p>
&lt;h2 id="expand-your-service-portfolio-with-vmware-cloud-director-extensibility-hcps1394">Expand Your Service Portfolio with VMware Cloud Director Extensibility &lt;code>[HCPS1394]&lt;/code>&lt;/h2>
&lt;ul>
&lt;li>Speakers(s):
&lt;ul>
&lt;li>&lt;strong>Joerg Lew&lt;/strong>, Staff Technical Product Manager, VMware&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>On aborde dans cette présentation, un domaine que je commence à bien connaître: l'extensibilité de Cloud Director (oui j'ai envie d'écrire &lt;strong>v&lt;/strong>Cloud Director !!).&lt;/p>
&lt;p>Joerg évoque la disponibilité du provider &lt;em>Terraform&lt;/em> pour Cloud Director puis le projet &lt;a href="https://docs.vmware.com/en/VMware-Cloud-Director-App-Launchpad/index.html">&lt;em>App Launchpad&lt;/em>&lt;/a> qui est un plugin vCD permettant de déployer des applications pré-packagées (Bitnami, in-house apps, VMware Cloud Marketplace) en un minimum de clics.&lt;/p>
&lt;p>Ce projet &lt;em>App Launchpad&lt;/em> est clairement le plugin le plus abouti que j'ai pu voir (merci la force interne de VMware) avec une intégration graphique parfaite, un portail provider, une gestion des droits, d'une configuration dynamique, recherche... Malheureusement il faut imaginer la démonstration car l'enregistrement n'est pas de bonne qualité à cause d'un partage de l'écran avec la webcam du présentateur.&lt;/p>
&lt;p>Le second plugin évoqué est le traditionnel &lt;a href="https://vmware.github.io/container-service-extension/INTRO.html">&lt;em>Container Service Extension&lt;/em>&lt;/a> qui bénéficie maintenant d'une UI proposée par VMware. Ce plugin (dont la partie API n'est pas nouvelle) a vocation a permettre de déployer des clusters K8S depuis Cloud Director en quelques clics là aussi. Ayant déjà travaillé sur cette extension par le passé, je suis toujours surpris qu'il manque toujours à l'UI le support d'&lt;em>Enterprise PKS&lt;/em>. La variété de services autour de K8S chez VMware fait qu'il faille peut être encore attendre une stabilisation avant de bénéficier d'une intégration plus poussée de Tanzu par exemple au sein de Cloud Director.&lt;/p>
&lt;p>&lt;strong>&lt;em>Edit:&lt;/em>&lt;/strong> Finalement après avoir écrit ces quelques lignes sur CSE, je vois l'annonce de Cloud Director qui inclut la réponse à mon interrogation: &lt;a href="https://blogs.vmware.com/cloudprovider/2020/09/vcd10-2-html.html">Announcing Major Updates in VMware Cloud Director 10.2&lt;/a>. vCD 10.2 arrive donc en même temps que CSE 3.0 qui supportera &lt;em>VMware Tanzu&lt;/em>.&lt;/p>
&lt;p>Il a bien sûr aussi été question de:&lt;/p>
&lt;ul>
&lt;li>&lt;em>&amp;quot;Service Library&amp;quot;&lt;/em> qui s'appuie sur vRealize Orchestrator pour proposer tout type de service à travers l'automatisation personnalisée via cet outil: &lt;code>XaaS&lt;/code>.&lt;/li>
&lt;li>&lt;em>&amp;quot;vROPS tenant portal&amp;quot;&lt;/em>: qui permet d'accéder à une version &amp;quot;par tenant&amp;quot; de vROPS pour les organisations de vCD.&lt;/li>
&lt;li>&lt;em>&amp;quot;vCloud Object Storage Service&amp;quot;&lt;/em> offrant la mise à disposition de bucket &lt;em>S3-like&lt;/em> de stockage à destination des tenants vCD (STorage as a Service, Backup as a Service, import/export de VM, vAPP, calalogues etc.)&lt;/li>
&lt;/ul>
&lt;p>Enfin il a été question du branding de VCD qui peut être personnalisé au travers de l'API et du &lt;a href="https://github.com/vmware-samples/vcd-ext-samples">kit d'exemples de personnalisation de vCD&lt;/a>. Force est de constater qu'un effort est en cours pour rendre un peu plus accessible ce type de modification de vCD avec notamment la mise en ligne de blog post: &lt;a href="https://blogs.vmware.com/cloudprovider/2020/02/cloud-director-plugin-dev-env.html">https://blogs.vmware.com/cloudprovider/2020/02/cloud-director-plugin-dev-env.html&lt;/a>&lt;/p>
&lt;h2 id="60-minutes-of-numa-hcp2453">60 Minutes of NUMA &lt;code>[HCP2453]&lt;/code>&lt;/h2>
&lt;ul>
&lt;li>Speakers(s):
&lt;ul>
&lt;li>&lt;strong>Frank Denneman&lt;/strong>, Chief Technologist, CPBU, VMware&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>C'est devenu ma traditionnelle séquence annuelle que de participer à &lt;em>60 Minutes of NUMA&lt;/em>: une session généralement intense en technicité pour parler d'un sujet immensément complexe: le support de &lt;code>NUMA&lt;/code> (Non-Uniform Memory Access) par le &lt;em>scheduler&lt;/em> de l'hyperviseur ESXi (voir la présentation de l'an passé: &lt;a href="https://vuptime.io/2019/11/07/VMworld-2019-EU-Day4/#60-minutes-of-non-uniform-memory-architecture-hbi2278be">2019&lt;/a>)&lt;/p>
&lt;p>On commence par un refresh sur la notion/fonctionnalité de &lt;em>Node-Interleaving&lt;/em> qui permet de faire du &lt;em>round robin&lt;/em> lors de l'écriture mémoire entre 2 nœuds NUMA. Cela compromet toutefois les optimisations de NUMA et ce n'est pas conseillé de l'activer (désactivé par défaut). &lt;a href="https://twitter.com/ivgivanov">Ivaylo Ivanov (@ivgivanov)&lt;/a> propose sur Twitter &lt;a href="https://twitter.com/ivgivanov/status/1155754666619232256">une commande&lt;/a> permettant de comparer avant/après l'activation de cette fonctionnalité.&lt;/p>
&lt;p>Second point de la présentation: &lt;em>Cluster on Die&lt;/em> (CoD) qui permet de créer 2 nœuds NUMA par socket et d'améliorer l'empreinte CPU pour les applications réalisant beaucoup d'accès aux caches mémoire (&lt;em>cache intensives&lt;/em>). C'est une bonne transition pour parler de l'architecture EPYC d'AMD qui propose au sein d'un package CPU unique, plusieurs &amp;quot;dies&amp;quot; avec en EPYCv2 (aka &lt;em>Rome&lt;/em>), 16 domaines de caches pour un nœud NUMA. Une architecture qui remet en question l'intérêt des multiples sockets au sein d'une unique machine.&lt;/p>
&lt;p>Ensuite, Frank évoque les &lt;em>&amp;quot;3 amigos&amp;quot;&lt;/em>, à savoir la complexe mécanique synchronisée de 3 schedulers auxquels sont confrontés les demandes des machines virtuelles:&lt;/p>
&lt;ul>
&lt;li>NUMA scheduler&lt;/li>
&lt;li>CPU scheduler&lt;/li>
&lt;li>Memory scheduler&lt;/li>
&lt;/ul>
&lt;p>Cela nous amène à la notion de vNUMA qui permet de présenter la topologie NUMA à des guestOS afin qu'ils puissent, adapter leur fonctionnement pour tirer partie, au mieux, de cette configuration.&lt;/p>
&lt;p>Frank s'aventure ensuite à comparer les dernières génération d'AMD et d'Intel en terme de latence d'accès à la mémoire. Une comparaison légèrement en faveur d'Intel mais selon les usages, dans certains cas, AMD s'en sort mieux.&lt;/p>
&lt;p>Puis nous abordons le sujet des &lt;em>wides VMs&lt;/em> qui occupent seules, au choix:&lt;/p>
&lt;ul>
&lt;li>plus de vCPU que le socket ne peut en proposer&lt;/li>
&lt;li>plus mémoire qu'un socket ne peut en adresser en local access&lt;/li>
&lt;/ul>
&lt;p>Enfin, la présentation se termine en évoquant les composants d'accélération matérielle rencontrés dans les datacenters modernes: notamment les accès à des cartes en PCIe. C'est pour moi l'occasion de découvrir que la notion de localité s'applique au matériel PCIe car ceux-ci sont directement connecté à un package CPU. Dans cette configuration, les workloads de &lt;em>machine learning&lt;/em> peuvent devenir le pire &amp;quot;voisin bruyant&amp;quot; (noisy neighbor) de votre infrastructure en &lt;strong>inondant&lt;/strong> le bus &lt;em>interconnect&lt;/em> en cas d'accès à un &lt;em>remote&lt;/em> GPU par exemple (au sens NUMA du terme &lt;em>remote&lt;/em>). Pour résoudre ce type de cas de figure, Frank propose un &lt;a href="https://github.com/frankdenneman/PTNumaTopology">outil&lt;/a> permettant de faire de l'affinité NUMA/PCIe Device.&lt;/p>
&lt;h2 id="building-a-mega-cloud--lessons-learned-hcps2600">Building a Mega Cloud – Lessons Learned [HCPS2600]&lt;/h2>
&lt;ul>
&lt;li>Speakers(s):
&lt;ul>
&lt;li>&lt;strong>Ken Lamoreaux&lt;/strong>, Director Technical Product Manager, VMware&lt;/li>
&lt;li>&lt;strong>Martin Hosken&lt;/strong>, Chief Technologist, Cloud Services, VMware&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>Cette présentation s'appuie sur les bases du toolkit &amp;quot;vCAT&amp;quot; (VMware Architectural Toolkit 5.0) pour aborder la scalabilité &lt;em>extrême&lt;/em> d'un cloud massif en volume ou massivement distribué.&lt;/p>
&lt;p>Parmi les éléments à prendre en compte, on retrouve:&lt;/p>
&lt;ul>
&lt;li>Les &lt;a href="https://configmax.vmware.com">&lt;em>VMware Configuration Maximums&lt;/em>&lt;/a> (ce n'est pas nouveau)&lt;/li>
&lt;li>L'objectif exact de ce qu'on tente d'atteindre comme scalabilité/performance&lt;/li>
&lt;li>Les dépendances matérielles&lt;/li>
&lt;/ul>
&lt;p>On aborde en surface la capacité à provisionner à bon rythme la capacité matérielle (automatisation bas niveau), la configuration de la couche logicielle primaire (vSphere, clustering...), la notion de &lt;em>pod&lt;/em> (pas K8S cette fois!) matériels dont le nombre peut évoluer en fonction des besoin de ce cloud &amp;quot;massif&amp;quot; que l'on essaie de créer. Je passe sur l'usage de vROps pour surveiller la capacité et l'état de santé de nos pods ou de notre cloud car c'est un usage finalement basique et attendu de ce produit.&lt;/p>
&lt;p>On fait donc le tour des produits VMware qui constituent la base d'un cloud privé ou partagé à large échelle selon le point de vue de VMware: vSAN, NSX-T, vROps, VCF (Cloud Foundation)...&lt;/p>
&lt;p>La partie sur NSX-T est intéressante car on ne parle plus de concepts généraux, on parle d'architecture, de choix de design, de contraintes, de faire sauter les bottlenecks! En guise de récap, coté réseau, on nous préconise de prendre en compte:&lt;/p>
&lt;ul>
&lt;li>la forme de notre trafic réseau: beaucoup de petits paquets (telco/nfv) ou de gros paquets plus traditionnel en intra-DC?&lt;/li>
&lt;li>la capacité d'offload matériel de notre trafic: Rx/Tx filters, Geneve Offload, RSS...&lt;/li>
&lt;li>les composants matériels choisis: par exemple, afin d'atteindre plus de 40GB.s&lt;sup>-1&lt;/sup> de bande passante, 2 slots PCIe sont nécessaire.&lt;/li>
&lt;/ul>
&lt;p>Concernant Cloud Director, j'apprends que finalement ce composant, même dans sa nouvelle forme d'appliance est finalement limité en nombre d'instance: 3 max dans le cluster de BDD et ensuite chaque nouvelle appliance en plus génère beaucoup d'accès à la base qui peuvent impacter les performances globales ressenties.&lt;/p>
&lt;p>Pour ma part je suis malgré tout un peu déçu que cette présentation ne soit pas descendu plus en détails dans les entrailles d'une vraie mise en situation avec des retours d'expérience. Probablement que la valeur du niveau de technicité de cette présentation (300) a été placé un peu haut au regard du contenu.&lt;/p>
&lt;figure>&lt;img src="https://vuptime.io/images/vmworld2020/vmworld2020.png"/>&lt;figcaption>
&lt;h4>VMworld 2020&lt;/h4>
&lt;/figcaption>
&lt;/figure></description></item><item><title>Object notfound in vRO using the vCloud Director plugin</title><link>https://vuptime.io/post/2020-04-25-vro-vcd-plugin-object-not-found/</link><pubDate>Sat, 25 Apr 2020 00:00:00 +0000</pubDate><guid>https://vuptime.io/2020/04/25/vro-vcd-plugin-object-not-found/</guid><description>
&lt;p>A strange behavior has happened just after vRO installation and vCloud director plugin configuration, I wasn't able to interact with any objects managed by the vcloud director plugin.&lt;/p>
&lt;p>I created a simple workflow on my lab to illustrate the issue.&lt;/p>
&lt;p>The workflow cannot be more basic as it has only a single line of code to display the name of the &lt;em>vcloud:organization&lt;/em> object provided on the input.&lt;/p>
&lt;figure>&lt;img src="https://vuptime.io/images/vro-vcd-object-notfound/start_workflow_to_get_org_name.png"/>&lt;figcaption>
&lt;h4>Display organization&lt;/h4>
&lt;/figcaption>
&lt;/figure>
&lt;figure>&lt;img src="https://vuptime.io/images/vro-vcd-object-notfound/result_workflow_to_get_org_name.png"/>&lt;figcaption>
&lt;h4>Display organization name&lt;/h4>
&lt;/figcaption>
&lt;/figure>
&lt;p>This simple workflow cannot display the organization name even if I respected the documentation. The attribut &lt;em>name&lt;/em> should be present on a object of type : &lt;em>vcloud:organization&lt;/em>&lt;/p>
&lt;figure>&lt;img src="https://vuptime.io/images/vro-vcd-object-notfound/api_doc_vcloud_organization.png"/>&lt;figcaption>
&lt;h4>vcloud:organization-doc&lt;/h4>
&lt;/figcaption>
&lt;/figure>
&lt;p>So I tryied to display the object &lt;em>vcloud:organization&lt;/em> to be sure that the object is correctly fetched.&lt;/p>
&lt;figure>&lt;img src="https://vuptime.io/images/vro-vcd-object-notfound/result_workflow_to_get_org.png"/>&lt;figcaption>
&lt;h4>Display organization&lt;/h4>
&lt;/figcaption>
&lt;/figure>
&lt;p>vRO was not even able to display the &lt;em>vcloud:organization&lt;/em> object itself and I was facing the same kind of issue for the organization-vdcs and the virtual machines objects. That's weird. Espacially when the vcloud inventory seems to work.&lt;/p>
&lt;figure>&lt;img src="https://vuptime.io/images/vro-vcd-object-notfound/vro_inventory_vcd.png"/>&lt;figcaption>
&lt;h4>Display organization&lt;/h4>
&lt;/figcaption>
&lt;/figure>
&lt;p>I struggled to fix to issue, I registered the vcloud director connector, change the API versions, reinstall the vcloud director plugin, change to version of the plugin, nothing works.&lt;/p>
&lt;p>I checked the vcloud director configuration and I found on the &lt;em>public addresses&lt;/em> tab that the &lt;em>HTTP base URL&lt;/em> attribut was different than the &lt;em>HTTP Rest API base URL&lt;/em>. It was prefixed by &lt;em>api-&lt;/em>.&lt;/p>
&lt;figure>&lt;img src="https://vuptime.io/images/vro-vcd-object-notfound/vcloud_director_public_addresses.png"/>&lt;figcaption>
&lt;h4>public_addresses&lt;/h4>
&lt;/figcaption>
&lt;/figure>
&lt;p>Remember that the &lt;em>HTTP Rest API base URL&lt;/em> are used to change the base URL on the REST API (obvious) and can be different that the &lt;em>HTTP base UR&lt;/em>L:&lt;/p>
&lt;figure>&lt;img src="https://vuptime.io/images/vro-vcd-object-notfound/vcd_api_results.png"/>&lt;figcaption>
&lt;h4>public_addresses&lt;/h4>
&lt;/figcaption>
&lt;/figure>
&lt;p>I registered the vcloud director on vRO using the &lt;em>HTTP base URL&lt;/em> but not with the API one.&lt;/p>
&lt;p>So I reconfigured the connector, try again the workflow and magic happens. I'm now able to fetch the organization and display it's name :&lt;/p>
&lt;figure>&lt;img src="https://vuptime.io/images/vro-vcd-object-notfound/result_workflow_to_get_org_successful.png"/>&lt;figcaption>
&lt;h4>Display organization&lt;/h4>
&lt;/figcaption>
&lt;/figure>
&lt;figure>&lt;img src="https://vuptime.io/images/vro-vcd-object-notfound/result_workflow_to_get_org_name_successful.png"/>&lt;figcaption>
&lt;h4>Display organization name&lt;/h4>
&lt;/figcaption>
&lt;/figure>
&lt;p>vRO was probably trying to get the organization by building it's href (&lt;em>&lt;a href="https://vcd.lab65.local/org.ea1bc7eb-d39c-48b5-acd2-2c3a78990567">https://vcd.lab65.local/org.ea1bc7eb-d39c-48b5-acd2-2c3a78990567&lt;/a>&lt;/em>) using the connector URL but was not able to get it as it was registered on the inventory with the API base URL (&lt;em>&lt;a href="https://api-vcd.lab65.local/org.ea1bc7eb-d39c-48b5-acd2-2c3a78990567">https://api-vcd.lab65.local/org.ea1bc7eb-d39c-48b5-acd2-2c3a78990567&lt;/a>&lt;/em>) as displayed on the vcd plugin inventory.&lt;/p>
&lt;figure>&lt;img src="https://vuptime.io/images/vro-vcd-object-notfound/vro_inventory_vcd_api_2.png"/>&lt;figcaption>
&lt;h4>Display organization name&lt;/h4>
&lt;/figcaption>
&lt;/figure>
&lt;p>I had also to troubleshoot the same kind of issue on an another platform, even if the HTTP base URL was the same that the API one. The first letter of the API base URL was in capital letter instead of the HTTP base URL that was not. A small difference probably due a wrong copy-paste that had a huge impact on the platform.&lt;/p>
&lt;p>Hope it helps.&lt;/p></description></item><item><title>REST ❤ Swagger, 2 minutes to create an API SDK ⏱ – Codegen Demo – Part 2</title><link>https://vuptime.io/post/2020-04-09-rest-loves-swagger-demo-part2/</link><pubDate>Thu, 09 Apr 2020 00:00:00 +0000</pubDate><guid>https://vuptime.io/2020/04/09/rest-loves-swagger-demo-part2/</guid><description>
&lt;p>After a &lt;a href="https://vuptime.io/2020/04/01/rest-loves-swagger-demo/">short introduction of Swagger Codegen and the context of the demo made for a French vMUG Webinar&lt;/a>, we will see how to apply this to VMware products like vCenter and vCloud Director.&lt;/p>
&lt;p>As this post is following the steps made in the &lt;a href="https://vuptime.io/2020/04/01/rest-loves-swagger-demo/">part 1&lt;/a>, I strongly encourage you to start with the previous post.&lt;/p>
&lt;h2 id="pre-requisites">Pre-requisites&lt;/h2>
&lt;p>Same as previous post + we will rely on some environment variables to set some local settings:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="ln">1&lt;/span>&lt;span class="cl">&lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;Exporting vCenter env...&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">2&lt;/span>&lt;span class="cl">&lt;span class="nb">export&lt;/span> &lt;span class="nv">VMWARE_VCENTER_HOSTNAME&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;vcsa.vupti.me&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">3&lt;/span>&lt;span class="cl">&lt;span class="nb">export&lt;/span> &lt;span class="nv">VMWARE_VCENTER_USERNAME&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;demo@vsphere.local&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">4&lt;/span>&lt;span class="cl">&lt;span class="nb">export&lt;/span> &lt;span class="nv">VMWARE_VCENTER_PASSWORD&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;************&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">5&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">6&lt;/span>&lt;span class="cl">&lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;Exporting vCD env...&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">7&lt;/span>&lt;span class="cl">&lt;span class="nb">export&lt;/span> &lt;span class="nv">VMWARE_VCD_HOSTNAME&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;vcd.vupti.me&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">8&lt;/span>&lt;span class="cl">&lt;span class="nb">export&lt;/span> &lt;span class="nv">VMWARE_VCD_USERNAME&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;demo@orgdemo&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">9&lt;/span>&lt;span class="cl">&lt;span class="nb">export&lt;/span> &lt;span class="nv">VMWARE_VCD_PASSWORD&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;************&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="vcenter-sdk-with-codegen">vCenter SDK with Codegen&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="ln"> 1&lt;/span>&lt;span class="cl">&lt;span class="c1"># Get the API swagger description&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 2&lt;/span>&lt;span class="cl">curl -sk https://&lt;span class="nv">$VMWARE_VCENTER_HOSTNAME&lt;/span>/apiexplorer/json/vcenter.json &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 3&lt;/span>&lt;span class="cl">&lt;span class="se">&lt;/span> &amp;gt; codegen/in/vcenter.json
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 4&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 5&lt;/span>&lt;span class="cl">&lt;span class="c1"># Create a config file for our future python module&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 6&lt;/span>&lt;span class="cl">&lt;span class="nb">echo&lt;/span> &lt;span class="s1">&amp;#39;{
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 7&lt;/span>&lt;span class="cl">&lt;span class="s1"> &amp;#34;packageName&amp;#34;:&amp;#34;vc_client&amp;#34;,
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 8&lt;/span>&lt;span class="cl">&lt;span class="s1"> &amp;#34;projectName&amp;#34;:&amp;#34;vc-client&amp;#34;,
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 9&lt;/span>&lt;span class="cl">&lt;span class="s1"> &amp;#34;packageVersion&amp;#34;:&amp;#34;6.7.0&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">10&lt;/span>&lt;span class="cl">&lt;span class="s1">}&amp;#39;&lt;/span> &amp;gt; codegen/in/config_vc_client.json
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">11&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">12&lt;/span>&lt;span class="cl">&lt;span class="c1"># Generate the SDK&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">13&lt;/span>&lt;span class="cl">docker run --rm -v &lt;span class="si">${&lt;/span>&lt;span class="nv">PWD&lt;/span>&lt;span class="si">}&lt;/span>/codegen:/local &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">14&lt;/span>&lt;span class="cl">&lt;span class="se">&lt;/span> swaggerapi/swagger-codegen-cli generate &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">15&lt;/span>&lt;span class="cl">&lt;span class="se">&lt;/span> -i /local/in/vcenter.json &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">16&lt;/span>&lt;span class="cl">&lt;span class="se">&lt;/span> -o /local/out/python-vc &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">17&lt;/span>&lt;span class="cl">&lt;span class="se">&lt;/span> -c /local/in/config_vc_client.json &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">18&lt;/span>&lt;span class="cl">&lt;span class="se">&lt;/span> -l python
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">19&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">20&lt;/span>&lt;span class="cl">&lt;span class="c1"># Install new python mdule with PIP&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">21&lt;/span>&lt;span class="cl">pip install codegen/out/python-vc
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>So in the above section, we created a new API SDK for a subset of vCenter REST APIs (and we do not rely on the &lt;a href="http://vmware.github.io/pyvmomi/">&lt;code>pyvmomi&lt;/code>&lt;/a> project).&lt;/p>
&lt;p>We can now use it:&lt;/p>
&lt;h3 id="prepare-a-client-object">Prepare a client object&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="ln"> 1&lt;/span>&lt;span class="cl">&lt;span class="kn">import&lt;/span> &lt;span class="nn">vc_client&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 2&lt;/span>&lt;span class="cl">&lt;span class="kn">from&lt;/span> &lt;span class="nn">vc_client.rest&lt;/span> &lt;span class="kn">import&lt;/span> &lt;span class="n">ApiException&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 3&lt;/span>&lt;span class="cl">&lt;span class="kn">from&lt;/span> &lt;span class="nn">utils&lt;/span> &lt;span class="kn">import&lt;/span> &lt;span class="o">*&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 4&lt;/span>&lt;span class="cl">&lt;span class="kn">import&lt;/span> &lt;span class="nn">os&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 5&lt;/span>&lt;span class="cl">&lt;span class="n">logger&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">logging&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">getLogger&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;DEMO_VCENTER&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 6&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 7&lt;/span>&lt;span class="cl">&lt;span class="c1"># Configure API&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 8&lt;/span>&lt;span class="cl">&lt;span class="n">configuration&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">vc_client&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Configuration&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 9&lt;/span>&lt;span class="cl">&lt;span class="n">configuration&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">verify_ssl&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kc">False&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">10&lt;/span>&lt;span class="cl">&lt;span class="n">configuration&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">host&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="sa">f&lt;/span>&lt;span class="s2">&amp;#34;https://&lt;/span>&lt;span class="si">{&lt;/span>&lt;span class="n">os&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">environ&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">get&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;VMWARE_VCENTER_HOSTNAME&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">/rest&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">11&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">12&lt;/span>&lt;span class="cl">&lt;span class="c1"># credentials&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">13&lt;/span>&lt;span class="cl">&lt;span class="n">_username&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">os&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">environ&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">get&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;VMWARE_VCENTER_USERNAME&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">14&lt;/span>&lt;span class="cl">&lt;span class="n">_password&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">os&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">environ&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">get&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;VMWARE_VCENTER_PASSWORD&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">15&lt;/span>&lt;span class="cl">&lt;span class="n">auth_str&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">basic_auth_str&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">_username&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">_password&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">16&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">17&lt;/span>&lt;span class="cl">&lt;span class="c1"># Create a client&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">18&lt;/span>&lt;span class="cl">&lt;span class="n">client&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">vc_client&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">ApiClient&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">configuration&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>So we import our new &lt;code>vc_client&lt;/code> module, we setup the target hostname and the authentication settings.&lt;/p>
&lt;h3 id="get-a-new-session">Get a new session&lt;/h3>
&lt;p>New goal: getting a session to use a &lt;em>cookie-based&lt;/em> authentication instead of providing username/password for each request:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="ln"> 1&lt;/span>&lt;span class="cl">&lt;span class="c1"># Get a new session&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 2&lt;/span>&lt;span class="cl">&lt;span class="k">try&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 3&lt;/span>&lt;span class="cl"> &lt;span class="n">logger&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">debug&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;Starting a new session&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 4&lt;/span>&lt;span class="cl"> &lt;span class="n">s&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">client&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">call_api&lt;/span>&lt;span class="p">(&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 5&lt;/span>&lt;span class="cl"> &lt;span class="s1">&amp;#39;/com/vmware/cis/session&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 6&lt;/span>&lt;span class="cl"> &lt;span class="s2">&amp;#34;POST&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 7&lt;/span>&lt;span class="cl"> &lt;span class="n">header_params&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 8&lt;/span>&lt;span class="cl"> &lt;span class="s2">&amp;#34;Authorization&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">auth_str&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 9&lt;/span>&lt;span class="cl"> &lt;span class="p">})&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">10&lt;/span>&lt;span class="cl">&lt;span class="k">except&lt;/span> &lt;span class="n">ApiException&lt;/span> &lt;span class="k">as&lt;/span> &lt;span class="n">e&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">11&lt;/span>&lt;span class="cl"> &lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;Exception when creating session: &lt;/span>&lt;span class="si">%s&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span> &lt;span class="o">%&lt;/span> &lt;span class="n">e&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">12&lt;/span>&lt;span class="cl"> &lt;span class="n">exit&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">13&lt;/span>&lt;span class="cl">&lt;span class="n">logger&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">info&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;New session is created&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">14&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">15&lt;/span>&lt;span class="cl">&lt;span class="c1"># Set the cookie according to the previous request result&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">16&lt;/span>&lt;span class="cl">&lt;span class="n">logger&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">debug&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;Setting new session authorization token in cookies&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">17&lt;/span>&lt;span class="cl">&lt;span class="n">client&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">cookie&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">s&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">get&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;Set-Cookie&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">18&lt;/span>&lt;span class="cl">&lt;span class="n">logger&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">info&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="sa">f&lt;/span>&lt;span class="s2">&amp;#34;Client cookies updated: &lt;/span>&lt;span class="si">{&lt;/span>&lt;span class="n">client&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">cookie&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>As you see, we rely on our module code by using the &lt;code>client.call_api&lt;/code> instruction and the cookie update: &lt;code>client.cookie = s[2].get('Set-Cookie')&lt;/code>.&lt;/p>
&lt;p>&lt;strong>Output&lt;/strong>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="ln">1&lt;/span>&lt;span class="cl">DEMO_VCENTER Starting a new session
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">2&lt;/span>&lt;span class="cl">DEMO_VCENTER New session is created
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">3&lt;/span>&lt;span class="cl">DEMO_VCENTER Setting new session authorization token in cookies
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">4&lt;/span>&lt;span class="cl">DEMO_VCENTER Client cookies updated: vmware-api-session-id=5cebc...;Path=/rest;Secure;HttpOnly
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="get-some-content">Get some content&lt;/h3>
&lt;p>We will use our new session to get some data from the vCenter API.&lt;/p>
&lt;p>Listing VMs:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="ln">1&lt;/span>&lt;span class="cl">&lt;span class="c1"># List VM&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">2&lt;/span>&lt;span class="cl">&lt;span class="n">logger&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">debug&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;Listing VMs...&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">3&lt;/span>&lt;span class="cl">&lt;span class="n">instance&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">vc_client&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">VM_Api&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">client&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">4&lt;/span>&lt;span class="cl">&lt;span class="k">for&lt;/span> &lt;span class="n">vm&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="n">instance&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">list&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">value&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">5&lt;/span>&lt;span class="cl"> &lt;span class="n">logger&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">info&lt;/span>&lt;span class="p">(&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">6&lt;/span>&lt;span class="cl"> &lt;span class="sa">f&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="si">{&lt;/span>&lt;span class="n">vm&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">name&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">: &lt;/span>&lt;span class="si">{&lt;/span>&lt;span class="n">vm&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">power_state&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2"> / vCPU: &lt;/span>&lt;span class="si">{&lt;/span>&lt;span class="n">vm&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">cpu_count&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2"> / Mem: &lt;/span>&lt;span class="si">{&lt;/span>&lt;span class="n">vm&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">memory_size_mi_b&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2"> Mb&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">7&lt;/span>&lt;span class="cl"> &lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">8&lt;/span>&lt;span class="cl"> &lt;span class="n">keep_last&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">vm&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;strong>Output&lt;/strong>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="ln"> 1&lt;/span>&lt;span class="cl">DEMO_VCENTER Listing VMs...
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 2&lt;/span>&lt;span class="cl">DEMO_VCENTER LRI_RancherMaster: POWERED_ON / vCPU: 4 / Mem: 8192 Mb
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 3&lt;/span>&lt;span class="cl">DEMO_VCENTER LRI_vRO: POWERED_ON / vCPU: 2 / Mem: 6144 Mb
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 4&lt;/span>&lt;span class="cl">DEMO_VCENTER LRI_vcd: POWERED_ON / vCPU: 2 / Mem: 12288 Mb
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 5&lt;/span>&lt;span class="cl">DEMO_VCENTER LRI_rabbitmq: POWERED_ON / vCPU: 2 / Mem: 3072 Mb
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 6&lt;/span>&lt;span class="cl">DEMO_VCENTER ESXi7-01: POWERED_ON / vCPU: 2 / Mem: 4096 Mb
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 7&lt;/span>&lt;span class="cl">DEMO_VCENTER vcsa7: POWERED_ON / vCPU: 2 / Mem: 12288 Mb
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 8&lt;/span>&lt;span class="cl">DEMO_VCENTER ESXi7-02: POWERED_ON / vCPU: 2 / Mem: 4096 Mb
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 9&lt;/span>&lt;span class="cl">DEMO_VCENTER ESXi7-03: POWERED_ON / vCPU: 2 / Mem: 4096 Mb
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">10&lt;/span>&lt;span class="cl">DEMO_VCENTER LRI_ubuntu01: POWERED_ON / vCPU: 2 / Mem: 1024 Mb
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">11&lt;/span>&lt;span class="cl">DEMO_VCENTER LRI_photon01: POWERED_ON / vCPU: 1 / Mem: 2048 Mb
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">12&lt;/span>&lt;span class="cl">DEMO_VCENTER DCScope: POWERED_ON / vCPU: 2 / Mem: 8192 Mb
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">13&lt;/span>&lt;span class="cl">DEMO_VCENTER FaH_1.0.0_01: POWERED_ON / vCPU: 8 / Mem: 8192 Mb
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>As you can see, we kept the last VM from the list to get more details:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="ln"> 1&lt;/span>&lt;span class="cl">&lt;span class="c1"># Get more details for last VM&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 2&lt;/span>&lt;span class="cl">&lt;span class="n">logger&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">debug&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;Getting details about last VM...&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 3&lt;/span>&lt;span class="cl">&lt;span class="n">vm_detailled&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">instance&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">get&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">keep_last&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">vm&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">value&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 4&lt;/span>&lt;span class="cl">&lt;span class="n">logger&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">info&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;Data:&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span> &lt;span class="o">+&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 5&lt;/span>&lt;span class="cl"> &lt;span class="n">json&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">dumps&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">vm_detailled&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">to_dict&lt;/span>&lt;span class="p">(),&lt;/span> &lt;span class="n">indent&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">default&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nb">str&lt;/span>&lt;span class="p">))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 6&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 7&lt;/span>&lt;span class="cl">&lt;span class="c1"># Get its network&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 8&lt;/span>&lt;span class="cl">&lt;span class="n">logger&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">debug&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;Getting a specifc detail about a VM:&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 9&lt;/span>&lt;span class="cl">&lt;span class="n">nic&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">vm_detailled&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">nics&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">value&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">10&lt;/span>&lt;span class="cl">&lt;span class="n">logger&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">info&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="sa">f&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="si">{&lt;/span>&lt;span class="n">keep_last&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">name&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2"> MAC address: &lt;/span>&lt;span class="si">{&lt;/span>&lt;span class="n">nic&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">mac_address&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;strong>Output&lt;/strong> (only the VM details content):&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-json" data-lang="json">&lt;span class="line">&lt;span class="ln"> 1&lt;/span>&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 2&lt;/span>&lt;span class="cl"> &lt;span class="nt">&amp;#34;memory&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 3&lt;/span>&lt;span class="cl"> &lt;span class="nt">&amp;#34;hot_add_limit_mi_b&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">null&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 4&lt;/span>&lt;span class="cl"> &lt;span class="nt">&amp;#34;hot_add_enabled&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">false&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 5&lt;/span>&lt;span class="cl"> &lt;span class="nt">&amp;#34;hot_add_increment_size_mi_b&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">null&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 6&lt;/span>&lt;span class="cl"> &lt;span class="nt">&amp;#34;size_mi_b&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">8192&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 7&lt;/span>&lt;span class="cl"> &lt;span class="p">},&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 8&lt;/span>&lt;span class="cl"> &lt;span class="nt">&amp;#34;hardware&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 9&lt;/span>&lt;span class="cl"> &lt;span class="nt">&amp;#34;upgrade_status&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;NONE&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 10&lt;/span>&lt;span class="cl"> &lt;span class="nt">&amp;#34;upgrade_version&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">null&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 11&lt;/span>&lt;span class="cl"> &lt;span class="nt">&amp;#34;version&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;VMX_13&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 12&lt;/span>&lt;span class="cl"> &lt;span class="nt">&amp;#34;upgrade_error&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">null&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 13&lt;/span>&lt;span class="cl"> &lt;span class="nt">&amp;#34;upgrade_policy&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;NEVER&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 14&lt;/span>&lt;span class="cl"> &lt;span class="p">},&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 15&lt;/span>&lt;span class="cl"> &lt;span class="nt">&amp;#34;disks&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">[&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 16&lt;/span>&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 17&lt;/span>&lt;span class="cl"> &lt;span class="nt">&amp;#34;value&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 18&lt;/span>&lt;span class="cl"> &lt;span class="nt">&amp;#34;label&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;Hard disk 1&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 19&lt;/span>&lt;span class="cl"> &lt;span class="nt">&amp;#34;scsi&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 20&lt;/span>&lt;span class="cl"> &lt;span class="nt">&amp;#34;unit&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 21&lt;/span>&lt;span class="cl"> &lt;span class="nt">&amp;#34;bus&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 22&lt;/span>&lt;span class="cl"> &lt;span class="p">},&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 23&lt;/span>&lt;span class="cl"> &lt;span class="nt">&amp;#34;capacity&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">4294967296&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 24&lt;/span>&lt;span class="cl"> &lt;span class="nt">&amp;#34;type&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;SCSI&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 25&lt;/span>&lt;span class="cl"> &lt;span class="nt">&amp;#34;sata&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">null&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 26&lt;/span>&lt;span class="cl"> &lt;span class="nt">&amp;#34;ide&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">null&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 27&lt;/span>&lt;span class="cl"> &lt;span class="nt">&amp;#34;backing&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 28&lt;/span>&lt;span class="cl"> &lt;span class="nt">&amp;#34;type&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;VMDK_FILE&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 29&lt;/span>&lt;span class="cl"> &lt;span class="nt">&amp;#34;vmdk_file&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;[vsanDatastore] d40d765e-a8c1-6d10-0d40-a0369fbcc808/FaH_1.0.0_01.vmdk&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 30&lt;/span>&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 31&lt;/span>&lt;span class="cl"> &lt;span class="p">},&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 32&lt;/span>&lt;span class="cl"> &lt;span class="nt">&amp;#34;key&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;2000&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 33&lt;/span>&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 34&lt;/span>&lt;span class="cl"> &lt;span class="p">],&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 35&lt;/span>&lt;span class="cl"> &lt;span class="nt">&amp;#34;cdroms&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">[&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 36&lt;/span>&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 37&lt;/span>&lt;span class="cl"> &lt;span class="nt">&amp;#34;value&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 38&lt;/span>&lt;span class="cl"> &lt;span class="nt">&amp;#34;label&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;CD/DVD drive 1&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 39&lt;/span>&lt;span class="cl"> &lt;span class="nt">&amp;#34;backing&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 40&lt;/span>&lt;span class="cl"> &lt;span class="nt">&amp;#34;type&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;CLIENT_DEVICE&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 41&lt;/span>&lt;span class="cl"> &lt;span class="nt">&amp;#34;device_access_type&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;PASSTHRU&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 42&lt;/span>&lt;span class="cl"> &lt;span class="nt">&amp;#34;iso_file&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">null&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 43&lt;/span>&lt;span class="cl"> &lt;span class="nt">&amp;#34;host_device&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">null&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 44&lt;/span>&lt;span class="cl"> &lt;span class="nt">&amp;#34;auto_detect&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">null&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 45&lt;/span>&lt;span class="cl"> &lt;span class="p">},&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 46&lt;/span>&lt;span class="cl"> &lt;span class="nt">&amp;#34;state&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;NOT_CONNECTED&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 47&lt;/span>&lt;span class="cl"> &lt;span class="nt">&amp;#34;type&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;IDE&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 48&lt;/span>&lt;span class="cl"> &lt;span class="nt">&amp;#34;sata&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">null&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 49&lt;/span>&lt;span class="cl"> &lt;span class="nt">&amp;#34;allow_guest_control&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">true&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 50&lt;/span>&lt;span class="cl"> &lt;span class="nt">&amp;#34;ide&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 51&lt;/span>&lt;span class="cl"> &lt;span class="nt">&amp;#34;primary&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">true&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 52&lt;/span>&lt;span class="cl"> &lt;span class="nt">&amp;#34;master&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">true&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 53&lt;/span>&lt;span class="cl"> &lt;span class="p">},&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 54&lt;/span>&lt;span class="cl"> &lt;span class="nt">&amp;#34;start_connected&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">false&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 55&lt;/span>&lt;span class="cl"> &lt;span class="p">},&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 56&lt;/span>&lt;span class="cl"> &lt;span class="nt">&amp;#34;key&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;3000&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 57&lt;/span>&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 58&lt;/span>&lt;span class="cl"> &lt;span class="p">],&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 59&lt;/span>&lt;span class="cl"> &lt;span class="nt">&amp;#34;boot_devices&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">[&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 60&lt;/span>&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 61&lt;/span>&lt;span class="cl"> &lt;span class="nt">&amp;#34;type&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;CDROM&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 62&lt;/span>&lt;span class="cl"> &lt;span class="nt">&amp;#34;nic&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">null&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 63&lt;/span>&lt;span class="cl"> &lt;span class="nt">&amp;#34;disks&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">null&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 64&lt;/span>&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 65&lt;/span>&lt;span class="cl"> &lt;span class="p">],&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 66&lt;/span>&lt;span class="cl"> &lt;span class="nt">&amp;#34;nics&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">[&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 67&lt;/span>&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 68&lt;/span>&lt;span class="cl"> &lt;span class="nt">&amp;#34;value&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 69&lt;/span>&lt;span class="cl"> &lt;span class="nt">&amp;#34;wake_on_lan_enabled&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">false&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 70&lt;/span>&lt;span class="cl"> &lt;span class="nt">&amp;#34;state&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;CONNECTED&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 71&lt;/span>&lt;span class="cl"> &lt;span class="nt">&amp;#34;label&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;Network adapter 1&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 72&lt;/span>&lt;span class="cl"> &lt;span class="nt">&amp;#34;backing&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 73&lt;/span>&lt;span class="cl"> &lt;span class="nt">&amp;#34;network&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;dvportgroup-100&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 74&lt;/span>&lt;span class="cl"> &lt;span class="nt">&amp;#34;distributed_port&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;69&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 75&lt;/span>&lt;span class="cl"> &lt;span class="nt">&amp;#34;distributed_switch_uuid&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;50 2f 42 20 b1 c3 a5 2a-0d 95 b6 0c ab 7e b5 da&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 76&lt;/span>&lt;span class="cl"> &lt;span class="nt">&amp;#34;network_name&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">null&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 77&lt;/span>&lt;span class="cl"> &lt;span class="nt">&amp;#34;opaque_network_id&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">null&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 78&lt;/span>&lt;span class="cl"> &lt;span class="nt">&amp;#34;type&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;DISTRIBUTED_PORTGROUP&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 79&lt;/span>&lt;span class="cl"> &lt;span class="nt">&amp;#34;opaque_network_type&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">null&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 80&lt;/span>&lt;span class="cl"> &lt;span class="nt">&amp;#34;connection_cookie&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">1884582175&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 81&lt;/span>&lt;span class="cl"> &lt;span class="nt">&amp;#34;host_device&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">null&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 82&lt;/span>&lt;span class="cl"> &lt;span class="p">},&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 83&lt;/span>&lt;span class="cl"> &lt;span class="nt">&amp;#34;start_connected&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">true&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 84&lt;/span>&lt;span class="cl"> &lt;span class="nt">&amp;#34;pci_slot_number&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">160&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 85&lt;/span>&lt;span class="cl"> &lt;span class="nt">&amp;#34;type&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;VMXNET3&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 86&lt;/span>&lt;span class="cl"> &lt;span class="nt">&amp;#34;upt_compatibility_enabled&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">true&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 87&lt;/span>&lt;span class="cl"> &lt;span class="nt">&amp;#34;allow_guest_control&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">true&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 88&lt;/span>&lt;span class="cl"> &lt;span class="nt">&amp;#34;mac_type&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;ASSIGNED&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 89&lt;/span>&lt;span class="cl"> &lt;span class="nt">&amp;#34;mac_address&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;00:50:56:af:db:98&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 90&lt;/span>&lt;span class="cl"> &lt;span class="p">},&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 91&lt;/span>&lt;span class="cl"> &lt;span class="nt">&amp;#34;key&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;4000&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 92&lt;/span>&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 93&lt;/span>&lt;span class="cl"> &lt;span class="p">],&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 94&lt;/span>&lt;span class="cl"> &lt;span class="nt">&amp;#34;parallel_ports&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">[],&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 95&lt;/span>&lt;span class="cl"> &lt;span class="nt">&amp;#34;guest_os&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;VMWARE_PHOTON_64&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 96&lt;/span>&lt;span class="cl"> &lt;span class="nt">&amp;#34;name&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;FaH_1.0.0_01&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 97&lt;/span>&lt;span class="cl"> &lt;span class="nt">&amp;#34;power_state&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;POWERED_ON&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 98&lt;/span>&lt;span class="cl"> &lt;span class="nt">&amp;#34;sata_adapters&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">[],&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 99&lt;/span>&lt;span class="cl"> &lt;span class="nt">&amp;#34;cpu&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">100&lt;/span>&lt;span class="cl"> &lt;span class="nt">&amp;#34;count&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">8&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">101&lt;/span>&lt;span class="cl"> &lt;span class="nt">&amp;#34;hot_add_enabled&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">false&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">102&lt;/span>&lt;span class="cl"> &lt;span class="nt">&amp;#34;hot_remove_enabled&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">false&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">103&lt;/span>&lt;span class="cl"> &lt;span class="nt">&amp;#34;cores_per_socket&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">104&lt;/span>&lt;span class="cl"> &lt;span class="p">},&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">105&lt;/span>&lt;span class="cl"> &lt;span class="nt">&amp;#34;serial_ports&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">[],&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">106&lt;/span>&lt;span class="cl"> &lt;span class="nt">&amp;#34;floppies&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">[],&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">107&lt;/span>&lt;span class="cl"> &lt;span class="nt">&amp;#34;scsi_adapters&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">[&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">108&lt;/span>&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">109&lt;/span>&lt;span class="cl"> &lt;span class="nt">&amp;#34;value&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">110&lt;/span>&lt;span class="cl"> &lt;span class="nt">&amp;#34;pci_slot_number&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">16&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">111&lt;/span>&lt;span class="cl"> &lt;span class="nt">&amp;#34;type&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;LSILOGIC&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">112&lt;/span>&lt;span class="cl"> &lt;span class="nt">&amp;#34;label&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;SCSI controller 0&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">113&lt;/span>&lt;span class="cl"> &lt;span class="nt">&amp;#34;scsi&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">114&lt;/span>&lt;span class="cl"> &lt;span class="nt">&amp;#34;unit&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">7&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">115&lt;/span>&lt;span class="cl"> &lt;span class="nt">&amp;#34;bus&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">116&lt;/span>&lt;span class="cl"> &lt;span class="p">},&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">117&lt;/span>&lt;span class="cl"> &lt;span class="nt">&amp;#34;sharing&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;NONE&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">118&lt;/span>&lt;span class="cl"> &lt;span class="p">},&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">119&lt;/span>&lt;span class="cl"> &lt;span class="nt">&amp;#34;key&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;1000&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">120&lt;/span>&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">121&lt;/span>&lt;span class="cl"> &lt;span class="p">],&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">122&lt;/span>&lt;span class="cl"> &lt;span class="nt">&amp;#34;boot&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">123&lt;/span>&lt;span class="cl"> &lt;span class="nt">&amp;#34;retry_delay&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">10000&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">124&lt;/span>&lt;span class="cl"> &lt;span class="nt">&amp;#34;enter_setup_mode&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">false&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">125&lt;/span>&lt;span class="cl"> &lt;span class="nt">&amp;#34;delay&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">126&lt;/span>&lt;span class="cl"> &lt;span class="nt">&amp;#34;type&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;BIOS&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">127&lt;/span>&lt;span class="cl"> &lt;span class="nt">&amp;#34;network_protocol&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">null&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">128&lt;/span>&lt;span class="cl"> &lt;span class="nt">&amp;#34;efi_legacy_boot&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">null&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">129&lt;/span>&lt;span class="cl"> &lt;span class="nt">&amp;#34;retry&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">false&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">130&lt;/span>&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">131&lt;/span>&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="vcloud-director-sdk-with-codegen">vCloud Director SDK with Codegen&lt;/h2>
&lt;p>Last example, using vCloud Director.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="ln"> 1&lt;/span>&lt;span class="cl">&lt;span class="c1"># Get the API swagger description&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 2&lt;/span>&lt;span class="cl">curl -sk https://&lt;span class="nv">$VMWARE_VCD_HOSTNAME&lt;/span>/api-explorer/tenant/orgdemo/cloudapi.json &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 3&lt;/span>&lt;span class="cl">&lt;span class="se">&lt;/span> &amp;gt; codegen/in/cloudapi.json
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 4&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 5&lt;/span>&lt;span class="cl">&lt;span class="c1"># Create a config file for our future python module&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 6&lt;/span>&lt;span class="cl">&lt;span class="nb">echo&lt;/span> &lt;span class="s1">&amp;#39;{
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 7&lt;/span>&lt;span class="cl">&lt;span class="s1"> &amp;#34;packageName&amp;#34;:&amp;#34;vcd_client&amp;#34;,
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 8&lt;/span>&lt;span class="cl">&lt;span class="s1"> &amp;#34;projectName&amp;#34;:&amp;#34;vcd-client&amp;#34;,
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 9&lt;/span>&lt;span class="cl">&lt;span class="s1"> &amp;#34;packageVersion&amp;#34;:&amp;#34;9.7.1&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">10&lt;/span>&lt;span class="cl">&lt;span class="s1">}&amp;#39;&lt;/span> &amp;gt; codegen/in/config_vcd_client.json
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">11&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">12&lt;/span>&lt;span class="cl">&lt;span class="c1"># Generate the SDK&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">13&lt;/span>&lt;span class="cl">docker run --rm -v &lt;span class="si">${&lt;/span>&lt;span class="nv">PWD&lt;/span>&lt;span class="si">}&lt;/span>/codegen:/local &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">14&lt;/span>&lt;span class="cl">&lt;span class="se">&lt;/span> swaggerapi/swagger-codegen-cli generate &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">15&lt;/span>&lt;span class="cl">&lt;span class="se">&lt;/span> -i /local/in/cloudapi.json &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">16&lt;/span>&lt;span class="cl">&lt;span class="se">&lt;/span> -o /local/out/python-vcd &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">17&lt;/span>&lt;span class="cl">&lt;span class="se">&lt;/span> -c /local/in/config_vcd_client.json &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">18&lt;/span>&lt;span class="cl">&lt;span class="se">&lt;/span> -l python
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">19&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">20&lt;/span>&lt;span class="cl">&lt;span class="c1"># Install new python mdule with PIP&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">21&lt;/span>&lt;span class="cl">pip install codegen/out/python-vcd
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="prepare-a-client-object-1">Prepare a client object&lt;/h3>
&lt;p>We import our new &lt;code>vcd_client&lt;/code> module, we setup the target hostname, the authentication settings.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="ln"> 1&lt;/span>&lt;span class="cl">&lt;span class="kn">import&lt;/span> &lt;span class="nn">vcd_client&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 2&lt;/span>&lt;span class="cl">&lt;span class="kn">from&lt;/span> &lt;span class="nn">vcd_client.rest&lt;/span> &lt;span class="kn">import&lt;/span> &lt;span class="n">ApiException&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 3&lt;/span>&lt;span class="cl">&lt;span class="kn">from&lt;/span> &lt;span class="nn">utils&lt;/span> &lt;span class="kn">import&lt;/span> &lt;span class="o">*&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 4&lt;/span>&lt;span class="cl">&lt;span class="kn">import&lt;/span> &lt;span class="nn">os&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 5&lt;/span>&lt;span class="cl">&lt;span class="n">logger&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">logging&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">getLogger&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;DEMO_VCD&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 6&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 7&lt;/span>&lt;span class="cl">&lt;span class="c1"># Configure API&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 8&lt;/span>&lt;span class="cl">&lt;span class="n">configuration&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">vcd_client&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Configuration&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 9&lt;/span>&lt;span class="cl">&lt;span class="n">configuration&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">verify_ssl&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kc">False&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">10&lt;/span>&lt;span class="cl">&lt;span class="n">configuration&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">host&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="sa">f&lt;/span>&lt;span class="s2">&amp;#34;https://&lt;/span>&lt;span class="si">{&lt;/span>&lt;span class="n">os&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">environ&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">get&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;VMWARE_VCD_HOSTNAME&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">/cloudapi&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">11&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">12&lt;/span>&lt;span class="cl">&lt;span class="c1"># credentials&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">13&lt;/span>&lt;span class="cl">&lt;span class="n">_username&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">os&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">environ&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">get&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;VMWARE_VCD_USERNAME&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">14&lt;/span>&lt;span class="cl">&lt;span class="n">_password&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">os&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">environ&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">get&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;VMWARE_VCD_PASSWORD&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">15&lt;/span>&lt;span class="cl">&lt;span class="n">auth_str&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">basic_auth_str&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">_username&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">_password&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">16&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">17&lt;/span>&lt;span class="cl">&lt;span class="c1"># Create a client&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">18&lt;/span>&lt;span class="cl">&lt;span class="n">client&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">vcd_client&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">ApiClient&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">configuration&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="get-a-new-session-1">Get a new session&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="ln"> 1&lt;/span>&lt;span class="cl">&lt;span class="c1"># Get a new session&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 2&lt;/span>&lt;span class="cl">&lt;span class="k">try&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 3&lt;/span>&lt;span class="cl"> &lt;span class="n">logger&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">debug&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;Starting a new session&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 4&lt;/span>&lt;span class="cl"> &lt;span class="n">s&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">vcd_client&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">SessionsApi&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">client&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 5&lt;/span>&lt;span class="cl"> &lt;span class="n">s_headers&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">s&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">login_with_http_info&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">authorization&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">auth_str&lt;/span>&lt;span class="p">)[&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 6&lt;/span>&lt;span class="cl">&lt;span class="k">except&lt;/span> &lt;span class="n">ApiException&lt;/span> &lt;span class="k">as&lt;/span> &lt;span class="n">e&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 7&lt;/span>&lt;span class="cl"> &lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;Exception when creating session: &lt;/span>&lt;span class="si">%s&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span> &lt;span class="o">%&lt;/span> &lt;span class="n">e&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 8&lt;/span>&lt;span class="cl"> &lt;span class="n">exit&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 9&lt;/span>&lt;span class="cl">&lt;span class="n">logger&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">info&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;New session is created&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">10&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">11&lt;/span>&lt;span class="cl">&lt;span class="c1"># Update client with access token&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">12&lt;/span>&lt;span class="cl">&lt;span class="n">logger&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">debug&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;Setting new session authorization token in headers&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">13&lt;/span>&lt;span class="cl">&lt;span class="n">configuration&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">api_key_prefix&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s1">&amp;#39;Authorization&amp;#39;&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s1">&amp;#39;Bearer&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">14&lt;/span>&lt;span class="cl">&lt;span class="n">configuration&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">api_key&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s1">&amp;#39;Authorization&amp;#39;&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">s_headers&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">get&lt;/span>&lt;span class="p">(&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">15&lt;/span>&lt;span class="cl"> &lt;span class="s2">&amp;#34;X-VMWARE-VCLOUD-ACCESS-TOKEN&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">16&lt;/span>&lt;span class="cl">&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">17&lt;/span>&lt;span class="cl">&lt;span class="n">client&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">vcd_client&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">ApiClient&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">configuration&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">18&lt;/span>&lt;span class="cl">&lt;span class="n">logger&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">info&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="sa">f&lt;/span>&lt;span class="s2">&amp;#34;Client credentials updated to use access token: &lt;/span>&lt;span class="si">{&lt;/span>&lt;span class="n">s_headers&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">get&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;X-VMWARE-VCLOUD-ACCESS-TOKEN&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;strong>Output&lt;/strong>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="ln">1&lt;/span>&lt;span class="cl">DEMO_VCD Starting a new session
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">2&lt;/span>&lt;span class="cl">DEMO_VCD New session is created
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">3&lt;/span>&lt;span class="cl">DEMO_VCD Setting new session authorization token in headers
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">4&lt;/span>&lt;span class="cl">DEMO_VCD Client credentials updated to use access token: eyJhbGciOiJSUzI1NiJ9...
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="get-some-content-1">Get some content&lt;/h3>
&lt;p>We will use our session and list our rights in the current organization:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="ln">1&lt;/span>&lt;span class="cl">&lt;span class="c1"># List rights of the current user&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">2&lt;/span>&lt;span class="cl">&lt;span class="n">logger&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">debug&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;Getting rights of the current user&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">3&lt;/span>&lt;span class="cl">&lt;span class="n">rapi&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">vcd_client&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">RightsApi&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">client&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">4&lt;/span>&lt;span class="cl">&lt;span class="n">page&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">page_size&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">25&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">5&lt;/span>&lt;span class="cl">&lt;span class="k">try&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">6&lt;/span>&lt;span class="cl"> &lt;span class="k">for&lt;/span> &lt;span class="n">right&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="n">rapi&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">query_rights&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">page&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">page_size&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">values&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">7&lt;/span>&lt;span class="cl"> &lt;span class="n">logger&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">info&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34; - &amp;#34;&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">join&lt;/span>&lt;span class="p">([&lt;/span>&lt;span class="n">right&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">name&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">right&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">id&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">right&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">right_type&lt;/span>&lt;span class="p">]))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">8&lt;/span>&lt;span class="cl">&lt;span class="k">except&lt;/span> &lt;span class="n">ApiException&lt;/span> &lt;span class="k">as&lt;/span> &lt;span class="n">e&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">9&lt;/span>&lt;span class="cl"> &lt;span class="n">logger&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">error&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;Exception when calling RightsApi-&amp;gt;query_rights: &lt;/span>&lt;span class="si">%s&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span> &lt;span class="o">%&lt;/span> &lt;span class="n">e&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;strong>Output&lt;/strong> (only fist part):&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="ln">1&lt;/span>&lt;span class="cl">DEMO_VCD Getting rights of the current user
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">2&lt;/span>&lt;span class="cl">DEMO_VCD Organization vDC Gateway: Configure DNS - urn:vcloud:right:d85b0e92-b9e8-31af-9b19-23cd00cae7e7 - MODIFY
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">3&lt;/span>&lt;span class="cl">DEMO_VCD Organization vDC Gateway: View DNS - urn:vcloud:right:c6563392-f6b3-3dd6-9720-b304e6319672 - VIEW
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">4&lt;/span>&lt;span class="cl">DEMO_VCD Token: Manage - urn:vcloud:right:23e7a571-4928-3c49-891f-f835474a9dc3 - MODIFY
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">5&lt;/span>&lt;span class="cl">DEMO_VCD Token: Manage All - urn:vcloud:right:67878e89-9d94-302f-92fd-997313c68ee1 - MODIFY
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">6&lt;/span>&lt;span class="cl">DEMO_VCD API Explorer: View - urn:vcloud:right:9ff43a6c-2c50-3b53-b00f-6f020b6bb5a0 - VIEW
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="conclusion">Conclusion&lt;/h2>
&lt;p>As you see, it is very easy to generate a new API client SDK from a VMware product. Authentication could require some customization but the most limiting thing will be linked to the limited available actions through the REST API on some products.&lt;/p>
&lt;p>Anyway, for the available and documented REST API parts, you can now deliver/provide a lot of SDK, even without knowing the bases of the used language.&lt;/p></description></item><item><title>REST ❤ Swagger, 2 minutes to create an API SDK ⏱ – Codegen Demo – Part 1</title><link>https://vuptime.io/post/2020-04-01-rest-loves-swagger-demo/</link><pubDate>Wed, 01 Apr 2020 00:00:00 +0000</pubDate><guid>https://vuptime.io/2020/04/01/rest-loves-swagger-demo/</guid><description>
&lt;p>On March 30&lt;sup>th&lt;/sup>, I presented a webinar to the French VMUG community on the REST API subject and in particular on the way to generate API SDK clients without writing any code.&lt;/p>
&lt;p>Slide deck is published (only in french, sorry) here: &lt;a href="https://vupti.me/rls">vupti.me/rls&lt;/a>.&lt;/p>
&lt;p>As said in the slide deck, this presentation was greatly inspired by a VMworld session: &lt;a href="https://videos.vmworld.com/global/2019?q=The%2520Art%2520of%2520Code%2520That%2520Writes%2520Code">{CODE2216E} The art of code that writes code&lt;/a> (Kyle Ruddy @ VMware Inc.). I cannot encourage you enough to see the replay if you did not do it yet.&lt;/p>
&lt;p>The only part I did not pulished yet, was the demo part (even if, curious people may have found it &lt;a href="https://github.com/lrivallain/rest-loves-swagger/blob/master/demo/Swagger%20Code%20Gen%20%5BDemo%5D.ipynb">in the repository&lt;/a>).&lt;/p>
&lt;p>I was planning to find a way to host the Jupyter Notebook online but as some commands rely on docker commands... I could not fount a hoster that enable it. So, let's re-write it in 2 blog posts.&lt;/p>
&lt;h2 id="target-of-this-post">Target of this post&lt;/h2>
&lt;p>So this post aims to demonstrate how you can create API SDK clients with &lt;a href="https://swagger.io/tools/swagger-codegen/">Swagger Codegen&lt;/a>:&lt;/p>
&lt;ul>
&lt;li>Based on API documentation (both OpenAPI OASv3 and Swagger v2 are supported)&lt;/li>
&lt;li>In the language of your choice (see below for the list)&lt;/li>
&lt;li>Whitout writing any single line of code yourself (except for &lt;strong>usage&lt;/strong> of the generated SDK)&lt;/li>
&lt;li>In minutes !&lt;/li>
&lt;/ul>
&lt;p>Impossible? Let's see.&lt;/p>
&lt;h3 id="next-post">Next post&lt;/h3>
&lt;p>In a second post, I will demonstrate how to build/use SDK for VMware products: vCenter and vCloud Director.&lt;/p>
&lt;h2 id="prerequisites">Prerequisites&lt;/h2>
&lt;h3 id="docker">Docker&lt;/h3>
&lt;p>First, we need a docker setup (in order to avoid installing locally, the codegen software). I won't explain how to install and configure a docker host, this is not the point of the post.&lt;/p>
&lt;p>We get the docker image of Swagger Codegen:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="ln">1&lt;/span>&lt;span class="cl">docker pull swaggerapi/swagger-codegen-cli
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>If you prefer a local installation of Codegen, &lt;a href="https://github.com/swagger-api/swagger-codegen#compatibility">it is possible&lt;/a> but you will need to modify some of the following commands.&lt;/p>
&lt;h3 id="folders-structure">Folders structure&lt;/h3>
&lt;p>For the tests, we will create 2 folders, for &lt;code>in&lt;/code>put files and &lt;code>out&lt;/code>put ones within a &lt;code>codegen&lt;/code> folder:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="ln">1&lt;/span>&lt;span class="cl">mkdir -p codegen/in/ codegen/out/
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">2&lt;/span>&lt;span class="cl">ls codegen/ &lt;span class="c1"># should output &amp;#34;in out&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="python">Python&lt;/h3>
&lt;p>We will create some python modules for test. I suggest to use a virtualenv if you want to proceed the same tests and to install some dependencies:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="ln">1&lt;/span>&lt;span class="cl">wget https://github.com/lrivallain/rest-loves-swagger/raw/master/demo/requirements.txt
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">2&lt;/span>&lt;span class="cl">wget https://github.com/lrivallain/rest-loves-swagger/raw/master/demo/utils.py
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">3&lt;/span>&lt;span class="cl">pip install -r requirements.txt
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;blockquote>
&lt;p>&lt;strong>Warning:&lt;/strong> I strongly suggest that you review the content of all the files you download on your computer before using them!&lt;/p>
&lt;/blockquote>
&lt;h3 id="go">Go&lt;/h3>
&lt;p>A part of this post will provide a Go module. Install Go runtime to be able to test it.&lt;/p>
&lt;h2 id="available-languages">Available languages&lt;/h2>
&lt;p>Codegen supports tons of output languages. To demonstrate it, we can use the following command:&lt;/p>
&lt;p>(The &lt;code>sed&lt;/code> part is only to prettify the ouput)&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="ln">1&lt;/span>&lt;span class="cl">docker run --rm swaggerapi/swagger-codegen-cli langs | sed &amp;#39;s/,/\n /g&amp;#39;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>The output of the command will be something like:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="ln"> 1&lt;/span>&lt;span class="cl">Available languages: [ada
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 2&lt;/span>&lt;span class="cl"> ada-server
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 3&lt;/span>&lt;span class="cl"> akka-scala
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 4&lt;/span>&lt;span class="cl"> android
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 5&lt;/span>&lt;span class="cl"> apache2
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 6&lt;/span>&lt;span class="cl"> apex
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 7&lt;/span>&lt;span class="cl"> aspnetcore
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 8&lt;/span>&lt;span class="cl"> bash
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 9&lt;/span>&lt;span class="cl"> csharp
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">10&lt;/span>&lt;span class="cl"> clojure
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">11&lt;/span>&lt;span class="cl"> cwiki
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">12&lt;/span>&lt;span class="cl"> cpprest
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">13&lt;/span>&lt;span class="cl"> csharp-dotnet2
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">14&lt;/span>&lt;span class="cl"> dart
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">15&lt;/span>&lt;span class="cl"> dart-jaguar
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">16&lt;/span>&lt;span class="cl"> elixir
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">17&lt;/span>&lt;span class="cl"> elm
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">18&lt;/span>&lt;span class="cl"> eiffel
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">19&lt;/span>&lt;span class="cl"> erlang-client
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">20&lt;/span>&lt;span class="cl"> erlang-server
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">21&lt;/span>&lt;span class="cl"> finch
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">22&lt;/span>&lt;span class="cl"> flash
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">23&lt;/span>&lt;span class="cl"> python-flask
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">24&lt;/span>&lt;span class="cl"> go
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">25&lt;/span>&lt;span class="cl"> go-server
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">26&lt;/span>&lt;span class="cl"> groovy
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">27&lt;/span>&lt;span class="cl"> haskell-http-client
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">28&lt;/span>&lt;span class="cl"> haskell
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">29&lt;/span>&lt;span class="cl"> jmeter
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">30&lt;/span>&lt;span class="cl"> jaxrs-cxf-client
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">31&lt;/span>&lt;span class="cl"> jaxrs-cxf
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">32&lt;/span>&lt;span class="cl"> java
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">33&lt;/span>&lt;span class="cl"> inflector
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">34&lt;/span>&lt;span class="cl"> jaxrs-cxf-cdi
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">35&lt;/span>&lt;span class="cl"> jaxrs-spec
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">36&lt;/span>&lt;span class="cl"> jaxrs
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">37&lt;/span>&lt;span class="cl"> msf4j
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">38&lt;/span>&lt;span class="cl"> java-pkmst
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">39&lt;/span>&lt;span class="cl"> java-play-framework
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">40&lt;/span>&lt;span class="cl"> jaxrs-resteasy-eap
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">41&lt;/span>&lt;span class="cl"> jaxrs-resteasy
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">42&lt;/span>&lt;span class="cl"> javascript
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">43&lt;/span>&lt;span class="cl"> javascript-closure-angular
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">44&lt;/span>&lt;span class="cl"> java-vertx
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">45&lt;/span>&lt;span class="cl"> kotlin
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">46&lt;/span>&lt;span class="cl"> lua
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">47&lt;/span>&lt;span class="cl"> lumen
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">48&lt;/span>&lt;span class="cl"> nancyfx
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">49&lt;/span>&lt;span class="cl"> nodejs-server
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">50&lt;/span>&lt;span class="cl"> objc
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">51&lt;/span>&lt;span class="cl"> perl
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">52&lt;/span>&lt;span class="cl"> php
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">53&lt;/span>&lt;span class="cl"> powershell
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">54&lt;/span>&lt;span class="cl"> pistache-server
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">55&lt;/span>&lt;span class="cl"> python
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">56&lt;/span>&lt;span class="cl"> qt5cpp
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">57&lt;/span>&lt;span class="cl"> r
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">58&lt;/span>&lt;span class="cl"> rails5
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">59&lt;/span>&lt;span class="cl"> restbed
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">60&lt;/span>&lt;span class="cl"> ruby
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">61&lt;/span>&lt;span class="cl"> rust
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">62&lt;/span>&lt;span class="cl"> rust-server
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">63&lt;/span>&lt;span class="cl"> scala
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">64&lt;/span>&lt;span class="cl"> scala-gatling
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">65&lt;/span>&lt;span class="cl"> scala-lagom-server
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">66&lt;/span>&lt;span class="cl"> scalatra
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">67&lt;/span>&lt;span class="cl"> scalaz
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">68&lt;/span>&lt;span class="cl"> php-silex
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">69&lt;/span>&lt;span class="cl"> sinatra
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">70&lt;/span>&lt;span class="cl"> slim
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">71&lt;/span>&lt;span class="cl"> spring
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">72&lt;/span>&lt;span class="cl"> dynamic-html
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">73&lt;/span>&lt;span class="cl"> html2
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">74&lt;/span>&lt;span class="cl"> html
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">75&lt;/span>&lt;span class="cl"> swagger
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">76&lt;/span>&lt;span class="cl"> swagger-yaml
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">77&lt;/span>&lt;span class="cl"> swift5
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">78&lt;/span>&lt;span class="cl"> swift4
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">79&lt;/span>&lt;span class="cl"> swift3
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">80&lt;/span>&lt;span class="cl"> swift
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">81&lt;/span>&lt;span class="cl"> php-symfony
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">82&lt;/span>&lt;span class="cl"> tizen
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">83&lt;/span>&lt;span class="cl"> typescript-aurelia
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">84&lt;/span>&lt;span class="cl"> typescript-angular
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">85&lt;/span>&lt;span class="cl"> typescript-inversify
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">86&lt;/span>&lt;span class="cl"> typescript-angularjs
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">87&lt;/span>&lt;span class="cl"> typescript-fetch
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">88&lt;/span>&lt;span class="cl"> typescript-jquery
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">89&lt;/span>&lt;span class="cl"> typescript-node
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">90&lt;/span>&lt;span class="cl"> undertow
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">91&lt;/span>&lt;span class="cl"> ze-ph
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">92&lt;/span>&lt;span class="cl"> kotlin-server]
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Pick the one you need !&lt;/p>
&lt;h2 id="chuck-norris">Chuck Norris&lt;/h2>
&lt;p>We will use a sample API (&lt;a href="https://api.chucknorris.io">api.chucknorris.io&lt;/a>) for a first test.&lt;/p>
&lt;p>Here is our plan:&lt;/p>
&lt;ol>
&lt;li>Get API documentation (from &lt;a href="https://api.chucknorris.io/documentation">api.chucknorris.io/documentation&lt;/a>)&lt;/li>
&lt;li>Pretify with &lt;code>| python -m json.tool&lt;/code>&lt;/li>
&lt;li>Store the result in a file&lt;/li>
&lt;li>Display the first lines&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="ln">1&lt;/span>&lt;span class="cl">curl -s https://api.chucknorris.io/documentation &lt;span class="p">|&lt;/span> python -m json.tool &amp;gt; codegen/in/chucknorris.json
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">2&lt;/span>&lt;span class="cl">head -n &lt;span class="m">25&lt;/span> codegen/in/chucknorris.json
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>You should see the content of a swagger file, with the API description.&lt;/p>
&lt;h3 id="package-configuration">Package configuration&lt;/h3>
&lt;p>We will create a Codegen configuration file for a python module, with some information about naming and versioning.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="ln">1&lt;/span>&lt;span class="cl">&lt;span class="nb">echo&lt;/span> &lt;span class="s1">&amp;#39;{
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">2&lt;/span>&lt;span class="cl">&lt;span class="s1"> &amp;#34;packageName&amp;#34;:&amp;#34;chucknorris_client&amp;#34;,
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">3&lt;/span>&lt;span class="cl">&lt;span class="s1"> &amp;#34;projectName&amp;#34;:&amp;#34;chucknorris-client&amp;#34;,
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">4&lt;/span>&lt;span class="cl">&lt;span class="s1"> &amp;#34;packageVersion&amp;#34;:&amp;#34;1.0.0&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">5&lt;/span>&lt;span class="cl">&lt;span class="s1">}&amp;#39;&lt;/span> &amp;gt; codegen/in/config_chucknorris_client.json
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="sdk-generation">SDK generation&lt;/h3>
&lt;p>Now we specify to Codegen, to use both API documentation file and package configuration one to create a new &lt;strong>&lt;code>python&lt;/code>&lt;/strong> based client SDK:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="ln">1&lt;/span>&lt;span class="cl">docker run --rm -v &lt;span class="si">${&lt;/span>&lt;span class="nv">PWD&lt;/span>&lt;span class="si">}&lt;/span>/codegen:/local &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">2&lt;/span>&lt;span class="cl">&lt;span class="se">&lt;/span> swaggerapi/swagger-codegen-cli generate &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">3&lt;/span>&lt;span class="cl">&lt;span class="se">&lt;/span> -i /local/in/chucknorris.json &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">4&lt;/span>&lt;span class="cl">&lt;span class="se">&lt;/span> -o /local/out/python-chucknorris &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">5&lt;/span>&lt;span class="cl">&lt;span class="se">&lt;/span> -c /local/in/config_chucknorris_client.json &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">6&lt;/span>&lt;span class="cl">&lt;span class="se">&lt;/span> -l python
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>We now have a new python module:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="ln">1&lt;/span>&lt;span class="cl">ls codegen/out/python-chucknorris/
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Output:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="ln">1&lt;/span>&lt;span class="cl">README.md git_push.sh test
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">2&lt;/span>&lt;span class="cl">chucknorris_client requirements.txt test-requirements.txt
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">3&lt;/span>&lt;span class="cl">docs setup.py tox.ini
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>And we can pip install this module:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="ln">1&lt;/span>&lt;span class="cl">pip install codegen/out/python-chucknorris/
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="use-our-new-module">Use our new module&lt;/h3>
&lt;p>We create and run the following python file to use our new module:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="ln"> 1&lt;/span>&lt;span class="cl">&lt;span class="kn">import&lt;/span> &lt;span class="nn">chucknorris_client&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 2&lt;/span>&lt;span class="cl">&lt;span class="kn">from&lt;/span> &lt;span class="nn">chucknorris_client.rest&lt;/span> &lt;span class="kn">import&lt;/span> &lt;span class="n">ApiException&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 3&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 4&lt;/span>&lt;span class="cl">&lt;span class="kn">from&lt;/span> &lt;span class="nn">utils&lt;/span> &lt;span class="kn">import&lt;/span> &lt;span class="o">*&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 5&lt;/span>&lt;span class="cl">&lt;span class="n">logger&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">logging&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">getLogger&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;DEMO_CHUCKNORRIS&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 6&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 7&lt;/span>&lt;span class="cl">&lt;span class="c1"># Configure API&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 8&lt;/span>&lt;span class="cl">&lt;span class="n">logger&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">debug&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;Create an API client&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 9&lt;/span>&lt;span class="cl">&lt;span class="n">client&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">chucknorris_client&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">ApiClient&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">chucknorris_client&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Configuration&lt;/span>&lt;span class="p">())&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">10&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">11&lt;/span>&lt;span class="cl">&lt;span class="n">logger&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">debug&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;Target the Joke Controller&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">12&lt;/span>&lt;span class="cl">&lt;span class="n">api_instance&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">chucknorris_client&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">JokeControllerApi&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">client&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">13&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">14&lt;/span>&lt;span class="cl">&lt;span class="k">try&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">15&lt;/span>&lt;span class="cl"> &lt;span class="n">logger&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">debug&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;Get a random joke:&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">16&lt;/span>&lt;span class="cl"> &lt;span class="n">api_response&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">api_instance&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">get_random_joke_value_using_get&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">17&lt;/span>&lt;span class="cl"> &lt;span class="n">logger&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">info&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">api_response&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">18&lt;/span>&lt;span class="cl">&lt;span class="k">except&lt;/span> &lt;span class="n">ApiException&lt;/span> &lt;span class="k">as&lt;/span> &lt;span class="n">e&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">19&lt;/span>&lt;span class="cl"> &lt;span class="n">logger&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">error&lt;/span>&lt;span class="p">(&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">20&lt;/span>&lt;span class="cl"> &lt;span class="s2">&amp;#34;Exception when calling JokeControllerApi-&amp;gt;get_random_joke_value_using_get: &lt;/span>&lt;span class="si">%s&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span> &lt;span class="o">%&lt;/span> &lt;span class="n">e&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">21&lt;/span>&lt;span class="cl"> &lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>You can now run it and get the following result:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="ln">1&lt;/span>&lt;span class="cl">DEMO_CHUCKNORRIS Create an API client
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">2&lt;/span>&lt;span class="cl">DEMO_CHUCKNORRIS Target the Joke Controller
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">3&lt;/span>&lt;span class="cl">DEMO_CHUCKNORRIS Get a random joke:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">4&lt;/span>&lt;span class="cl">DEMO_CHUCKNORRIS Chuck Norris was worshipped as a god by the Eskimos. That is why they had igloos modelled after his signature move.
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Please consider that most of the python code we used is about the logger and not the complexity of getting a random Chuck Norris fact. If you don't, Chuck Norris may come to you for an explaination.&lt;/p>
&lt;h3 id="same-with-go-">Same with Go ?&lt;/h3>
&lt;p>Lets do the same, with Go:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="ln">1&lt;/span>&lt;span class="cl">docker run --rm -v &lt;span class="si">${&lt;/span>&lt;span class="nv">PWD&lt;/span>&lt;span class="si">}&lt;/span>/codegen:/local &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">2&lt;/span>&lt;span class="cl">&lt;span class="se">&lt;/span> swaggerapi/swagger-codegen-cli generate &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">3&lt;/span>&lt;span class="cl">&lt;span class="se">&lt;/span> -i /local/in/chucknorris.json &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">4&lt;/span>&lt;span class="cl">&lt;span class="se">&lt;/span> -o /local/out/gochucknorris &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">5&lt;/span>&lt;span class="cl">&lt;span class="se">&lt;/span> -DpackageName&lt;span class="o">=&lt;/span>gochucknorris &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">6&lt;/span>&lt;span class="cl">&lt;span class="se">&lt;/span> -l go
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>The &lt;code>Go&lt;/code> test file (for example: &lt;code>codegen/chuck.go&lt;/code>):&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-go" data-lang="go">&lt;span class="line">&lt;span class="ln"> 1&lt;/span>&lt;span class="cl">&lt;span class="kn">package&lt;/span> &lt;span class="nx">main&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 2&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 3&lt;/span>&lt;span class="cl">&lt;span class="kn">import&lt;/span> &lt;span class="p">(&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 4&lt;/span>&lt;span class="cl"> &lt;span class="s">&amp;#34;log&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 5&lt;/span>&lt;span class="cl"> &lt;span class="nx">cn&lt;/span> &lt;span class="s">&amp;#34;out/gochucknorris&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 6&lt;/span>&lt;span class="cl"> &lt;span class="s">&amp;#34;golang.org/x/net/context&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 7&lt;/span>&lt;span class="cl">&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 8&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 9&lt;/span>&lt;span class="cl">&lt;span class="kd">func&lt;/span> &lt;span class="nf">main&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">10&lt;/span>&lt;span class="cl"> &lt;span class="nx">log&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;New API client with empty configuration&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">11&lt;/span>&lt;span class="cl"> &lt;span class="nx">client&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">cn&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">NewAPIClient&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">cn&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">NewConfiguration&lt;/span>&lt;span class="p">())&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">12&lt;/span>&lt;span class="cl"> &lt;span class="nx">log&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Get random joke&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">13&lt;/span>&lt;span class="cl"> &lt;span class="nx">joke&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">r&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="o">:=&lt;/span> &lt;span class="nx">client&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">JokeControllerApi&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">GetRandomJokeValueUsingGET&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">context&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Background&lt;/span>&lt;span class="p">(),&lt;/span> &lt;span class="kc">nil&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">14&lt;/span>&lt;span class="cl"> &lt;span class="c1">// Test error
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">15&lt;/span>&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="k">if&lt;/span> &lt;span class="nx">err&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="kc">nil&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">16&lt;/span>&lt;span class="cl"> &lt;span class="nx">log&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Error:&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">err&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">17&lt;/span>&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">18&lt;/span>&lt;span class="cl"> &lt;span class="c1">// Test HTTP Response code
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">19&lt;/span>&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="k">if&lt;/span> &lt;span class="nx">r&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">StatusCode&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="mi">200&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">20&lt;/span>&lt;span class="cl"> &lt;span class="nx">log&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nf">Print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">joke&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Value&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">21&lt;/span>&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">22&lt;/span>&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>And the result of a &lt;code>go run codegen/chuck.go&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="ln">1&lt;/span>&lt;span class="cl">2020/04/01 17:28:11 New API client with empty configuration
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">2&lt;/span>&lt;span class="cl">2020/04/01 17:28:11 Get random joke
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">3&lt;/span>&lt;span class="cl">2020/04/01 17:28:12 Chuck Norris can levitate birds.
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="conclusion">Conclusion&lt;/h2>
&lt;p>How long to get this new API SDK client in a new language? Less than a minute !&lt;/p>
&lt;p>In the next post, we will apply this process to two VMware products:&lt;/p>
&lt;ul>
&lt;li>vCenter (6.7 only sorry!)&lt;/li>
&lt;li>vCloud Director&lt;/li>
&lt;/ul></description></item><item><title>Interact with the vRealize Automation IaaS objects on vRealize Orchestrator</title><link>https://vuptime.io/post/2019-12-13-use-iaas-object-in-vro/</link><pubDate>Fri, 13 Dec 2019 00:00:00 +0000</pubDate><guid>https://vuptime.io/2019/12/13/use-iaas-object-in-vro/</guid><description>
&lt;p>As described on another &lt;a href="https://vuptime.io/cards/vra-linqpad-explore-iaas-objects/">blog post&lt;/a>, vRA IaaS objects can be gathered using the model manager.
This article will show you how to interact with this kind of object using &lt;code>vRealize Orchestrator&lt;/code>.&lt;/p>
&lt;p>On this first sample, we are trying to get a virtual machine named &lt;code>TESTVM02&lt;/code> on the model manager.
The VirtualMachine object has a property called &lt;code>VirtualMachineName&lt;/code> that we can used to filter the virtual machine by its name.&lt;/p>
&lt;figure>&lt;img src="https://vuptime.io/images/iaas_vro/model_manager_vm.png"/>&lt;figcaption>
&lt;h4>Image&lt;/h4>
&lt;/figcaption>
&lt;/figure>
&lt;p>Here is the javascript code in order to get this virtual machine machine.
It will return a object of type &lt;a href="http://www.vroapi.com/Class/vCAC/7.2.0/VCACEntity">VCAC:Entity&lt;/a>.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-javascript" data-lang="javascript">&lt;span class="line">&lt;span class="ln"> 1&lt;/span>&lt;span class="cl">&lt;span class="c1">// Inputs : vcacHost : vCAC:vCACHOST
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 2&lt;/span>&lt;span class="cl">&lt;span class="c1">&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 3&lt;/span>&lt;span class="cl">&lt;span class="c1">// Define the virtual machine name to search
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 4&lt;/span>&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="kd">var&lt;/span> &lt;span class="nx">vmName&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s1">&amp;#39;TESTVM02&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 5&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 6&lt;/span>&lt;span class="cl">&lt;span class="c1">// Use the management model
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 7&lt;/span>&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="kd">var&lt;/span> &lt;span class="nx">modelName&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s1">&amp;#39;ManagementModelEntities.svc&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 8&lt;/span>&lt;span class="cl">&lt;span class="c1">// Get the virtual machines object
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 9&lt;/span>&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="kd">var&lt;/span> &lt;span class="nx">entitySetName&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s1">&amp;#39;VirtualMachines&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">10&lt;/span>&lt;span class="cl">&lt;span class="c1">// Filter the result by the property VirtualMachineName
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">11&lt;/span>&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="kd">var&lt;/span> &lt;span class="nx">filter&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;VirtualMachineName eq &amp;#39;&amp;#34;&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="nx">vmName&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="s2">&amp;#34;&amp;#39;&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">12&lt;/span>&lt;span class="cl">&lt;span class="kd">var&lt;/span> &lt;span class="nx">orderBy&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kc">null&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">13&lt;/span>&lt;span class="cl">&lt;span class="kd">var&lt;/span> &lt;span class="nx">top&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kc">null&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">14&lt;/span>&lt;span class="cl">&lt;span class="kd">var&lt;/span> &lt;span class="nx">skip&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">15&lt;/span>&lt;span class="cl">&lt;span class="kd">var&lt;/span> &lt;span class="nx">headers&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kc">null&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">16&lt;/span>&lt;span class="cl">&lt;span class="kd">var&lt;/span> &lt;span class="nx">select&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kc">null&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">17&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">18&lt;/span>&lt;span class="cl">&lt;span class="c1">// Query the model manager
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">19&lt;/span>&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="kd">var&lt;/span> &lt;span class="nx">vms&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">vCACEntityManager&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">readModelEntitiesBySystemQuery&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">vcacHost&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">id&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">modelName&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">entitySetName&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">filter&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">orderBy&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">select&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">top&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">skip&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">headers&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">20&lt;/span>&lt;span class="cl">&lt;span class="c1">// Check if the virtual machine has been found
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">21&lt;/span>&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">vms&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="kc">null&lt;/span> &lt;span class="o">||&lt;/span> &lt;span class="nx">vms&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="s1">&amp;#39;&amp;#39;&lt;/span>&lt;span class="p">){&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">22&lt;/span>&lt;span class="cl"> &lt;span class="kd">var&lt;/span> &lt;span class="nx">message&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s1">&amp;#39;There is no virtual machine named &amp;#39;&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="nx">vmName&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">23&lt;/span>&lt;span class="cl"> &lt;span class="nx">System&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">warn&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">message&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">24&lt;/span>&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">25&lt;/span>&lt;span class="cl">&lt;span class="k">else&lt;/span>&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">26&lt;/span>&lt;span class="cl"> &lt;span class="kd">var&lt;/span> &lt;span class="nx">message&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s1">&amp;#39;Virtual machine &amp;#39;&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="nx">vmName&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="s1">&amp;#39; found&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">27&lt;/span>&lt;span class="cl"> &lt;span class="nx">System&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">log&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">message&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">28&lt;/span>&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Workflow in action :&lt;/p>
&lt;figure>&lt;img src="https://vuptime.io/images/iaas_vro/workflow_iaas_get_vm.png"/>&lt;figcaption>
&lt;h4>Image&lt;/h4>
&lt;/figcaption>
&lt;/figure>
&lt;p>Great ! Once the virtual machine captured, we can access to all its properties.
For instance, we need to know the vCPU and RAM configured on the virtual machine.
The request is simple, we'll use the method &lt;code>get_property&lt;/code> on the object &lt;code>VCAC:Entity&lt;/code>&lt;/p>
&lt;p>You just need to get the corresponding properties names:
&lt;figure>&lt;img src="https://vuptime.io/images/iaas_vro/model_manager_vm_request.png"/>&lt;figcaption>
&lt;h4>Image&lt;/h4>
&lt;/figcaption>
&lt;/figure>
&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-javascript" data-lang="javascript">&lt;span class="line">&lt;span class="ln">1&lt;/span>&lt;span class="cl">&lt;span class="c1">// Get the first virtual machine on the result (There is only one as we used the filter)
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">2&lt;/span>&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="kd">var&lt;/span> &lt;span class="nx">vm&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">vms&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">3&lt;/span>&lt;span class="cl">&lt;span class="kd">var&lt;/span> &lt;span class="nx">vmVcpu&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">vm&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">getProperty&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;VMCPUs&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">4&lt;/span>&lt;span class="cl">&lt;span class="kd">var&lt;/span> &lt;span class="nx">vmRam&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">vm&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">getProperty&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;VMTotalMemoryMB&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">5&lt;/span>&lt;span class="cl">&lt;span class="nx">System&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">log&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;The virtual machine &amp;#39;&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="nx">vmName&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="s1">&amp;#39; is configured &amp;#39;&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="nx">vmVcpu&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="s1">&amp;#39; vCPU and &amp;#39;&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="nx">vmRam&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="s1">&amp;#39; RAM&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;figure>&lt;img src="https://vuptime.io/images/iaas_vro/workflow_iaas_get_vm_vcpu_ram.png"/>&lt;figcaption>
&lt;h4>Image&lt;/h4>
&lt;/figcaption>
&lt;/figure>
&lt;p>Everything is working well, but now we also want to display the virtual machine hard-disks.
There is a property name called &lt;code>VMDiskHardware&lt;/code> but not directly accessible because this is a child object of &lt;code>VirtualMachine&lt;/code>.&lt;/p>
&lt;p>Using LINQPAD, we can access to this property by using the method &lt;code>expand&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-c#" data-lang="c#">&lt;span class="line">&lt;span class="ln">1&lt;/span>&lt;span class="cl">&lt;span class="n">VirtualMachines&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">Expand&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;VMDiskHardware&amp;#34;&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="n">Where&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">v&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="n">v&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">VirtualMachineName&lt;/span> &lt;span class="p">==&lt;/span> &lt;span class="s">&amp;#34;TESTVM02&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;figure>&lt;img src="https://vuptime.io/images/iaas_vro/model_manager_vm_disks.png"/>&lt;figcaption>
&lt;h4>Image&lt;/h4>
&lt;/figcaption>
&lt;/figure>
&lt;p>With vRO, we have to use the the method &lt;code>get_link&lt;/code> of the corresponding &lt;code>VCAC:Entity&lt;/code>
This method has 2 parameters :&lt;/p>
&lt;ul>
&lt;li>The first one is your IaaS manager ( &lt;code>vCAC:vCACHost&lt;/code> object on vRO )&lt;/li>
&lt;li>The second is the link name ( the child object name ).&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-javascript" data-lang="javascript">&lt;span class="line">&lt;span class="ln">1&lt;/span>&lt;span class="cl">&lt;span class="kd">var&lt;/span> &lt;span class="nx">vmDisks&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">vm&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">getLink&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">vcacHost&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;VMDiskHardware&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">2&lt;/span>&lt;span class="cl">&lt;span class="k">for&lt;/span> &lt;span class="nx">each&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kd">var&lt;/span> &lt;span class="nx">vmDisk&lt;/span> &lt;span class="k">in&lt;/span> &lt;span class="nx">vmDisks&lt;/span>&lt;span class="p">){&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">3&lt;/span>&lt;span class="cl"> &lt;span class="nx">diskName&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">vmDisk&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">getProperty&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;DiskName&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">4&lt;/span>&lt;span class="cl"> &lt;span class="nx">diskSize&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">vmDisk&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">getProperty&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;Capacity&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">5&lt;/span>&lt;span class="cl"> &lt;span class="nx">System&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">log&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">diskName&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="s1">&amp;#39; is configured with &amp;#39;&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="nx">diskSize&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="s1">&amp;#39; GB&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">6&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">7&lt;/span>&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;figure>&lt;img src="https://vuptime.io/images/iaas_vro/workflow_iaas_get_vm_disks.png"/>&lt;figcaption>
&lt;h4>Image&lt;/h4>
&lt;/figcaption>
&lt;/figure>
&lt;p>Perfect ! We can now request the IaaS database in order to get a lot of usefull information to extend the use on vRealize Automation.&lt;/p>
&lt;p>To end this blog post, here is another sample to get the VirtualMachine created after a defined date :&lt;/p>
&lt;figure>&lt;img src="https://vuptime.io/images/iaas_vro/model_manager_vm_date.png"/>&lt;figcaption>
&lt;h4>Image&lt;/h4>
&lt;/figcaption>
&lt;/figure>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-javascript" data-lang="javascript">&lt;span class="line">&lt;span class="ln"> 1&lt;/span>&lt;span class="cl">&lt;span class="c1">// Inputs : startDate : Date; vcacHost : vCAC:vCACHOST
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 2&lt;/span>&lt;span class="cl">&lt;span class="c1">&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 3&lt;/span>&lt;span class="cl">&lt;span class="nx">startDateFormatted&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">System&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">formatDate&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">startDate&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;yyyy-MM-dd&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="s1">&amp;#39;T00:00:00&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 4&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 5&lt;/span>&lt;span class="cl">&lt;span class="c1">//Define the model name
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 6&lt;/span>&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="kd">var&lt;/span> &lt;span class="nx">modelName&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s1">&amp;#39;ManagementModelEntities.svc&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 7&lt;/span>&lt;span class="cl">&lt;span class="c1">//Get the virtual machines
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 8&lt;/span>&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="kd">var&lt;/span> &lt;span class="nx">entitySetName&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s1">&amp;#39;VirtualMachines&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 9&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">10&lt;/span>&lt;span class="cl">&lt;span class="c1">//Get all the vcac vm created after the defined date
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">11&lt;/span>&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="kd">var&lt;/span> &lt;span class="nx">filter&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;VMCreationDate ge datetime&amp;#39;&amp;#34;&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="nx">startDateFormatted&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="s2">&amp;#34;&amp;#39;&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">12&lt;/span>&lt;span class="cl">&lt;span class="kd">var&lt;/span> &lt;span class="nx">orderBy&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kc">null&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">13&lt;/span>&lt;span class="cl">&lt;span class="kd">var&lt;/span> &lt;span class="nx">top&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kc">null&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">14&lt;/span>&lt;span class="cl">&lt;span class="kd">var&lt;/span> &lt;span class="nx">skip&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">15&lt;/span>&lt;span class="cl">&lt;span class="kd">var&lt;/span> &lt;span class="nx">headers&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kc">null&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">16&lt;/span>&lt;span class="cl">&lt;span class="kd">var&lt;/span> &lt;span class="nx">select&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kc">null&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">17&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">18&lt;/span>&lt;span class="cl">&lt;span class="c1">//Query the database
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">19&lt;/span>&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="kd">var&lt;/span> &lt;span class="nx">vms&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">vCACEntityManager&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">readModelEntitiesBySystemQuery&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">vcacHost&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">id&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">modelName&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">entitySetName&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">filter&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">orderBy&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">select&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">top&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">skip&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">headers&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">20&lt;/span>&lt;span class="cl">&lt;span class="k">if&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">vms&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="kc">null&lt;/span> &lt;span class="o">||&lt;/span> &lt;span class="nx">vms&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="s1">&amp;#39;&amp;#39;&lt;/span>&lt;span class="p">){&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">21&lt;/span>&lt;span class="cl"> &lt;span class="kd">var&lt;/span> &lt;span class="nx">message&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s1">&amp;#39;There is no created virtual machine after &amp;#39;&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="nx">startDateFormatted&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">22&lt;/span>&lt;span class="cl"> &lt;span class="nx">System&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">warn&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">message&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">23&lt;/span>&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">24&lt;/span>&lt;span class="cl">&lt;span class="k">else&lt;/span>&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">25&lt;/span>&lt;span class="cl"> &lt;span class="kd">var&lt;/span> &lt;span class="nx">message&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s1">&amp;#39;There is &amp;#39;&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="nx">vms&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">length&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="s1">&amp;#39; created virtual machine after &amp;#39;&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="nx">startDateFormatted&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">26&lt;/span>&lt;span class="cl"> &lt;span class="nx">System&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">log&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">message&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">27&lt;/span>&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;figure>&lt;img src="https://vuptime.io/images/iaas_vro/workflow_iaas_get_vm_by_date.png"/>&lt;figcaption>
&lt;h4>Image&lt;/h4>
&lt;/figcaption>
&lt;/figure>
&lt;p>You are now ready the use the IaaS object directly in vRO ;)&lt;/p></description></item><item><title>VMworld 2019 – Récapitulatif jour 4</title><link>https://vuptime.io/post/2019-11-07-vmworld-2019-eu-day4/</link><pubDate>Thu, 07 Nov 2019 00:00:00 +0000</pubDate><guid>https://vuptime.io/2019/11/07/VMworld-2019-EU-Day4/</guid><description>
&lt;figure>&lt;img src="https://vuptime.io/images/vmworld2019/day4_VMwareFrance.png"/>&lt;figcaption>
&lt;h4>Photo Booth SII Île de France&lt;/h4>
&lt;/figcaption>
&lt;/figure>
&lt;h2 id="deploying-the-vmware-cloud-provider-platform-hbi2767be">Deploying the VMware Cloud Provider Platform &lt;code>[HBI2767BE]&lt;/code>&lt;/h2>
&lt;ul>
&lt;li>Auteur de la notice ci-dessous: &lt;em>&lt;a href="https://vuptime.io/about/#lrivallain">Ludovic Rivallain&lt;/a>&lt;/em>&lt;/li>
&lt;li>Speaker(s):
&lt;ul>
&lt;li>&lt;strong>Eiad AlAqqad&lt;/strong>, VCPP Lead Solution Architect, VMware&lt;/li>
&lt;li>&lt;strong>Milko Slavov&lt;/strong>, Staff Engineer, VMware&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;a href="https://videos.vmworld.com/global/2019/videoplayer/29354">Vidéo&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>Cloud Provider Pod est une option qui (pourrait|doit) être très intéressante pour déployer &lt;em>from scratch&lt;/em>, en tant que Cloud Provider, une offre de cloud basée sur une stack VMware. Le produit prend en charge bon nombre des configurations les plus longues, complexes et sujetes à des erreurs humaines et se propose de tout automatiser avec le support des fonctions suivantes (à ce jour):&lt;/p>
&lt;ul>
&lt;li>Day 0 de tout le &lt;em>SDDC&lt;/em> (compute, storage, network + security)&lt;/li>
&lt;li>Mise en place du &lt;em>Data Recovery, Data Protection&lt;/em> et des solutions de migration (&lt;em>vCAV&lt;/em>)&lt;/li>
&lt;li>Multi-tenancy (&lt;em>vCD&lt;/em>)&lt;/li>
&lt;li>&lt;em>vROPs&lt;/em>, &lt;em>vRNI&lt;/em> et &lt;em>vRLI&lt;/em> pour la supervision et la phase opérationnelle&lt;/li>
&lt;li>La mise en place du &lt;em>chargeback&lt;/em> (coucou &lt;em>vRB&lt;/em>)&lt;/li>
&lt;li>Multi-sites (avec contraintes)&lt;/li>
&lt;li>La gestion des containeurs via &lt;a href="https://vmware.github.io/container-service-extension">vCD Container Service Extension&lt;/a>&lt;/li>
&lt;li>Gestion des licences &lt;em>vSPP&lt;/em> (&lt;em>Usage Meter&lt;/em> mon amour!)&lt;/li>
&lt;li>&lt;em>vRO&lt;/em> pour l'automatisation (le produit s'appuye d'ailleurs sur &lt;em>vRO&lt;/em> pour l'automatisation)&lt;/li>
&lt;li>La génération de la documentation (Architecture, Planning, Ops Guides…)&lt;/li>
&lt;li>&lt;em>VMware Cloud Verified&lt;/em> ready&lt;/li>
&lt;li>…&lt;/li>
&lt;/ul>
&lt;p>Avec tout de même quelques limitations annoncées:&lt;/p>
&lt;ul>
&lt;li>64 noeuds maximum&lt;/li>
&lt;li>VXLAN ou VLAN backed network seulement&lt;/li>
&lt;li>Pas de migration possible d'un &lt;em>brown field&lt;/em>. &lt;em>Green field&lt;/em> seulement!&lt;/li>
&lt;li>Multi-sites avec de la latence: non supporté (metro cluster)&lt;/li>
&lt;li>Ne supporte pas le routage IP direct pour les environnements clients (configuration manuelle requise)&lt;/li>
&lt;/ul>
&lt;p>La version 1.6 a été devait être annoncée en Novembre (mais visiblement ce n'est pas encore le cas), avec les nouvelles fonctionnalités suivantes:&lt;/p>
&lt;ul>
&lt;li>Nouveau &lt;em>designer&lt;/em> (&lt;a href="https://designer.cloud.vmware.com/">SaaS: designer.cloud.vmware.com&lt;/a>)&lt;/li>
&lt;li>Automatisation encore plus poussée du démarrage des opérations de déploiment.&lt;/li>
&lt;li>Support garantie de &lt;em>VMware Validated Design&lt;/em>&lt;/li>
&lt;li>Nouvelle API&lt;/li>
&lt;li>Mise à jour des composants logiciels proposés&lt;/li>
&lt;/ul>
&lt;p>Pour ma part j'aimerais bien tester ce type de produit mais les occasions sont rare et j'ai bien peur que par manque de souplesse, il faille sortir des sentiers battus très rapidement pour contenter les besoins spécifiques de nos clients &lt;em>cloud providers&lt;/em>.&lt;/p>
&lt;h2 id="60-minutes-of-non-uniform-memory-architecture-hbi2278be">60 Minutes of Non-Uniform Memory Architecture &lt;code>[HBI2278BE]&lt;/code>&lt;/h2>
&lt;ul>
&lt;li>Auteur de la notice ci-dessous: &lt;em>&lt;a href="https://vuptime.io/about/#lrivallain">Ludovic Rivallain&lt;/a>&lt;/em>&lt;/li>
&lt;li>Speaker(s):
&lt;ul>
&lt;li>&lt;strong>Frank Denneman&lt;/strong>, Chief Technologist, CPBU, VMware&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;a href="https://videos.vmworld.com/global/2019/videoplayer/29139">Vidéo&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>… ou comment s'assomer pour finir le séjour.&lt;/p>
&lt;p>Les &lt;em>Deep Dive&lt;/em> proposés par Frank Denneman (et ses collègues) sont toujours d'un niveau technique très élevé mais d'une richesse incroyable.&lt;/p>
&lt;p>Un sujet comme NUMA pourrait nécessiter des jours et des jours d'apprentissage pour être maitrisé mais la conférence proposé évoquait déjà quelques beaux chapitres avec beaucoup de pédagogie.&lt;/p>
&lt;p>Le premier chapitre était consacré à l'explication d'une slide de la keynote du mardi ou il était annoncé que le projet Pacific (Faire tourner des pods K8S directement dans l'hyperviseur vSphere) permettait d'atteindre jusqu'à 30% de performances en plus que dans une VM Linux et 8% vis à vis de Kubernetes sur un Linux Baremetal… Cela méritait en effet quelques explications que je ne pourrais retranscrire correctment ici mais qui étaient étayées de démonstrations de la gestion mémoire/cpu très optimisée sur le kernel vSphere.&lt;/p>
&lt;p>Un autre chapitre était consacré à expliquer comment VMware avait réussi à contourner le challenge de la faille Intel L1TF (&lt;em>Side Channel Vulnerability&lt;/em>) tout en conservant (pour les kernels les plus récents &amp;gt;= 6.7u2) des performances comparables à la situation avant la découverte de cette faille. Il faut savoir que c'est un enjeu majeur de la résolution de cette faille de sécurité). La nouvelle politique de scheduling CPU de vSphere pour résoudre ce dylème s'appelle &lt;em>Side Channel Aware Scheduler&lt;/em> (SCA).&lt;/p>
&lt;p>Je passe rapidement sur le reste car c'était très dense: &lt;em>vNUMA, VPD et PPDs&lt;/em>, alignement des &lt;em>Core Per Socket&lt;/em>, gestion du &lt;em>CPU Hot Add&lt;/em>… Autant de savoureux sujets qu'il est intéressant de comprendre (à défaut de les maitriser totalement) si on cherche à obtenir des performances élevées de son infrastructure de virtualisation, ou si on a des workloads spécifiques dans la consommation CPU ou mémoire.&lt;/p>
&lt;h2 id="next-generation-reference-design-with-nsx-t-part-1-and-2-cnet2061be-and-cnet2068be">Next generation reference design with NSX-T part 1 and 2 &lt;code>[CNET2061BE]&lt;/code> and &lt;code>[CNET2068BE]&lt;/code>&lt;/h2>
&lt;ul>
&lt;li>Auteur de la notice ci-dessous: &lt;em>Jérémy Rossignol&lt;/em>&lt;/li>
&lt;li>Speaker(s):
&lt;ul>
&lt;li>&lt;strong>Nimish Desai&lt;/strong>, Director Technical Product Management, VMware&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;a href="https://videos.vmworld.com/global/2019/videoplayer/29694">Vidéo - Partie 1&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://videos.vmworld.com/global/2019/videoplayer/29692">Vidéo - Partie 2&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>Une conférence avancée en deux parties sur le design &lt;em>single-tier&lt;/em> et &lt;em>multi-tier&lt;/em> NSX-T. Je ne rentrerai pas dans les détails des designs car ici nous avons revu plusieurs usecases et quel design appliquer sur ces usecases.&lt;/p>
&lt;p>Conférence très intéressante sur comment répondre à vos problématiques avec un niveau technique très poussé. Je vous conseille fortement d'aller regarder les deux vidéos de cette conférence en deux parties.&lt;/p>
&lt;p>Quelques bonnes nouvelles suite à une discussion avec le speaker, Nimish Desai, NSX-T 3.0, version qui sera lancée normalement au premier semestre 2020, incluera la gestion des VRF ce qui simplifiera la vie pour les designs multi clients.&lt;/p>
&lt;h2 id="deploying-and-designing-kubernetes-with-nsx-t-openshift-pks-pas-cnet1444be">Deploying and Designing Kubernetes with NSX-T (Openshift, PKS, PAS) &lt;code>[CNET1444BE]&lt;/code>&lt;/h2>
&lt;ul>
&lt;li>Auteur de la notice ci-dessous: &lt;em>Christian Tritten&lt;/em>&lt;/li>
&lt;li>Speaker(s):
&lt;ul>
&lt;li>&lt;strong>Chhavi Nijhawan&lt;/strong>, Product Line Marketing Manager, VMware&lt;/li>
&lt;li>&lt;strong>Nikolay Nikolaev&lt;/strong>, Open Source Networking Team Lead, VMware&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;a href="https://videos.vmworld.com/global/2019/videoplayer/29837">Vidéo&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>Session technique qui présente l'architecture de NSX-T dans Kubernetes. Un cas d'usage illustre l'utilisation de NSX-T pour gérer le réseau sur plusieurs clusters &lt;em>OpenShift&lt;/em> et &lt;em>Kubernetes PKS&lt;/em> simultanément, et comment mettre en place du loadbalancing L7 sur une application déployée sur plusieurs clusters.&lt;/p>
&lt;h2 id="run-kubernetes-consistently-across-clouds-with-tanzu-and-project-pacific-kub1840e">Run Kubernetes Consistently Across Clouds with Tanzu and Project Pacific &lt;code>[KUB1840E]&lt;/code>&lt;/h2>
&lt;ul>
&lt;li>Auteur de la notice ci-dessous: &lt;em>Christian Tritten&lt;/em>&lt;/li>
&lt;li>Speaker(s):
&lt;ul>
&lt;li>&lt;strong>Michael West&lt;/strong>, Technical Product Manager, VMware&lt;/li>
&lt;li>&lt;strong>Ross Kukulinski&lt;/strong>, Product Line Manager, VMware&lt;/li>
&lt;li>&lt;strong>Tom Spoonemore&lt;/strong>, Product Line Manager, VMware&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;a href="https://videos.vmworld.com/global/2019/videoplayer/29812">Vidéo&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>Comme on l'a vu précédemment, Kubernetes possède de nombreux atouts quand on souhaite déployer des applications conteneurisées. Le projet VMware &lt;em>Tanzu&lt;/em> se propose de faciliter la mise en œuvre et l'exploitation de Clusters Kubernetes à l'échelle industrielle.&lt;/p>
&lt;p>&lt;em>Tanzu&lt;/em> introduit la notion de &lt;em>Kubernetes grid&lt;/em> qui consiste à gérer tous les clusters Kubernetes de l'entreprise, quels que soit leur mode de déploiement (sur du vSphere, via &lt;em>Project Pacific&lt;/em>, via du PKS, etc...).&lt;/p>
&lt;p>Le déploiement de clusters Kubernetes au sein de &lt;em>Project Pacific&lt;/em> s'appuie sur la spécification &lt;em>Cluster API&lt;/em> supportée par un nombre croissant d'opérateurs (12 à ce jour dont : &lt;em>Google Cloud, Amazon, Azure, OpenStack, IBM Cloud, WMware&lt;/em>)&lt;/p>
&lt;p>L'outil &lt;em>Tanzu Mission Control&lt;/em> permet via une interface web unifiée de piloter la création ou le rattachement de l'ensemble des cluster Kubernetes en mode multi-cloud. Il permet également de gérer le cycle de vie de ces clusters, via des procédures de mises à jour automatisées.&lt;/p>
&lt;h2 id="solutions-exchange-stand-netapp">Solutions Exchange: Stand &lt;em>NetApp&lt;/em>&lt;/h2>
&lt;ul>
&lt;li>Auteur de la notice ci-dessous: &lt;em>Christian Tritten&lt;/em>&lt;/li>
&lt;/ul>
&lt;p>NetApp ne fait pas que du stockage. Ils proposent désormais d'autres types de produits:&lt;/p>
&lt;ul>
&lt;li>Kubernetes managé sur &lt;em>AWS, GCP, Azure, AlibabaCloud&lt;/em> mais aussi &lt;em>on premise&lt;/em> sur une &lt;a href="https://cloud.netapp.com/kubernetes-service">appliance hardware dédiée&lt;/a>.&lt;/li>
&lt;li>Du stockage pour Kubernetes (&lt;em>persistent volumes&lt;/em>)&lt;/li>
&lt;/ul></description></item><item><title>VMworld 2019 – Récapitulatif jour 3</title><link>https://vuptime.io/post/2019-11-06-vmworld-2019-eu-day3/</link><pubDate>Wed, 06 Nov 2019 00:00:00 +0000</pubDate><guid>https://vuptime.io/2019/11/06/VMworld-2019-EU-Day3/</guid><description>
&lt;figure>&lt;img src="https://vuptime.io/images/vmworld2019/day3_VMWorldFest_2.gif"/>&lt;figcaption>
&lt;h4>Photo Booth avec des Toulousains&lt;/h4>
&lt;/figcaption>
&lt;/figure>
&lt;h2 id="delivering-custom-services-through-vcloud-director-extensibility-hbi1855be">Delivering Custom Services Through vCloud Director Extensibility &lt;code>[HBI1855BE]&lt;/code>&lt;/h2>
&lt;ul>
&lt;li>Auteur de la notice ci-dessous: &lt;em>&lt;a href="https://vuptime.io/about/#lrivallain">Ludovic Rivallain&lt;/a>&lt;/em>&lt;/li>
&lt;li>Speaker(s):
&lt;ul>
&lt;li>&lt;strong>Nick de Kuijer&lt;/strong>, Cloud Architect, Simac IT NL&lt;/li>
&lt;li>&lt;strong>Martin Hosken&lt;/strong>, Principal Architect, VMware&lt;/li>
&lt;li>&lt;strong>Milko Slavov&lt;/strong>, Staff Engineer, VMware&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;a href="https://videos.vmworld.com/global/2019/videoplayer/29337">Vidéo&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>Je ne vais pas le cacher, c'était la présentation que j'attendais le plus de ce VMworld! Étant donné que je travaille sur le sujet de l'extensibilité de vCloud Director depuis plus d'un an (voir le post à ce sujet &lt;a href="https://vuptime.io/2019/05/06/extending-vcloud-director-functionalities/">Extending VMware vCloud Director functionalities&lt;/a>), j'avais de hautes attentes concernant les méthodes utilisées par d'autres personnes pour réaliser le même type d'extensions d'UI et d'API.&lt;/p>
&lt;p>La présentation a commencé avec une description générale du concept d'extension des API et de l'UI du portail. Et de citer quelques exemples de use-case (notamment avec la très belle intégration réalisée par &lt;strong>Avamar&lt;/strong>). Il y a aussi eu une annonce d'un nouveau framework permettant la création d'intégrations plus poussées des extensions (notamment la possibilité d'ajouter des actions contextuelles sur des objets de l'inventaire) et plus facile à mettre en œuvre.&lt;/p>
&lt;p>Nous avons eu ensuite une démonstration un peu plus technique d'un &lt;em>Backend as a Service&lt;/em> qui n'a pas été très clairement expliquée à mon avis.&lt;/p>
&lt;p>Enfin, Nick de Kuijer, Cloud Architect @ &lt;a href="https://www.simac.com/en/itnl">Simac IT&lt;/a> 🇳🇱 a démontré un exemple d'extension permettant la mise à disposition des logs Firewall NSX dans le portail vCD, pour les utilisateurs. Leur permettant ainsi de pouvoir analyser si une requête est légitimement bloquée ou pas. Puis un mécanisme de déploiement de VM personnalisé permettant d'adapter la zone de disponibilité, le type d'instance…&lt;/p>
&lt;h2 id="evolving-vrealize-automation-hbo1323be">Evolving vRealize Automation &lt;code>[HBO1323BE]&lt;/code>&lt;/h2>
&lt;ul>
&lt;li>Auteur de la notice ci-dessous: &lt;em>&lt;a href="https://vuptime.io/about/#lrivallain">Ludovic Rivallain&lt;/a>&lt;/em>&lt;/li>
&lt;li>Speaker(s):
&lt;ul>
&lt;li>&lt;strong>Chris McClanahan&lt;/strong>, Staff Technical Marketing Architect, VMware&lt;/li>
&lt;li>&lt;strong>Liad Ofek&lt;/strong>, Director, Product Managerment, VMware&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;a href="https://videos.vmworld.com/global/2019/videoplayer/29414">Vidéo&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>Note à moi-même pour l'année prochaine: ne pas aller à des conférences de niveau technique 100 ou 200. Jamais. Même quand le sujet semble passionant.&lt;/p>
&lt;p>C'était le cas de cette présentation de vRealize Automation 8.0. J'en attendais beaucoup car vRA est un produit très utilisé par nos clients et sur lequel nous passons nous-même beaucoup de temps pour y réaliser de l'automatisation. Et comme le changement 7.x &amp;gt; 8.0 s'annonce majeur, il vaut mieux se renseigner au maximum au plus tôt.&lt;/p>
&lt;p>Pour résumer tout de même les informations majeures:&lt;/p>
&lt;ul>
&lt;li>vRA a été totalement réécrit pour réduire sa complexité de déploiement. Les services IaaS ont notamment disparu.&lt;/li>
&lt;li>L'installation et la maintenance de vRA s'appuyent à présent sur Life Cycle Manager et la gestion d'identité sur le Identity Manager.&lt;/li>
&lt;li>Tous les services vRA sont à présent devenus des services basés sur Kubernetes.
&lt;ul>
&lt;li>J'ai tout de même un doute sur les services PostgreSQL et RabbitMQ car la slide n'était pas limpide du tout.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>L'apparition de &lt;em>FaaS&lt;/em> (Function as a Service) comme nouveau support à l'extensibilité, au coté de vRO. Par exemple AWS Lambda mais pas que.&lt;/li>
&lt;li>Une intégration git complète pour les éléments du catalogue de service!&lt;/li>
&lt;/ul>
&lt;p>VMware indique clairement que cette version 8.0 est une version qui n'est pas à mettre en production car elle manque de maturité. Il faudra donc attendre au moins la version 8.1, premier semestre 2020. La migration de quelques données de plateformes 7.5 ou 7.5 ne sera elle disponible qu'à partir de la mi-2020. C'est un gros gros challenge pour nos clients qui avaient misés sur l'extensibilité de vRA 7.x et ne pourront probablement pas réutiliser beaucoup de ces efforts en vRA 8.x…&lt;/p>
&lt;h2 id="the-art-of-code-that-writes-code-code2216e">The Art of Code That Writes Code &lt;code>[CODE2216E]&lt;/code>&lt;/h2>
&lt;ul>
&lt;li>Auteur de la notice ci-dessous: &lt;em>&lt;a href="https://vuptime.io/about/#lrivallain">Ludovic Rivallain&lt;/a>&lt;/em>&lt;/li>
&lt;li>Speaker(s):
&lt;ul>
&lt;li>&lt;strong>Kyle Ruddy&lt;/strong>, Senior Technical Marketing Architect, VMware&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;a href="https://videos.vmworld.com/global/2019/videoplayer/29883">Vidéo&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>Qui ne rêve pas d'un outil permettant de générer d'autres outils du même type tout en écrivant le moins de code possible. Vous décrivez une nouvelle API, c'est déjà un beau travail. Et vous devez en plus coder des clients ou des SDK pour utiliser cette API en ligne de commande par exemple? C'est un doublon de travail qui peut être évité.&lt;/p>
&lt;p>On recommence: Vous décrivez une nouvelle API en la documentant au fur et à mesure. Par exemple en réalisant un fichier de description &lt;em>swagger&lt;/em>. Ensuite, il suffit de faire digérer ce descripteur à un outil comme &lt;a href="https://github.com/Azure/autorest">&lt;code>autorest&lt;/code>&lt;/a> (Azure) pour obtenir un client ou un SDK en C#, NodeJS, Python, Java, Ruby, Go, TypeScript…&lt;/p>
&lt;p>Kyle nous a proposé un exemple basé sur l'API &lt;a href="https://xkcd.com/json.html">xkcd&lt;/a> et la génération d'un client en PowerShell. Exemple: &lt;code>Get-XkcdComic&lt;/code>.&lt;/p>
&lt;p>L'occasion de rappeler que les API vSphere évoluent dans le bon sens (c'est à dire vers plus de REST, moins de SOAP!) et que VMware propose nombre de SDK dans différents languages: &lt;a href="https://vmware.github.io/vsphere-automation-sdk/">vsphere-automation-sdk&lt;/a>.&lt;/p>
&lt;h2 id="kubernetes-operators-for-vmware-enterprise-pks-and-vmware-cloud-pks-code1360e">Kubernetes Operators for VMware Enterprise PKS and VMware Cloud PKS &lt;code>[CODE1360E]&lt;/code>&lt;/h2>
&lt;ul>
&lt;li>Auteur de la notice ci-dessous: &lt;em>Christian Tritten&lt;/em>&lt;/li>
&lt;li>Speaker(s):
&lt;ul>
&lt;li>&lt;strong>Michael Gasch&lt;/strong>, Application Platforms Architect - Office of the CTO, VMware&lt;/li>
&lt;li>&lt;strong>Tom Schwaller&lt;/strong>, Technical Product Line Manager, CNABU, VMware&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;a href="https://videos.vmworld.com/global/2019/videoplayer/29564">Vidéo&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>Plongée en détail sur ce qu'est un &lt;em>Operator&lt;/em>, à quoi ça peut servir et comment en écrire. Les &lt;em>Operators&lt;/em> couplés aux &lt;em>Custom Resource Definitions&lt;/em> sont un moyen extrêmement puissant d'étendre l'api de Kubernetes pour introduire des logiques métiers complexes :&lt;/p>
&lt;ul>
&lt;li>Les &lt;strong>Custom Resource Definitions&lt;/strong> permettent de déclarer de nouveaux types de Ressources que Kubernetes va pouvoir gérer de la même manière que ses Ressources natives. Une fois la CRD déclarée, il devient possible de créer des objets (Custom Resources) de ce nouveau type. La validation des Customs Resources créées par les utilisateurs se base sur &lt;a href="https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.0.md">la spécification OpenAPI 3.0&lt;/a>.&lt;/li>
&lt;li>Les &lt;strong>Operators&lt;/strong> sont des Controllers Kubernetes (du code exécuté dans des Pods) qui surveillent les évènements liés aux Custom Resources et implémentent la logique métier pour réaliser des tâches complexes (comme par exemple le déploiement d'un système de base de données en cluster, la gestion de la sauvegarde des base ou encore l'ajout de nouveaux noeuds au cluster).&lt;/li>
&lt;/ul>
&lt;p>Il existe plusieurs frameworks pour faciliter le développement d'Operators.&lt;/p>
&lt;p>La démo montre comment utiliser le framework &lt;a href="https://github.com/zalando-incubator/kopf">Kopf&lt;/a>, développé par Zalando, pour écrire un Operator qui va créer des VMs sur vSphere via des CR de type VMGroup.&lt;/p>
&lt;h2 id="project-pacific-guest-clusters-deep-dive-hbi4500be">Project Pacific: Guest Clusters Deep Dive &lt;code>[HBI4500BE]&lt;/code>&lt;/h2>
&lt;ul>
&lt;li>Auteur de la notice ci-dessous: &lt;em>Christian Tritten&lt;/em>&lt;/li>
&lt;li>Speaker(s):
&lt;ul>
&lt;li>&lt;strong>Derek Beard&lt;/strong>, Senior Staff Engineer, VMware&lt;/li>
&lt;li>&lt;strong>Zach Shepherd&lt;/strong>, Staff Engineer II, VMware&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;a href="https://videos.vmworld.com/global/2019/videoplayer/29784">Vidéo&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>Cette session expose en détail le projet Pacific.&lt;/p>
&lt;blockquote>
&lt;p>Kubernetes as a platform platform&lt;br>
-- &lt;cite>Joe Beda&lt;/cite>&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;p>Project Pacific is a re-architecture of vSphere with Kubernetes as its control plane.&lt;br>
-- &lt;cite>Jared Rosoff&lt;/cite>&lt;/p>
&lt;/blockquote>
&lt;p>Kubernetes devient un élément central de vSphere via l'introduction d'un composant d'orchestration nommé &lt;em>Kubernetes Cluster Supervisor&lt;/em>. Le Supervisor utilise ESXi comme worker nodes au lieu de Linux. Ceci passe par une implémentation spécifique de Kubelet, nommée &lt;strong>Spherelet&lt;/strong> qui tourne directement sur ESXi. Il devient ainsi possible de faire tourner des Pods kubernetes natifs sur ESXi avec des performances impressionnantes (30% plus rapide que des Pods tournant dans des VMs Linux, et 8% plus rapide que des Pods tournant sur du bare metal Linux, ceci grâce à des optimisations sur la gestion de la mémoire et du cpu).&lt;/p>
&lt;p>D'autre part, le Supervisor se base sur des &lt;em>CRDs&lt;/em> et &lt;em>Operators&lt;/em> spécifiques (Machine, MachineSet, MachineDeployment, Cluster, ManagedCluster) afin de permettre de gérer des objets vSphere via des fichiers de description de ressources au format Kubernetes. Des Operators dédiés comme le &lt;em>VM operator&lt;/em> ou le &lt;em>Guest Cluster Operator&lt;/em> offrent la possibilité d'orchestrer le déploiement et cycle de vie de :&lt;/p>
&lt;ul>
&lt;li>Machines Virtuelles,&lt;/li>
&lt;li>Clusters Kubernetes Managés (dit 'Guest clusters').&lt;/li>
&lt;/ul>
&lt;p>Il devient ainsi plus facile de séparer les préoccupations entre les Ops qui déploient l'infrastructure et les développeurs qui vont accéder à des VMs et des clusters Kubernetes à la demande via des ressources de type Machine, ou ManagedCluster.&lt;/p>
&lt;h2 id="the-circle-of-token-life-code3332e">The Circle of (Token) Life &lt;code>[CODE3332E]&lt;/code>&lt;/h2>
&lt;ul>
&lt;li>Auteur de la notice ci-dessous: &lt;em>Christian Tritten&lt;/em>&lt;/li>
&lt;li>Speaker(s):
&lt;ul>
&lt;li>&lt;strong>Dan Illson&lt;/strong>, Staff Native Cloud Advocate, VMware&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;a href="https://videos.vmworld.com/global/2019/videoplayer/28397">Vidéo US&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>Dan Illson présente la gestion de données sensibles dans Kubernetes avec Hashicorp Vault. Il rappelle que les Secrets dans Kubernetes sont simplement encodés en base64 mais pas du tout chiffrés ce qui pose des problèmes en matière de sécurité. De plus l'accès aux secrets manque cruellement de granularité.&lt;/p>
&lt;p>L'outil Vault vient compléter la gestion des secrets avec tout un panel de fonctionnalités comme le chiffrement, la rotation des clés, l'expiration ou la révocation d'un secret, secrets dynamiques, etc...).&lt;/p>
&lt;h2 id="nsx-t-deep-dive-kubernetes-networking-cnet1270be">NSX-T Deep Dive: Kubernetes Networking &lt;code>[CNET1270BE]&lt;/code>&lt;/h2>
&lt;ul>
&lt;li>Auteur de la notice ci-dessous: &lt;em>Christian Tritten&lt;/em>&lt;/li>
&lt;li>Speaker(s):
&lt;ul>
&lt;li>&lt;strong>Ali Al Idrees&lt;/strong>, Lead EMEA SDDC Architect, VMware&lt;/li>
&lt;li>&lt;strong>Yasen Simeonov&lt;/strong>, Senior Technical Product Manager, VMware&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;a href="https://videos.vmworld.com/global/2019/videoplayer/29713">Vidéo&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>Après une brève présentation de Kubernetes, cette session expose comment l'intégration du réseau NSX-T avec Kubernetes permet de gérer l'ensemble des problématiques réseau (adressage des Pods, cloisonnement entre namespaces, loadbalancing L4 et L7, firewalling) via les ressources Kubernetes habituelles (ns, networkpolicies, ingresses).&lt;/p>
&lt;p>Le composant NSX Container Plugin (NCP) est chargé d'assurer la traduction (ainsi que la synchronisation) des règles définies dans les objets Kubernetes vers les règles NSX-T correspondantes. Le composant NCP se présente sous la forme d'un Pod qui est exécuté directement dans le cluster Kubernetes.&lt;/p>
&lt;h2 id="service-mesh-tracing-prometheus-wavefront-provides-observability-for-all-kub1862be">Service Mesh, Tracing, Prometheus: Wavefront Provides Observability for All &lt;code>[KUB1862BE]&lt;/code>&lt;/h2>
&lt;ul>
&lt;li>Auteur de la notice ci-dessous: &lt;em>Christian Tritten&lt;/em>&lt;/li>
&lt;li>Speaker(s):
&lt;ul>
&lt;li>&lt;strong>Chhavi Nijhawan&lt;/strong>, Product Line Marketing Manager, VMware&lt;/li>
&lt;li>&lt;strong>Nikolay Nikolaev&lt;/strong>, Open Source Networking Team Lead, VMware&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;a href="https://videos.vmworld.com/global/2019/videoplayer/29837">Vidéo&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>Cette session commence par une introduction aux concepts de service mesh, de distributed tracing et de monitoring dans Kubernetes. Ces outils se révèlent utiles lorsqu'on l'on commence à déployer des applications fortement orientées microservices.&lt;/p>
&lt;p>On présente ensuite l'outil Wavefront, et comment celui-ci peut venir s'interfacer avec les outils opensources istio, jaeger/zipkin, et prometheus. Wavefront se propose d'enrichir les fonctionnalités de ces outils mais aussi de permettre leur utilisation dans une interface unifiée. Wavefront fourni en outre plus de 200 intégrations pour ingérer des métriques et des logs de toute provenance.&lt;/p>
&lt;p>La démo présente un cas d'usage d'observabilité en démontrant comment repérer d'où provient une latence dans une application microservices via la combinaison du monitoring pour la détection du problème, du tracing pour l'analyse d'une requête de bout en bout et de l'analyse des logs pour trouver la cause précise du problème. Tout cela sans quitter l'interface web de Wavefront.&lt;/p>
&lt;h2 id="nsx-t-deep-dive--l3-routing-cnet1069be">NSX-T Deep Dive : L3 Routing &lt;code>[CNET1069BE]&lt;/code>&lt;/h2>
&lt;ul>
&lt;li>Auteur de la notice ci-dessous: &lt;em>Jérémy Rossignol&lt;/em>&lt;/li>
&lt;li>Speaker(s):
&lt;ul>
&lt;li>&lt;strong>Amit Aneja&lt;/strong>, Senior Technical Product Manager, VMware&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;a href="https://videos.vmworld.com/global/2019/videoplayer/29591">Vidéo&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>Ici nous avons eu un cours accéléré sur le rroutage au sein de NSX-T.
Petit rappel, toujours pour commencer un logical router NSX-T est constitué de deux composants le DR et le SR.&lt;/p>
&lt;p>Le DR ou &lt;em>Distributed Router&lt;/em> s'éxecute localement sur les transport nodes. Une transport node cela peut être à la fois un ESXi ou un hyperviseur KVM qui hébergeront vos VMs clientes mais cela peut être aussi une edge node qui elle hébergera vos logical router. Le SR ou &lt;em>Service Router&lt;/em> lui s'éxecutera seulement sur les &lt;em>edge nodes&lt;/em>.&lt;/p>
&lt;p>Le DR comme son nom l'indique est distribué sur votre plateforme et permet de faire tout le travail de routage. Le SR quant à lui va se déployer automatiquement lorsque vous aurez configuré un service sur l'un de LR que ce soit &lt;em>T0&lt;/em> ou &lt;em>T1&lt;/em>, il n'est pas distribué mais centralisé.&lt;/p>
&lt;p>Voilà si on récapitule déjà ce petit rappel qui a lui tout seul vous donne certainement déjà des cheveux blancs :&lt;/p>
&lt;ul>
&lt;li>NSX-T c'est du tier routing avec des routeurs &lt;em>T0&lt;/em> et &lt;em>T1&lt;/em>, &lt;em>T0&lt;/em> permet de se connecter au réseau physique et &lt;em>T1&lt;/em> est fait pour se connecter à vos workloads&lt;/li>
&lt;li>Un &lt;em>logical router&lt;/em> &lt;em>T0&lt;/em> ou &lt;em>T1&lt;/em> est composé d'un &lt;em>DR&lt;/em> ET d'un &lt;em>SR&lt;/em> si on configure un service dessus (Connexion au physique, routage dynamique, &lt;em>LB, VPN, NAT, Firewall,DHCP, DNS Forwarder, Metadata Proxy&lt;/em>)&lt;/li>
&lt;li>&lt;em>DR&lt;/em> : routage distribué&lt;/li>
&lt;li>&lt;em>SR&lt;/em> : service, centralisé&lt;/li>
&lt;/ul>
&lt;p>Ensuite maintenant que vous avez les bases, parlons un peu des &lt;em>edges nodes&lt;/em> qui dans NSX-T peuvent être à deux formats, &lt;em>baremetal&lt;/em> ou VM. ces edges nous allons donc les déployer grâce à un ova sur des ESXi ou directement sur un serveur &lt;em>baremetal&lt;/em>.
L'utilité de la &lt;em>edge node&lt;/em>, c'est d'héberger vos logical router &lt;em>T0&lt;/em> et &lt;em>T1&lt;/em> qui ne sont plus des VMs au sens propre mais plutôt des micro-services au sein de votre &lt;em>edge node&lt;/em>.&lt;/p>
&lt;p>Parlons maintenant un peu de routage, nous pouvons faire de l'&lt;em>Equal Cost MultiPathing&lt;/em> avec NSX-T et notament les T0, par contre si vous voulez faire de l'ECMP, il faudra impérativement utiliser le &lt;em>Bidirectional Forwarding Detection&lt;/em> (BFD) en BGP.
Si vous êtes dans un cas ou vous avez plusieurs &lt;em>T0&lt;/em> en HA active/active alors dans ce cas les échanges de routes entre vos deux &lt;em>SR&lt;/em> &lt;em>T0&lt;/em> se feront via iBGP.
Chose importante, le routage dans NSX-T se fera toujours au plus proche de l'émetteur, si vous avez une VM qui émet une trame qui a besoin d'être routée, le routage se fera toujours sur le &lt;em>DR&lt;/em> de l'ESXi qui héberge la VM.&lt;/p>
&lt;p>Prenez en considération que vos &lt;em>uplinks&lt;/em> sur vos &lt;em>T0&lt;/em> serviront toujours à se connecter au réseau physique et que vos &lt;em>T1&lt;/em> auront toujours, ou du moins quand ils sont connectés au &lt;em>T0&lt;/em>, une route par défaut vers votre &lt;em>T0&lt;/em>.&lt;/p>
&lt;p>Bon alors tout cela c'est très technique, je vous recommande comme Amit d'ailleurs d'aller voir les &lt;em>Design Guides&lt;/em>.&lt;/p>
&lt;p>Petite nouveauté de la version 2.5, les &lt;em>failure domains&lt;/em> pour les &lt;em>edge clusters&lt;/em> (ensemble de &lt;em>edge nodes&lt;/em>), vous pouvez maintenant définir au sein d'un même cluster edge 2 &lt;em>failure domains&lt;/em> qui représenteront par exemple deux racks différents dans votre datacenter, ce qui permettra lorsque vous utilisez du HA d'avoir vos instances &lt;em>T0&lt;/em> sur différents racks en cas de panne cela peut être utile :)
Je parle ici seulement de &lt;em>T0&lt;/em> car il n'ya que les &lt;em>T0&lt;/em> qui peuvent être en mode active/active.&lt;/p>
&lt;p>Enfin le plus possible il faut installer vos services au plus proche du workload, c'est à dire le plus possible sur vos &lt;em>T1&lt;/em> pour permettre d'avoir vos &lt;em>T0&lt;/em> en mode active/active car vous ne pouvez pas faire de active/active sur vos &lt;em>T0&lt;/em> si vous installez des services dessus.&lt;/p>
&lt;p>Si vous voulez aller plus loin voici les conférences que vous pourrez aller voir:&lt;/p>
&lt;ul>
&lt;li>Network Virtualization and NSX-T - A technical Overview &lt;code>[CNET1582BE]&lt;/code>&lt;/li>
&lt;li>NSX-T Deep Dive: Logical Switching &lt;code>[CNET1511BE]&lt;/code>&lt;/li>
&lt;li>NSX-T Deep Dive: Load balancing &lt;code>[CNET1356BE]&lt;/code>&lt;/li>
&lt;li>NSX-T Deep Dive: Connecting Cloud and Data Centers via NSX-T VPN &lt;code>[CNET2841BE]&lt;/code>&lt;/li>
&lt;li>Apply Consistent Security Across VMs, Containers, and Bare Metal &lt;code>[SAI1017BE]&lt;/code>&lt;/li>
&lt;/ul>
&lt;h2 id="solutions-exchange">Solutions Exchange&lt;/h2>
&lt;ul>
&lt;li>Auteur de la notice ci-dessous: &lt;em>Jérémy Rossignol&lt;/em>&lt;/li>
&lt;/ul>
&lt;p>Cette année j'ai voulu prendre le temps d'aller faire un tour et discuter au &lt;em>Solutions Exchange&lt;/em> sur les différents stands des éditeurs.&lt;/p>
&lt;p>Voici quelques technos auquelles vous devriez penser si vous cherchez de nouvelles solutions, évidemment ce n'est que mon avis et je invite à vous faire votre propre avis sur ces technos :&lt;/p>
&lt;ul>
&lt;li>&lt;strong>AVI Networks&lt;/strong> : appliance virtuelles de load balancing concurrente de F5 et racheté tout récement par VMware&lt;/li>
&lt;li>&lt;strong>Rubriq&lt;/strong> : j'ai eu l'occasion d'avoir une petite démo du produit avec une discussion technique très intéressante, pensez-y si vous souhaitez changer votre solution de sauvegarde.&lt;/li>
&lt;li>&lt;strong>Datacore&lt;/strong> : vous souhaitez faire du stockage hyperconvergé, franchement j'y allais un peu à reculons mais finalement ce produit a l'air d'être une alternative à VSAN très intéressante, en plus elle vous permettrait de réutiliser vos anciennes baies de stockage.&lt;/li>
&lt;li>&lt;strong>Cohesity&lt;/strong> : de la même manière que Rubriq, pour moi ces 2 éditeurs sont en train de faire bouger le monde de la sauvegarde, ce sont vraiment des solutions à prendre en compte lors du choix de votre future solution de sauvegarde.&lt;/li>
&lt;/ul>
&lt;figure>&lt;img src="https://vuptime.io/images/vmworld2019/day3_VMWorldFest_1.png"/>&lt;figcaption>
&lt;h4>Stereophonics au VMworld Fest&lt;/h4>
&lt;/figcaption>
&lt;/figure></description></item><item><title>VMworld 2019 – Récapitulatif jour 2</title><link>https://vuptime.io/post/2019-11-05-vmworld-2019-eu-day2/</link><pubDate>Tue, 05 Nov 2019 00:00:00 +0000</pubDate><guid>https://vuptime.io/2019/11/05/VMworld-2019-EU-Day2/</guid><description>
&lt;h2 id="general-session-aka-la-keynote">General Session (aka la &lt;em>keynote&lt;/em>)&lt;/h2>
&lt;ul>
&lt;li>Auteur de la notice ci-dessous: &lt;em>&lt;a href="https://vuptime.io/about/#lrivallain">Ludovic Rivallain&lt;/a>&lt;/em>&lt;/li>
&lt;li>Speaker(s):
&lt;ul>
&lt;li>&lt;strong>Pat Gelsinger&lt;/strong>, Chief Executive Officer, VMware&lt;/li>
&lt;li>&lt;strong>Sanjay Poonen&lt;/strong>, Chief Operating Officer, Customer Operations, VMware&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;a href="https://videos.vmworld.com/global/2019/videoplayer/29940">Vidéo&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>La &lt;em>General Session&lt;/em> est l'évènement qui marque le début des pleines festivités du VMworld. Animée par le CEO de VMware, Pat Gelsinger, c'est toujours l'occasion d'évoquer, voir d'annoncer, les récentes acquisitions de VMware et d'envisager les nouvelles tendances du marché.&lt;/p>
&lt;p>Cette année, parmi ces tendances, on peut citer:&lt;/p>
&lt;h3 id="kubernetes">Kubernetes&lt;/h3>
&lt;p>Ce n'est pas une surprise, VMware mise depuis un moment sur l'orchestrateur à tout faire (y compris quelques containers). Le rachat de Pivotal, qui produit PKS, la suite logicielle phare sur le marché, aide quelque peu à être serein vis à vis de cette stratégie.&lt;/p>
&lt;p>Avec le projet &lt;em>Pacific&lt;/em>, il sera bientôt possible de faire tourner des &lt;em>pods&lt;/em> K8S sur les hyperviseurs ESXi. &lt;em>Tanzu Mission Control&lt;/em> se propose lui d'être le point d'entrée unique pour la gestion des clusters &lt;em>K8S&lt;/em>, qu'ils soient déployés chez vous ou dans un cloud public.&lt;/p>
&lt;p>Avec &lt;em>Bitnami&lt;/em> et le projet &lt;em>Galleon&lt;/em> Vmware envisage à présent de fournir des images sécurisées, validées et à jour de nombreuses applications.&lt;/p>
&lt;h3 id="multi-cloud">Multi-cloud&lt;/h3>
&lt;p>Forcément, aujourd'hui il n'est plus question pour Vmware de vous vendre des hyperviseurs à héberger soi-même dans une salle serveur(s). A présent, l'avenir s'envisage avec des providers de Cloud multiples. La complexité principale de cette perspective est la compatibilité entre ces environnements. Avec NSX-T, HCX, vCloud Foundation etc. VMware veut vous proposer de tout administrer avec leurs solutions, comme un liant commun.&lt;/p>
&lt;p>Et si le cloud vient à vous, c'est encore mieux: &lt;em>RDS on VMware&lt;/em> est à présent secondé par &lt;em>Azure SQL 2019 on Vmware&lt;/em>.&lt;/p>
&lt;h3 id="sécurité">Sécurité&lt;/h3>
&lt;p>La sécurité, au sens large est aussi abordée: réseau, IDS, App control etc. sont au menu mais la présentation manque un peu de matière pour pouvoir en dire davantage.&lt;/p>
&lt;h2 id="how-powercli-makes-vsphere-configuration-management-easy-code2214e">How PowerCLI Makes vSphere Configuration Management Easy &lt;code>[CODE2214E]&lt;/code>&lt;/h2>
&lt;ul>
&lt;li>Auteur de la notice ci-dessous: &lt;em>&lt;a href="https://vuptime.io/about/#lrivallain">Ludovic Rivallain&lt;/a>&lt;/em>&lt;/li>
&lt;li>Speakers(s):
&lt;ul>
&lt;li>&lt;strong>Kyle Ruddy&lt;/strong>, Senior Technical Marketing Architect, VMware&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;a href="https://videos.vmworld.com/global/2019/videoplayer/29471">Vidéo&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>Au cours de cette présentation Kyle nous a présenté rapidement quelques moyens de maintenir une configuration vSphere/vCenter à l'aide d'outils tels que &lt;em>Ansible&lt;/em> ou &lt;em>PowerShell Desired State Configuration&lt;/em>.&lt;/p>
&lt;p>Personnellement, j'ai déjà un peu d'expérience avec &lt;em>Ansible&lt;/em>, bien moins (pur ne pas dire, du tout!) avec PWS DSC. Je ne dirais pas que je suis concquis par cet outil, car Powershell n'est pas mon langage préféré au quotidien, mais force est de reconnaitre que le chemin parcourus est long. Il est désormais possible de faire un PowerShell quelque chose qui commence à ressembler à Ansible (sans la diversité des modules Ansible pour le moment).&lt;/p>
&lt;p>J'ai bien apprécié le fait d'avoir une démo en live aussi... Beaucoup de présentations sont des enregistrements, ici c'était du live, avec les risques de l'effet démo, mais surtout, la capacité à mieux expliquer des points de détails. D'ailleurs une des démos n'ayant pas fonctionné, on a basculé sur un backup vidéo: là ok!&lt;/p>
&lt;p>Quelques liens pour creuser plus loin cette histoire de DSC:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://blogs.vmware.com/PowerCLI/2018/12/getting-started-dsc-for-vmware.html">Getting Started with Desired State Configuration Resources for VMware&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/vmware/dscr-for-vmware">dscr-for-vmware sur GitHub&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="nsx-automation-with-ansible-a-complete-guide-for-day-0-operations-code1617e">NSX Automation with Ansible: A Complete Guide for Day 0 Operations &lt;code>[CODE1617E]&lt;/code>&lt;/h2>
&lt;ul>
&lt;li>Auteur de la notice ci-dessous: &lt;em>&lt;a href="https://vuptime.io/about/#lrivallain">Ludovic Rivallain&lt;/a>&lt;/em>&lt;/li>
&lt;li>Speakers(s):
&lt;ul>
&lt;li>&lt;strong>Madhukar Krishnarao&lt;/strong>, Technical Product Manager, VMware&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;a href="https://videos.vmworld.com/global/2019/videoplayer/28088">Vidéo US&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>L'idée de la conférence m'a particulièrement emballé: Déployer une infra NSX-T uniquement avec Ansible.&lt;/p>
&lt;p>Alors le format de la conf n'a pas permis de le démontrer, mais visiblement c'est:&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Possible&lt;/strong>: comptez 40' pour un cluster de 3 managers NSX environ.&lt;/li>
&lt;li>&lt;strong>Supporté&lt;/strong> par VMware. Le module NSX-T est disponible sur le GitHub de VMware: &lt;a href="https://github.com/vmware/ansible-for-nsxt">vmware/ansible-for-nsxt&lt;/a>&lt;/li>
&lt;li>Plutôt &lt;strong>bien pensé&lt;/strong> vue les contraintes imposées par le modèle NSX-T.&lt;/li>
&lt;/ul>
&lt;p>Et bien sûr, au delà du &lt;em>day-0&lt;/em> (déploiement), il est possible d'adresser tous les uses cases &lt;em>day-2&lt;/em>! création, modification, suppression d'objets et de configurations.&lt;/p>
&lt;p>Une bonne confirmation qu'Ansible est le cheval sur qui miser dans la proposition du marché en ce qui concerne les solutions de &lt;em>configuration management&lt;/em>.&lt;/p>
&lt;h2 id="whats-new-with-the-ansible-modules-for-vmware-code3300e">What's new with the Ansible Modules for VMware &lt;code>[CODE3300E]&lt;/code>&lt;/h2>
&lt;ul>
&lt;li>Auteur de la notice ci-dessous: &lt;em>Christian Tritten&lt;/em>&lt;/li>
&lt;li>Speaker(s):
&lt;ul>
&lt;li>&lt;strong>Dylan Silva&lt;/strong>, Senior Principal Product Manager, Red Hat, Inc&lt;/li>
&lt;li>&lt;strong>Kyle Ruddy&lt;/strong>, Senior Technical Marketing Architect, VMware&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;a href="https://videos.vmworld.com/global/2019/videoplayer/30232">Vidéo&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>Cette session présente quelques modules VMware à venir sur Ansible 2.9 et 2.10.&lt;/p>
&lt;ul>
&lt;li>&lt;code>vmware_content_libray_manager&lt;/code>&lt;/li>
&lt;li>&lt;code>vmware_content_libray_info&lt;/code>&lt;/li>
&lt;li>&lt;code>vmware_content_deploy_template&lt;/code>&lt;/li>
&lt;/ul>
&lt;p>Ces nouveaux modules permettent d'agir avec la &lt;em>Content Library&lt;/em> de vSphere pour permettre la gestion de templates de VMs, vApps, images ISO, etc.&lt;/p>
&lt;p>Une démontration illustre quelques exemples de mise en oeuvre.&lt;/p>
&lt;h2 id="deploy-kubernetes-apps-on-pks-using-native-tools-code1152e">Deploy Kubernetes Apps on PKS Using Native Tools &lt;code>[CODE1152E]&lt;/code>&lt;/h2>
&lt;ul>
&lt;li>Auteur de la notice ci-dessous: &lt;em>Christian Tritten&lt;/em>&lt;/li>
&lt;li>Speaker(s):
&lt;ul>
&lt;li>&lt;strong>Tom Schwaller&lt;/strong>, Sr. Technical Product Manager, VMware&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;a href="https://videos.vmworld.com/global/2019/videoplayer/27573">Vidéo&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>Présentation des différentes façon de déployer une application sur Kubernetes :&lt;/p>
&lt;ul>
&lt;li>Via &lt;code>kubectl&lt;/code>&lt;/li>
&lt;li>Using Helm charts&lt;/li>
&lt;li>Using Operators --&amp;gt; exemple avec un operator mysql&lt;/li>
&lt;/ul>
&lt;p>Utilisation de l'outil &lt;a href="https://jupyter.org/">Jupyter Notes&lt;/a> pour une démo à l'intérieur du navigateur.&lt;/p>
&lt;p>Session un peu décevante car bâclée par manque de temps (25 minutes allouées seulement alors qu'il en aurait fallu au moins le double).&lt;/p>
&lt;h2 id="the-genious-of-kubernetes-code1172e">The Genious of Kubernetes &lt;code>[CODE1172E]&lt;/code>&lt;/h2>
&lt;ul>
&lt;li>Auteur de la notice ci-dessous: &lt;em>Christian Tritten&lt;/em>&lt;/li>
&lt;li>Speaker(s):
&lt;ul>
&lt;li>&lt;strong>Richard Lander&lt;/strong>, Senior Cloud Native Architect, VMware&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;a href="https://videos.vmworld.com/global/2019/videoplayer/28408">Vidéo&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>Super présentation de Richard Lander, un ancien de chez CoreOS, puis Heptio.&lt;/p>
&lt;p>Il explique en détail le mode de fonctionnement de Kubernetes basé sur la notion d'&lt;strong>API first&lt;/strong>.&lt;/p>
&lt;p>Kubernetes lui même est développé comme une application micro-service dont chacun des composants ignore tout des autres. Chaque service connaît uniquement le service d'API, et s'abonne à certains types d'évènement afin de déclencher des actions en réponse aux évènements qui le concernent. Les &lt;strong>Controllers&lt;/strong> sont des programmes exécutés en boucle dont l'objectif est de mettre le système en conformité avec l'état désiré.&lt;/p>
&lt;p>En effet : un &lt;code>kubectl create pod&lt;/code> ne créé pas directement un pod mais simplement une entrée dans l'API de Kubernetes. Dans un second temps, le composant Scheduler (qui est abonné aux évènements de type Pod) est chargé de trouver un point de chute pour le Pod. Une fois qu'il a trouvé un Node pour héberger le Pod, il modifie simplement l'état de la ressource via l'API en ajoutant la propriété NodeName. Enfin, le composant Kubelet du node correspondant à celui spécifié dans la propriété NodeName du Pod (qui est abonné aux évènements des pods qui le concernent) va ensuite créer effectivement le Pod et venir modifier le Status de la ressource dans l'API avec la valeur Running.&lt;/p>
&lt;h2 id="understand-the-importance-and-impact-of-service-mesh-mte6169e">Understand the Importance and Impact of Service Mesh &lt;code>[MTE6169E]&lt;/code>&lt;/h2>
&lt;ul>
&lt;li>Auteur de la notice ci-dessous: &lt;em>Christian Tritten&lt;/em>&lt;/li>
&lt;li>Speaker(s):
&lt;ul>
&lt;li>&lt;strong>Deepa Kalani&lt;/strong>, Staff Engineer, VMware&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>À table avec un expert. On se retrouve à 7 ou 8 autour de l'expert Andrew Babakian pour parler service mesh. La session est assez intéressante. L'expert expose en détail l'intérêt du service mesh avec quelques schémas sur tableau blanc.&lt;/p>
&lt;h2 id="that-firewall-did-what--the-nsx-t-data-center-distributed-firewall-in-depth-edu1174e">That Firewall did what ? The NSX-T Data Center Distributed Firewall in Depth &lt;code>[EDU1174E]&lt;/code>&lt;/h2>
&lt;ul>
&lt;li>Auteur de la notice ci-dessous: &lt;em>Jérémy Rossignol&lt;/em>&lt;/li>
&lt;li>Speaker(s):
&lt;ul>
&lt;li>&lt;strong>Tim Burkard&lt;/strong>, Senior Technical Trainer, VMware&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>Petite conférence sur les opérations de debug à mener au sein de NSX-T avec un très bon speaker, si vous avez l'occasion, allez voir ses conférences elles sont toujours très instructives et abordable.&lt;/p>
&lt;p>Il a repris la conférence qu'il avait fait l'année dernière sur le troubleshooting pas de nouveautés, du coup je vous fais un petit rappel.&lt;/p>
&lt;blockquote>
&lt;p>&amp;quot;You shall not pass&amp;quot;&lt;/p>
&lt;/blockquote>
&lt;p>Voilà ce que l'on attend de notre firewall, c'est sur ces 4 petits mots que commence la session. L'utilité de notre firewall distribué est bien d'empêcher les attaques sur nos systèmes mais aussi les empêcher de pouvoir rebondir depuis un serveur via une porte dérobée.&lt;/p>
&lt;p>Néanmoins sans les bons outils il peut être difficile de bien diagnostiquer les problèmes de communication. La difficulté lorsque l'on met en place la micro segmentations avec le firewall distribué est bien de s'assurer que l'on ne va pas contraindre les applications et se créer nos propres problèmes.&lt;/p>
&lt;p>Le sujet ici est de savoir analyser en temps réel ce qui se passe au sein de notre infrastructure au niveau réseau et firewalling.&lt;/p>
&lt;p>NSX introduit des outils qui nous permettent de répondre à cette problématique.&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Flow Monitoring&lt;/strong>: grâce à lui nous pouvons analyser en temps réel via une interface graphique le traffic réseaux. Il nous permet aussi de bloquer ou d'autoriser via un simple clic le traffic affiché.&lt;/li>
&lt;li>&lt;strong>Traceflow&lt;/strong>: cet outil nous permettra de tester la communication depuis un source vers une target donnée par le port que on lui indiquera.&lt;/li>
&lt;li>&lt;strong>Packet Capture&lt;/strong>: comme son nom l'indique, il va permettre de capturer les trames à la manière d'un &lt;em>wireshark&lt;/em>.&lt;/li>
&lt;/ul>
&lt;p>Et bien sûr dans l'interface graphique de NSX vous disposez aussi de l'event viewer et des derniers logs de l'applicatif.&lt;/p>
&lt;p>Conférence très courte mais très intéressante, juste dommage qu'on ne dispose pas de la vidéos car cette conférence était donnée sur le &lt;em>Certification Lounge&lt;/em>.&lt;/p>
&lt;p>En tout cas, je vous le répète si vous souhaitez en apprendre plus sur NSX allez vois les conférences de Tim Burkard elles vous permettront d'y voir un peu plus clair.&lt;/p>
&lt;p>En voici quelques unes très intéressantes:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://videos.vmworld.com/global/2019/videoplayer/27567">Demystifying the NSX-T Control and Data Plane&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://videos.vmworld.com/global/2018/videoplayer/26494">How to Design Multi-layered Security in the SDDC with NSX Data Center&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="certification-nsx-t">Certification NSX-T&lt;/h2>
&lt;ul>
&lt;li>Auteur de la notice ci-dessous: &lt;em>Jérémy Rossignol&lt;/em>&lt;/li>
&lt;/ul>
&lt;p>J'ai voulu tenter l'expérience de passer une certification au VMworld cette année, spoiler-alert je l'ai loupé de peu ^^&lt;/p>
&lt;p>En octobre j'ai eu l'occasion de faire la formation ICM de NSX-T, avec l'opportunité de passer la certification, avec le discount qu'il y'a sur les certifications au VMworld (-50%) il fallait au moins essayer.&lt;/p>
&lt;p>J'ai pas mal révisé ce qui m'a coûté presque toute ma journée de conférence du mardi :( mais bon c'était pour la bonne cause.&lt;/p>
&lt;p>Je l'ai manqué à 10 points, c'est rageant mais j'ai pu voir à quoi elle ressemblait et ce n'est pas si évident que ça.&lt;/p>
&lt;p>Un conseil du coup pour ceux qui souhaite la passer, manipulez beaucoup sur NSX-T et refaites les labs de la formation ICM plusieurs fois car certaines questions sont assez pièges notamment sur les différentes commandes à exécuter sur les labs, il faut connaître la syntaxe exacte pour ne pas se tromper ^^&lt;/p>
&lt;p>Enfin si vous souhaitez mettre toutes les chances de votre côté, je pense que la réduction n'en vaut pas la chandelle, je n'ai pas profité de la même manière du VMworld cette année que l'année dernière, il est préférable que vous passiez votre certification dans un centre d'examens près de chez vous.&lt;/p>
&lt;p>Mais si vous souhaitez quand même essayer de la passer au VMworld, il faut savoir que cette année par exemple ils donnaient un T-Shirt &lt;em>&amp;quot;Certified at VMworld&amp;quot;&lt;/em> pour tous ceux qui obtenaient la certif :'(.&lt;/p></description></item><item><title>VMworld 2019 – Récapitulatif jour 1</title><link>https://vuptime.io/post/2019-11-04-vmworld-2019-eu-day1/</link><pubDate>Mon, 04 Nov 2019 00:00:00 +0000</pubDate><guid>https://vuptime.io/2019/11/04/VMworld-2019-EU-Day1/</guid><description>
&lt;h2 id="operating-the-ultimate-hybrid-cloud-with-vmware-cloud-foundation-hbi1519te">Operating the Ultimate Hybrid Cloud with VMware Cloud Foundation &lt;code>[HBI1519TE]&lt;/code>&lt;/h2>
&lt;ul>
&lt;li>Auteur de la notice ci-dessous: &lt;em>&lt;a href="https://vuptime.io/about/#lrivallain">Ludovic Rivallain&lt;/a>&lt;/em>&lt;/li>
&lt;li>Speakers(s):
&lt;ul>
&lt;li>&lt;strong>Heath Johnson&lt;/strong>, Sr. Technical Marketing Manager, VMware&lt;/li>
&lt;li>&lt;strong>Kevin Tebea&lt;/strong>r, Staff Technical Marketing Architect, VMware&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;a href="https://videos.vmworld.com/global/2019/videoplayer/29991">Vidéo&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>Pour ma première conférence cette année, j'avais choisi un workshop (4h) sur &lt;strong>Cloud Foundation&lt;/strong>. Pour rappel, &lt;strong>Cloud Foundation&lt;/strong> permet d'automatiser la construction et la maintenance d'un cloud &lt;em>privé&lt;/em> ou hybride via une appliance &lt;em>Cloud Builder&lt;/em>* et d'une spreadsheet Excel de configuration. Ensuite, un &lt;strong>SDDC Manager&lt;/strong> permet de maintenir, entretenir et opérer le SDDC au complet.&lt;/p>
&lt;p>Le point de départ pour débuter l'aventure vCF: 4 hosts &lt;em>vsan-ready-nodes&lt;/em> sur lesquels se reposera le &lt;em>Management Workload Domain&lt;/em>.&lt;/p>
&lt;p>Malheureusement, la présentation ne propose pas de démonstration du déploiement initial. Toutefois nous aurons eu la démo du déploiement d'un nouveau &lt;em>Workload Domain&lt;/em> (WD) vSphere+vSAN puis d'un &lt;em>Workload Domain&lt;/em> &lt;em>Horizon&lt;/em>.&lt;/p>
&lt;p>Pour ma part je suis surpris de certains choix de design décrit lors de la présentation:&lt;/p>
&lt;ul>
&lt;li>&lt;em>PSC&lt;/em> externes: je pensais que c'était non-recommandé à présent.&lt;/li>
&lt;li>1 vCenter par &lt;em>workload domain&lt;/em>: merci la consommation de licences. Surtout que les WD semblent très vites spécialisés pour des usages particuliers, non mélangeables.&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>Gabe Rosas&lt;/strong> nous a aussi présenté HCX et la possibilité de l'utiliser pour migrer son workload legacy vers un WD vCF: Là encore, je trouve que c'est un palliatif onéreux à l'absence de possibilité d'intégrer des workloads existants à ceux &lt;em>&amp;quot;contrôlés&amp;quot;&lt;/em> dans un monde vCF.&lt;/p>
&lt;p>À part ça, vCF semble prometteur pour accélérer la mise en place d'environnements SDDC chez nos clients.&lt;/p>
&lt;p>La partie day2, semble aussi intéressante:&lt;/p>
&lt;ul>
&lt;li>Mise à jour des composants du SDDC (via des bundles spécialisés)&lt;/li>
&lt;li>Mise à jour de mots de passe:
&lt;ul>
&lt;li>Via une auto-génération (il est ensuite possible d'utiliser un outil en CLI sur le SDDC manager directement)&lt;/li>
&lt;li>Via une entrée utilisateur classique&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Mise à jour des certificats SSL en s'appuyant sur:
&lt;ul>
&lt;li>L'&lt;em>AC&lt;/em> d'&lt;em>Active Directory&lt;/em>&lt;/li>
&lt;li>Une &lt;em>AC&lt;/em> &lt;em>OpenSSL&lt;/em>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>Pour finir, &lt;strong>Hicham (&lt;em>he-sham&lt;/em>) Mourad&lt;/strong> a présenté la très connue suite vRealize et ses produits. Rien de neuf sous le soleil de ce côté si ce n'est un petit mélange des genre entre:&lt;/p>
&lt;ul>
&lt;li>Des capacités annoncées mais seulement dispos en version 8.0&lt;/li>
&lt;li>Une démo en vRA 7.6…&lt;/li>
&lt;/ul>
&lt;h2 id="run-kubernetes-on-vmware-kub2073wer">Run Kubernetes on VMware &lt;code>[KUB2073WER]&lt;/code>&lt;/h2>
&lt;ul>
&lt;li>Auteur de la notice ci-dessous: &lt;em>Christian Tritten&lt;/em>&lt;/li>
&lt;li>Speaker(s):
&lt;ul>
&lt;li>&lt;strong>Boskey Savla&lt;/strong>, Technical Product Line Marketing Manager, VMware&lt;/li>
&lt;li>&lt;strong>Cody deArkland&lt;/strong> , Technical Product Line Marketing Manager, VMware&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>Session hands'on de 13h à 16h. Au programme:&lt;/p>
&lt;ul>
&lt;li>Présentation des bénéfices du passage au conteneurs et à l'orchestration via Kubernetes.&lt;/li>
&lt;li>Hands'on : déploiement d'une application microservice sur PKS (VMware cloud) avec kubectl (Labs: &lt;a href="https://github.com/Boskey/run_kubernetes_with_vmware/wiki">Boskey/run_kubernetes_with_vmware&lt;/a>)&lt;/li>
&lt;/ul>
&lt;h2 id="operationalizing-nsx-t-workshop-networking-and-security-use-cases-cnet2519te">Operationalizing NSX-T Workshop: Networking and Security Use Cases &lt;code>[CNET2519TE]&lt;/code>&lt;/h2>
&lt;ul>
&lt;li>Auteur de la notice ci-dessous: &lt;em>Jérémy Rossignol&lt;/em>&lt;/li>
&lt;li>Speaker(s):
&lt;ul>
&lt;li>&lt;strong>Pooja Patel&lt;/strong>, Director of NSX Technical Product Management, VMware&lt;/li>
&lt;li>&lt;strong>Francois Tallet&lt;/strong>, Technical Product Manager, VMware&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>Et on commence le VMworld par une grosse session workshop sur NSX-T de 4h !!!
Les gens sont motivés, la salle est pleine, ça durera peut être pas.&lt;/p>
&lt;p>On commence par un petit rappel sur les avantages de NSX-T:&lt;/p>
&lt;ul>
&lt;li>compatible avec KVM et ESXi&lt;/li>
&lt;li>On peut l'utiliser à la fois avec des VM, des conteneurs mais aussi et c'est le gros plus les baremetal server.&lt;/li>
&lt;li>il est aussi multicloud à la fois sur le on-premise, du hybrid cloud mais aussi du cloud public (actuellement AWS, Azure, IBM cloud, VMC on AWS et bien d'autres)&lt;/li>
&lt;/ul>
&lt;p>Petite info qui a son importance quand on sait que VMware galère un peu avec le load balancing sur NSX-T, VMware vient d'acquérir AVI Networks qui sont spécialisé sur ce segment, il faudra surveiller les futures annonces à venir :).&lt;/p>
&lt;p>On enchaine ensuite sur de nouveaux rappel concernant les composants de NSX-T répartis en data plane, control plane et management plane.
Petite subtilité par rapport à NSX-V, au niveau des NSX controller et Manager qui ne sont plus qu'une seule et même VM avec NSX-T, vous comprendrez donc que on va avoir ici 3 NSX manager qui auront aussi le rôle de NSX controller.&lt;/p>
&lt;p>Sur toute la conférence nous revoyons donc ensemble tous les concepts de NSX-T et beaucoup de définitions sur tous les objets NSX-T en passant du N-VDS jusqu'à la restauration d'un NSX Manager.&lt;/p>
&lt;p>Nous avons aussi eu pas mal d'infos sur le design des infrastructure NSX-T mais aussi de l'utilisation des T0 et T1 en architecture multi tenant (T0 connexion N/S, T1 par tenant).&lt;/p>
&lt;p>Au passage concernant l'automatisation, petite nouveauté terraform et ansible sont full supported par VMware pour l'automatisation, voici quelques liens utiles pour commencer :&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://www.terraform.io/docs/providers/nsxt/index.html">NSX-T et Terraform&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/vmware/ansible-for-nsxt">NSX-T et Ansible&lt;/a>&lt;/li>
&lt;li>Pour les &lt;a href="https://nsx.techzone.vmware.com">débutants en automatisation&lt;/a>&lt;/li>
&lt;/ul>
&lt;figure>&lt;img src="https://vuptime.io/images/vmworld2019/day1_VMWorld_Logo.png"/>&lt;figcaption>
&lt;h4>Logo VMworld&lt;/h4>
&lt;/figcaption>
&lt;/figure></description></item><item><title>VMworld 2019 – C'est parti !</title><link>https://vuptime.io/post/2019-11-03-vmworld-2019-cestparti/</link><pubDate>Sun, 03 Nov 2019 00:00:00 +0000</pubDate><guid>https://vuptime.io/2019/11/03/VMworld-2019-cestparti/</guid><description>
&lt;p>Plus que quelques heures avant de décoller en direction de Barcelone avec 2 collègues de SII Ouest afin d'assister à mon second VMworld.&lt;/p>
&lt;p>Au-delà de l'aspect &lt;em>VMware &amp;quot;pur&amp;quot;&lt;/em>, les intérêts d'assister à cet évènement sont multiples.&lt;/p>
&lt;h2 id="veille-technologique">Veille technologique&lt;/h2>
&lt;p>Tout d'abord, VMware étant plutôt en pointe en matière d'innovation, d'acquisitions et de stratégie, c'est une bonne occasion de voir l'état du marché de l'infrastructure et du cloud-computing, tout en pouvant anticiper aussi les changements prédis (et pour le moment, force est de constaté que VMware vise plutôt juste dans cette anticipation).&lt;/p>
&lt;h2 id="réseautage-et-communautés">Réseautage et communautés&lt;/h2>
&lt;p>Ensuite, le VMworld est un formidable moment de partage et de réseautage. Si vous voulez rencontrer des passionnés de virtulisation, de SDN, d'hyperconvergence etc., ils y sont probablement.&lt;/p>
&lt;p>C'est une bonne occasion aussi de rencontrer ses clients dans un environnement différents des échanges plus traditionnels du quotidien professionnel.&lt;/p>
&lt;p>Enfin, vous pouvez aussi trouver le temps de partager de bons moments conviviaux à l'extérieur lors des fameuses &amp;quot;party&amp;quot; organisées par différent·e·s fournisseurs ou communautés.&lt;/p>
&lt;h1 id="à-demain-">À demain !&lt;/h1>
&lt;p>Arrivée prévue ce soir aux alentours de minuit sur Barcelone, puis une petite nuit avant d'attaquer la première journée, celle des partenaires. Rdv demain donc.&lt;/p>
&lt;figure>&lt;img src="https://vuptime.io/images/vmworld2019.png"/>&lt;figcaption>
&lt;h4>Logo VMworld 2019&lt;/h4>
&lt;/figcaption>
&lt;/figure></description></item><item><title>VMUG Paris, Septembre 2019, Slides de notre présentation vRO</title><link>https://vuptime.io/post/2019-09-28-vmug-paris-presentation-vro/</link><pubDate>Sat, 28 Sep 2019 00:00:00 +0000</pubDate><guid>https://vuptime.io/2019/09/28/vmug-paris-presentation-vro/</guid><description>
&lt;p>Une nouvelle édition du vMUG Paris s'achevait jeudi soir autour d'une vBeer méritée par tous:&lt;/p>
&lt;ul>
&lt;li>Les &lt;strong>organisateurs&lt;/strong> tout d'abord: merci à eux pour cet évènement très réussi une nouvelle fois !&lt;/li>
&lt;li>Les &lt;strong>orateurs&lt;/strong>, qui nous ont fait l'honneur de leur présence, de leur temps et de leur savoir.&lt;/li>
&lt;li>Le public, qui avait passé une journée bien chargée !&lt;/li>
&lt;li>Les sponsors pour leur soutien.&lt;/li>
&lt;li>Mon employeur: &lt;strong>SII Group&lt;/strong> qui nous permet de prendre part à ce type d'évènement.&lt;/li>
&lt;/ul>
&lt;blockquote>
&lt;p>Note: Il semblerait que certains aient continué les vBeers jusque dans le train ;-)&lt;/p>
&lt;/blockquote>
&lt;p>&lt;figure>&lt;img src="https://vuptime.io/images/frvmug-09-2019-paris.png"/>&lt;figcaption>
&lt;h4>Logo vMUG France&lt;/h4>
&lt;/figcaption>
&lt;/figure>
{:width=&amp;quot;200px&amp;quot;}&lt;/p>
&lt;p>&lt;a href="https://vuptime.io/about/#aharlaut">@Antoine_hlt&lt;/a> et &lt;a href="https://vuptime.io/about/#lrivallain">moi-même&lt;/a> présentions en fin d'après midi, un produit mal connu du portfolio VMware: &lt;em>vRealize Orchestrator&lt;/em>. Pour ne rien cacher, la présentation était l'argement inspirée de la &lt;a href="https://vuptime.io/2019/03/08/vmug-france-meetandgeek-rennes-bilan/">présentation que j'avais réalisé à Rennes&lt;/a> il y a quelques mois à l'occasion du &lt;em>meet&amp;amp;geek&lt;/em> organisé à &lt;strong>SII Ouest&lt;/strong>.&lt;/p>
&lt;p>Nous avions aussi préparé une petite démonstration basé sur le déploiement d'un noeud &lt;em>Kubernetes&lt;/em>.&lt;/p>
&lt;blockquote>
&lt;p>Apparté: Tout le monde a évoqué K8S dans sa présentation Jeudi je crois bien!&lt;/p>
&lt;/blockquote>
&lt;p>Et nous avions apporté avec nous, un &lt;em>RaspberryPi&lt;/em> connecté à quelques leds de couleur permettant de suivre visuellement, l'état du workflow. L'objet a succité un peu d'amusement: c'était le but.&lt;/p>
&lt;p>Un merci tout spécial à &lt;a href="https://twitter.com/ErikBussink">Erik Bussink&lt;/a>, venu du pays du fromage et du chocolat, qui a offert à un des spectateurs, un kit &lt;em>RaspberryPi 3b&lt;/em> avec boitier et alimentation POE.&lt;/p>
&lt;p>Les sources de la présentation sont comme d'habitude, sur github: &lt;a href="https://vupti.me/vmug2019-src">vupti.me/vmug2019-src&lt;/a> et la présentation elle-même, si dessous, ou à l'adresse suivante: &lt;a href="https://vupti.me/vmug2019">vupti.me/vmug2019&lt;/a>.&lt;/p>
&lt;div>
&lt;iframe width="100%" height="500" src="https://vupti.me/vmug2019" style="border: 1px solid grey;">&lt;/iframe>
&lt;/div>
&lt;p>Quelques photos de la journée:&lt;/p>
&lt;blockquote class="twitter-tweet">&lt;p lang="en" dir="ltr">Last &lt;a href="https://twitter.com/VMUGFR?ref_src=twsrc%5Etfw">@VMUGFR&lt;/a> session Ludovic and Antoine &lt;a href="https://twitter.com/hashtag/vRealizeOrchestrator?src=hash&amp;amp;ref_src=twsrc%5Etfw">#vRealizeOrchestrator&lt;/a> can do all, even taking care of &lt;a href="https://twitter.com/hashtag/kubernetes?src=hash&amp;amp;ref_src=twsrc%5Etfw">#kubernetes&lt;/a> &lt;a href="https://twitter.com/hashtag/vRO?src=hash&amp;amp;ref_src=twsrc%5Etfw">#vRO&lt;/a> &lt;a href="https://t.co/LeGpJWR3YG">pic.twitter.com/LeGpJWR3YG&lt;/a>&lt;/p>&amp;mdash; Erik Bussink (@ErikBussink) &lt;a href="https://twitter.com/ErikBussink/status/1177218278101606401?ref_src=twsrc%5Etfw">September 26, 2019&lt;/a>&lt;/blockquote> &lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8">&lt;/script>
&lt;blockquote class="twitter-tweet">&lt;p lang="fr" dir="ltr">[REX vRO] Dernier talk de la journée avec &lt;a href="https://twitter.com/lrivallain?ref_src=twsrc%5Etfw">@lrivallain&lt;/a> &amp;amp; &lt;a href="https://twitter.com/antoine_hlt?ref_src=twsrc%5Etfw">@antoine_hlt&lt;/a> autour de l’&lt;a href="https://twitter.com/hashtag/orchestration?src=hash&amp;amp;ref_src=twsrc%5Etfw">#orchestration&lt;/a> !&lt;br> &lt;a href="https://twitter.com/hashtag/vRO?src=hash&amp;amp;ref_src=twsrc%5Etfw">#vRO&lt;/a> &lt;a href="https://twitter.com/hashtag/VMware?src=hash&amp;amp;ref_src=twsrc%5Etfw">#VMware&lt;/a> &lt;a href="https://twitter.com/GroupeSII?ref_src=twsrc%5Etfw">@GroupeSII&lt;/a> &lt;a href="https://twitter.com/hashtag/VMUGFR?src=hash&amp;amp;ref_src=twsrc%5Etfw">#VMUGFR&lt;/a> &lt;a href="https://t.co/OQ39Ka11ux">pic.twitter.com/OQ39Ka11ux&lt;/a>&lt;/p>&amp;mdash; VMUG France (@VMUGFR) &lt;a href="https://twitter.com/VMUGFR/status/1177225744046526464?ref_src=twsrc%5Etfw">September 26, 2019&lt;/a>&lt;/blockquote> &lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8">&lt;/script>
&lt;blockquote class="twitter-tweet">&lt;p lang="en" dir="ltr">[SUPER TALK] Special guest for our &lt;a href="https://twitter.com/hashtag/VMUGFR?src=hash&amp;amp;ref_src=twsrc%5Etfw">#VMUGFR&lt;/a> 2019, &lt;a href="https://twitter.com/NHagoort?ref_src=twsrc%5Etfw">@NHagoort&lt;/a> talk us about “vSphere ESXi past, present and future” Are you ready ? &lt;a href="https://twitter.com/VMware_Fr?ref_src=twsrc%5Etfw">@VMware_Fr&lt;/a> &lt;a href="https://twitter.com/MyVMUG?ref_src=twsrc%5Etfw">@MyVMUG&lt;/a> &lt;a href="https://twitter.com/VMware?ref_src=twsrc%5Etfw">@VMware&lt;/a> &lt;a href="https://twitter.com/DuncanYB?ref_src=twsrc%5Etfw">@DuncanYB&lt;/a> &lt;a href="https://twitter.com/FrankDenneman?ref_src=twsrc%5Etfw">@FrankDenneman&lt;/a> &lt;a href="https://twitter.com/CormacJHogan?ref_src=twsrc%5Etfw">@CormacJHogan&lt;/a> &lt;a href="https://twitter.com/hashtag/vExpert?src=hash&amp;amp;ref_src=twsrc%5Etfw">#vExpert&lt;/a> &lt;a href="https://t.co/8fPwW4iuUS">pic.twitter.com/8fPwW4iuUS&lt;/a>&lt;/p>&amp;mdash; VMUG France (@VMUGFR) &lt;a href="https://twitter.com/VMUGFR/status/1177148685031002112?ref_src=twsrc%5Etfw">September 26, 2019&lt;/a>&lt;/blockquote> &lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8">&lt;/script>
&lt;blockquote class="twitter-tweet">&lt;p lang="en" dir="ltr">&lt;a href="https://twitter.com/hashtag/VMUGFR?src=hash&amp;amp;ref_src=twsrc%5Etfw">#VMUGFR&lt;/a> 😎🤟😜Thank you to sponsors, speakers and vmuggers for making our event possible ! Amazing day with amazing people 😘&lt;a href="https://twitter.com/VMware_Fr?ref_src=twsrc%5Etfw">@VMware_Fr&lt;/a> &lt;a href="https://twitter.com/ovh_fr?ref_src=twsrc%5Etfw">@ovh_fr&lt;/a> &lt;a href="https://twitter.com/woueb?ref_src=twsrc%5Etfw">@woueb&lt;/a> &lt;a href="https://twitter.com/cqchu?ref_src=twsrc%5Etfw">@cqchu&lt;/a> &lt;a href="https://twitter.com/NHagoort?ref_src=twsrc%5Etfw">@NHagoort&lt;/a> &lt;a href="https://twitter.com/CormacJHogan?ref_src=twsrc%5Etfw">@CormacJHogan&lt;/a> &lt;a href="https://twitter.com/antoine_hlt?ref_src=twsrc%5Etfw">@antoine_hlt&lt;/a> &lt;a href="https://twitter.com/lrivallain?ref_src=twsrc%5Etfw">@lrivallain&lt;/a> &lt;a href="https://twitter.com/erwanquelin?ref_src=twsrc%5Etfw">@erwanquelin&lt;/a> &lt;a href="https://twitter.com/Kevin_Pcc_ovh?ref_src=twsrc%5Etfw">@Kevin_Pcc_ovh&lt;/a> &lt;a href="https://twitter.com/Ash2501?ref_src=twsrc%5Etfw">@Ash2501&lt;/a> &lt;a href="https://twitter.com/tonton_hub?ref_src=twsrc%5Etfw">@tonton_hub&lt;/a> &lt;a href="https://twitter.com/Gso_ski?ref_src=twsrc%5Etfw">@Gso_ski&lt;/a> &lt;a href="https://t.co/a6dV59yUcR">pic.twitter.com/a6dV59yUcR&lt;/a>&lt;/p>&amp;mdash; VMUG France (@VMUGFR) &lt;a href="https://twitter.com/VMUGFR/status/1177250467535040512?ref_src=twsrc%5Etfw">September 26, 2019&lt;/a>&lt;/blockquote> &lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8">&lt;/script>
&lt;p>Et parce que je le trouve vraiment très beau, le logo de cette année:&lt;/p>
&lt;figure>&lt;img src="https://vuptime.io/images/fr-mug-09-2019-paris_logo.jpg"/>&lt;figcaption>
&lt;h4>fr-mug-09-2019-paris_logo&lt;/h4>
&lt;/figcaption>
&lt;/figure></description></item><item><title>New release of VMware vRealize Orchestrator package diff tool</title><link>https://vuptime.io/post/2019-08-05-released-vro-package-diff_v2/</link><pubDate>Mon, 05 Aug 2019 00:00:00 +0000</pubDate><guid>https://vuptime.io/2019/08/05/released-vro-package-diff_v2/</guid><description>
&lt;p>About a year ago, I published a small tool to compare two VMware vRealize Orchestrator packages file: &lt;a href="https://vuptime.io/2018/02/28/vmware-vrealizeorchestrator-package-diff-python-tool/">vRO Package Diff&lt;/a>. Initial version was a simple python script accepting 2 files as arguments and without any input controls.&lt;/p>
&lt;p>Today, I publish a v2 of the tool with the following changes:&lt;/p>
&lt;ul>
&lt;li>&lt;code>vro-package-diff&lt;/code> is now a Pypi hosted project: &lt;a href="https://pypi.org/project/vro-package-diff/">vro-package-diff&lt;/a> and so, can be installed with &lt;code>pip install&lt;/code> command.&lt;/li>
&lt;li>An endpoit &lt;code>vro-diff&lt;/code> to access to the tool from any path location.&lt;/li>
&lt;li>Usage of &lt;a href="https://click.palletsprojects.com/">&lt;code>click&lt;/code>&lt;/a> to manage:
&lt;ul>
&lt;li>inputs packages&lt;/li>
&lt;li>help&lt;/li>
&lt;li>legend display&lt;/li>
&lt;li>test feature&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>A &lt;em>test&lt;/em> feature&lt;/li>
&lt;li>Documentation is hosted on &lt;a href="https://vro-package-diff.readthedocs.io">vro-package-diff.readthedocs.io&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://travis-ci.org/lrivallain/vro-package-diff/">Travis pipeline&lt;/a>&lt;/li>
&lt;/ul>
&lt;figure>&lt;img src="https://vuptime.io/images/vro-diff-package/vro-diff-package_v2.png"/>&lt;figcaption>
&lt;h4>Sample output of vro-diff-package&lt;/h4>
&lt;/figcaption>
&lt;/figure>
&lt;h2 id="install-the-new-version">Install the new version&lt;/h2>
&lt;p>From a python environment with &lt;code>pip&lt;/code> installed:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="ln">1&lt;/span>&lt;span class="cl">pip install vro-package-diff
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="usage">Usage&lt;/h2>
&lt;h3 id="get-the-help">Get the help&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="ln"> 1&lt;/span>&lt;span class="cl">vro-diff --help
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 2&lt;/span>&lt;span class="cl">Usage: vro-diff &lt;span class="o">[&lt;/span>OPTIONS&lt;span class="o">]&lt;/span> REFERENCE_PACKAGE COMPARED_PACKAGE
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 3&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 4&lt;/span>&lt;span class="cl">Start a diff operation between two vRO packages.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 5&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 6&lt;/span>&lt;span class="cl">REFERENCE_PACKAGE is the package you want to use as &lt;span class="nb">source&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 7&lt;/span>&lt;span class="cl">COMPARED_PACKAGE is the one you want to compare with reference one
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 8&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 9&lt;/span>&lt;span class="cl">Options:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">10&lt;/span>&lt;span class="cl">-l, --legend Display the legend after the diff table
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">11&lt;/span>&lt;span class="cl">-t, --test Exit with &lt;span class="sb">`&lt;/span>0&lt;span class="sb">`&lt;/span> &lt;span class="k">if&lt;/span> package can be safely imported. Else, returns
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">12&lt;/span>&lt;span class="cl"> the number of errors
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">13&lt;/span>&lt;span class="cl">-h, --help Show this message and exit.
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="examples">Examples&lt;/h3>
&lt;p>Compare two packages:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="ln">1&lt;/span>&lt;span class="cl">vro-diff tests/data/package_v1.0.package tests/data/package_v1.1.package
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Compare, then display legend (&lt;code>--legend&lt;/code>):&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="ln">1&lt;/span>&lt;span class="cl">vro-diff --legend --test tests/data/package_v1.0.package tests/data/package_v1.1.package
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Compare, then exit with error if there is conflicts (&lt;code>-–test&lt;/code>):&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="ln">1&lt;/span>&lt;span class="cl">vro-diff --test tests/data/package_v1.0.package tests/data/package_v1.1.package
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">2&lt;/span>&lt;span class="cl">&lt;span class="nb">echo&lt;/span> &lt;span class="nv">$?&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>The script will exit with the number of items with a conflict situation.&lt;/p>
&lt;p>This &lt;code>-–test&lt;/code> option can be usefull to implement CI/CD pipelines to compare, then upload(if there is no conflict) vRO packages.&lt;/p>
&lt;h3 id="contributions">Contributions&lt;/h3>
&lt;p>This tool needs vRO users to be tested and improved based on feedback and &lt;a href="https://github.com/lrivallain/vro-package-diff/graphs/contributors">contributions&lt;/a>: Feel free to &lt;a href="https://github.com/lrivallain/vro-package-diff/issues/new">open issue&lt;/a> or &lt;a href="https://github.com/lrivallain/vro-package-diff/compare">create pull request&lt;/a>.&lt;/p></description></item><item><title>Extending VMware vCloud Director functionalities</title><link>https://vuptime.io/post/2019-05-06-extending-vcloud-director-functionalities/</link><pubDate>Mon, 06 May 2019 00:00:00 +0000</pubDate><guid>https://vuptime.io/2019/05/06/extending-vcloud-director-functionalities/</guid><description>
&lt;p>This post is the English translation of the one published on &lt;a href="https://blog.groupe-sii.com/etendre-les-capacites-du-portail-vmware-vcloud-director/">blog.groupe-sii.com&lt;/a> to present a new kind of development activities in SII Group: the extension of the &lt;em>VMware vCloud Director&lt;/em> portal.&lt;/p>
&lt;p>The post will explain the concept that enables the extension of this VMware product to add new functionalities to the native portal and to provide a consistent user experience to final customers.&lt;/p>
&lt;h2 id="introduction-to-vmware-vcloud-director">Introduction to VMware vCloud Director&lt;/h2>
&lt;p>VMware vCloud Director is a quite common reference in virtualized infrastructures, especially for &lt;em>Service Providers&lt;/em> (for mutualized cloud hosting) or major companies with sizable infrastructure.&lt;/p>
&lt;p>Its concept is based on a simplified view, targeting VM users, to consume IaaS (&lt;em>Infrastructure-as-a-Service&lt;/em>) resources with tenant or service-based restrictions.&lt;/p>
&lt;p>Natively, vCloud Director (vCD) interface is an overlay of other VMware's product as vCenter/vSphere, et NSX-V (for &lt;em>Software-Defined Networking&lt;/em>) and its features are limited to the consumption of VM, storage and network resources (both &lt;em>L2&lt;/em> &amp;amp; &lt;em>L3&lt;/em>).&lt;/p>
&lt;h2 id="vmware-vcloud-director-extensions">VMware vCloud Director extensions&lt;/h2>
&lt;p>Since the 9.1 version (&lt;a href="https://docs.vmware.com/en/vCloud-Director/9.1/rn/rel_notes_vcloud_director_91.html">2018, march&lt;/a>), vCloud Director cames with an extensibility feature. This allows to the platform administrator to extend the features perimeter.&lt;/p>
&lt;p>Indeed, through a dedicated development, it is possible to create the technical context to execute the automation linked to new features to add to the vCD portal (UI, API, backend, third party interconnect...).&lt;/p>
&lt;blockquote>
&lt;p>&lt;strong>Example&lt;/strong> : Provide to end-users a &lt;a href="https://github.com/vmware/vcd-ext-sdk/tree/master/ui/samples/ticketing">support-ticketing-interface integrated to the vCD portal&lt;/a>.&lt;/p>
&lt;/blockquote>
&lt;p>The publication perimeter for a custom extension can be set according to the plateform needs and the extension. So it is possible to publish it for:&lt;/p>
&lt;ul>
&lt;li>Platform system administrators&lt;/li>
&lt;li>Customer's organizations with, at choice:
&lt;ul>
&lt;li>All organizations at the same time&lt;/li>
&lt;li>Only some selected organizations&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;figure>&lt;img src="https://vuptime.io/images/lumext-for-vcd/vcd_extensionpublish.png"/>&lt;figcaption>
&lt;h4>Example of the choice for extension&amp;#39;s publication&lt;/h4>
&lt;/figcaption>
&lt;/figure>
&lt;h3 id="extend-vcds-ui">Extend vCD's UI&lt;/h3>
&lt;p>Probably the most obvious benefit of the extensibility feature of vCloud Director is the capacity to integrate in a single user interface (&lt;em>UI&lt;/em>), new sections to give access to added features.&lt;/p>
&lt;p>This includes the addition of a customized item in the main navigation menu:&lt;/p>
&lt;figure>&lt;img src="https://vuptime.io/images/lumext-for-vcd/vcd_extensionmenu.png"/>&lt;figcaption>
&lt;h4>Example of navigation menu extension&lt;/h4>
&lt;/figcaption>
&lt;/figure>
&lt;p>It also includes the ability to add custom pages to display the content of extension(s). As those pages are loaded inside the vCD UI, it is recommended to reuse style and components of the native interface to offer an unified user experience (&lt;em>UX&lt;/em>).&lt;/p>
&lt;p>As vCD uses the open-source &lt;a href="https://clarity.design/">Clarity&lt;/a> framework, mainly developed by VMware, for the HTML5 interface, it is possible to reuse its components (&lt;strong>Angular&lt;/strong>), styles and best practices.&lt;/p>
&lt;h3 id="extend-vcds-api">Extend vCD's API&lt;/h3>
&lt;p>A second possibility offer by the extensibility kit of vCloud Director is to extend the perimeter of URI allowed in the vCloud API. With this API extension, it is now possible to use a standard vCloud API path (&lt;code>https://&amp;lt;vcloudserver&amp;gt;/api/&lt;/code>) to request information and actions for an extension.&lt;/p>
&lt;p>Let's take an example:&lt;/p>
&lt;blockquote>
&lt;p>Our &lt;code>coffee&lt;/code> extension aims to provide a feature to create &lt;em>coffee machine&lt;/em> order through vCD portal.&lt;/p>
&lt;p>Requests sent to vCloud API at this path : &lt;code>https://&amp;lt;vcloudserver&amp;gt;/api/coffee/order&lt;/code> and for instance, a &lt;code>POST&lt;/code> request type (and its appropriate parameters) will start a new order to the coffee machine. A &lt;code>GET&lt;/code> request will list the previous commands etc.&lt;/p>
&lt;/blockquote>
&lt;p>To handle the extension related customized requests, a backend server is necessary. This server can be hosted on a dedicated host (or the vCD server (&lt;em>cell&lt;/em>) but not recommended) and can be written in any language of your choice (Python, Java, Node etc.). Messages received by vCD on the extension path (&lt;code>coffee&lt;/code>) will be forwarded to an intermediate RabbitMQ server to be consumed by the extension backend. Once the request content is processed, response content is sent to the AMQP server and consumed by vCD to provide an answer.&lt;/p>
&lt;p>For our example:&lt;/p>
&lt;figure>&lt;img src="https://vuptime.io/images/lumext-for-vcd/architecture_overview.png"/>&lt;figcaption>
&lt;h4>Used paths for requests on Coffee extension&lt;/h4>
&lt;/figcaption>
&lt;/figure>
&lt;ol>
&lt;li>The user initiates a request (through the UI or directly through the exposed API extension).&lt;/li>
&lt;li>vCD compiles this request to an AMQP message with an extension-specific routing key fro the RabbitMQ server.&lt;/li>
&lt;li>The Extension's backend server can consume the message, make appropriate pre-checks (rights management, pre-requisites, open external connections etc.)&lt;/li>
&lt;li>One or many API requests are sent to the &lt;em>coffee machine&lt;/em> to create the order.&lt;/li>
&lt;li>The &lt;em>Coffee machine&lt;/em> answers with appropriate data: Ex: &lt;em>&amp;quot;Order preparation in progress&amp;quot;&lt;/em> or the list of previous orders.&lt;/li>
&lt;li>Extension's backend server process the data from the &lt;em>Coffee machine&lt;/em> (formatting, selection of items etc.) and is able to sent back the answer to initial vCD message through a dedicated queue (known from &lt;code>reply-to&lt;/code> field in initial AMQP message).&lt;/li>
&lt;li>vCD can now consume the answer from RabbitMQ and use the content as a response from the API call initiated by the user.&lt;/li>
&lt;/ol>
&lt;h3 id="extensibility-kit-of-vcloud-director">Extensibility kit of vCloud Director&lt;/h3>
&lt;p>To help the development of vCD's extensions, VMware provides a &lt;em>SDK&lt;/em> that contains:&lt;/p>
&lt;ul>
&lt;li>Minimal code for a UI extension (&lt;a href="https://github.com/vmware/vcd-ext-sdk/tree/master/ui/vcd-plugin-seed">&lt;em>vcd-plugin-seed&lt;/em>&lt;/a>).&lt;/li>
&lt;li>Some simple &lt;a href="https://github.com/vmware/vcd-ext-sdk/tree/master/ui/samples">extensions samples&lt;/a>:
&lt;ul>
&lt;li>&lt;em>About page&lt;/em>: no API&lt;/li>
&lt;li>&lt;em>Ticketing&lt;/em>: Extension to create and display support tickets with a non-persistent API in Python.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h2 id="practical-implementation-from-sii-group-lumext">Practical implementation from SII Group: LUMExt&lt;/h2>
&lt;p>As the &lt;em>coffee machine&lt;/em> is purely fictitious (even if it could be very useful ☺️), but the need for extensions in vCloud Director is not lacking.&lt;/p>
&lt;p>At SII Group, we had chosen to develop an interface to manage LDAP based users trough the vCloud Director portal.&lt;/p>
&lt;h3 id="présentation">Présentation&lt;/h3>
&lt;p>Natively, vCloud Director supports the authentication from both local and LDAP based users. Sadly, for LDAP based users, it is not possible to edit user's information or to create new one from vCD. Only attachment to an organization is possible.&lt;/p>
&lt;p>If you are a &lt;em>Service Provider&lt;/em> hosting customers that do not want to manage their own LDAP server to create users for vCD access, but aim to use a single source of authentication for multiple usages (vCD, VM's OS etc.): a mutualized LDAP server can be a useful service.&lt;/p>
&lt;p>&lt;strong>LUMExt&lt;/strong> (&lt;strong>L&lt;/strong>DAP &lt;strong>U&lt;/strong>ser &lt;strong>M&lt;/strong>anagement &lt;strong>Ext&lt;/strong>ension for vCloud Director) aims to provide a vCD-integrated management of LDAP-based users.&lt;/p>
&lt;p>Once a user is created in the LDAP server, it is possible to associate it with an organization and a role to allow its connection to the vCD portal.&lt;/p>
&lt;h3 id="api">API&lt;/h3>
&lt;p>This extension API is based on a Python script &lt;code>lumext&lt;/code> that initiates a new applicative &lt;em>thread&lt;/em> for each request from the AMQP queue. In the benefits of using per-request Python &lt;em>thread&lt;/em>, we can mention:&lt;/p>
&lt;ul>
&lt;li>Processing of multiples requests at the same time&lt;/li>
&lt;li>The process of a request does not affect the process of other request (current or future ones), even in case of error.&lt;/li>
&lt;/ul>
&lt;p>To consume and publish (&lt;em>consumer/publisher&lt;/em> roles) messages with AMQP protocol, we use the &lt;a href="https://pypi.org/project/kombu/">&lt;code>Kombu&lt;/code>&lt;/a> Python package as it turns out to be very reliable and to provide easy support for &lt;em>thread&lt;/em> usage.&lt;/p>
&lt;blockquote>
&lt;p>&lt;strong>Note :&lt;/strong> VMware's examples use the &lt;a href="https://pypi.org/project/pika/">&lt;code>Pika&lt;/code>&lt;/a> module for the same kind of usage.&lt;/p>
&lt;/blockquote>
&lt;p>We also have developed a &lt;em>MessageWorker&lt;/em> named &lt;a href="https://pypi.org/project/VcdExtMessageWorker/">&lt;code>VcdExtMessageWorker&lt;/code>&lt;/a> to start business-related threads. These extension-&lt;em>threads&lt;/em> represent the potential complexity of the feature to add to vCD (applicative workflow, data analysis, third party requests, etc.). &lt;em>MessageWorker&lt;/em> is generic and can be attached to other kind of extension-threads for other kind of purposes.&lt;/p>
&lt;p>In the case of &lt;strong>LUMExt&lt;/strong>, &lt;code>VcdExtMessageWorker&lt;/code> initiates a new thread of &lt;em>lumext worker&lt;/em> for each request. This one is in charge of the request-analysis (is it a listing request or a user-creation one, user-edition ?). Once the request is processed, the answer is published to the &lt;code>reply-to&lt;/code> queue of the RabbitMQ server and consumed by vCD.&lt;/p>
&lt;p>REST API extension provides the following paths to the users:&lt;/p>
&lt;ul>
&lt;li>&lt;code>/api&lt;/code> : root of vCD APIs (native)
&lt;ul>
&lt;li>&lt;code>/api/{org_id}&lt;/code> : root of an organization (native)
&lt;ul>
&lt;li>&lt;code>/api/{org_id}/lumext&lt;/code> : root of the extension (lumext)
&lt;ul>
&lt;li>&lt;code>/api/{org_id}/lumext/user&lt;/code> : (lumext)
&lt;ul>
&lt;li>&lt;code>GET&lt;/code> : list users&lt;/li>
&lt;li>&lt;code>POST&lt;/code> : create user&lt;/li>
&lt;li>&lt;code>/api/{org_id}/lumext/user/{login}&lt;/code> : (lumext)
&lt;ul>
&lt;li>&lt;code>DELETE&lt;/code> : delete current user&lt;/li>
&lt;li>&lt;code>PUT&lt;/code> : edit current user&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>Same API is available for both organization's administrators to setup automation tools (to create users, for example) and for the UI that fully relies on this API to access data.&lt;/p>
&lt;p>Finally, the usage of AMQP protocol, &lt;em>stateless threads&lt;/em> and our &lt;em>MessageWorker&lt;/em> based on Kombu allows to horizontally scale our extension backend to multiple nodes if necessary (to ensure high availability or load balancing).&lt;/p>
&lt;h3 id="ui">UI&lt;/h3>
&lt;p>The &lt;strong>LUMExt&lt;/strong> user interface is fully integrated to the vCD portal and is based on the same UI components (&lt;em>Angular&lt;/em>) and the same graphic charter (based on open-source &lt;a href="https://clarity.design/">Clarity&lt;/a> framework from VMware).&lt;/p>
&lt;p>The main navigation menu is supplemented with a new link to access to the &lt;strong>LUMExt&lt;/strong> pages.&lt;/p>
&lt;figure>&lt;img src="https://vuptime.io/images/lumext-for-vcd/preview_menu.png"/>&lt;figcaption>
&lt;h4>Main navigation menu&lt;/h4>
&lt;/figcaption>
&lt;/figure>
&lt;p>By default, LDAP based users list is displayed:&lt;/p>
&lt;figure>&lt;img src="https://vuptime.io/images/lumext-for-vcd/preview_userlisting.png"/>&lt;figcaption>
&lt;h4>LUMExt, users list&lt;/h4>
&lt;/figcaption>
&lt;/figure>
&lt;p>In the following screenshot, it is interesting to notice that only the middle part is developed for the extension. Navigation menu on top and tasks list on the bottom are vCD natives (and cannot be modified).&lt;/p>
&lt;figure>&lt;img src="https://vuptime.io/images/lumext-for-vcd/preview_userlisting_zoning_en.png"/>&lt;figcaption>
&lt;h4>LUMExt, users list - Zoning&lt;/h4>
&lt;/figcaption>
&lt;/figure>
&lt;p>To create a new user, some form fields are requested:&lt;/p>
&lt;ul>
&lt;li>Login&lt;/li>
&lt;li>Name&lt;/li>
&lt;li>Password (customized or client-side generated with minimal security requirements)&lt;/li>
&lt;li>Password confirmation&lt;/li>
&lt;li>Description (optional)&lt;/li>
&lt;/ul>
&lt;p>The data are sent to the backend and store in the LDAP server in appropriate directory fields.&lt;/p>
&lt;figure>&lt;img src="https://vuptime.io/images/lumext-for-vcd/preview_usercreation.png"/>&lt;figcaption>
&lt;h4>LUMExt, user creation&lt;/h4>
&lt;/figcaption>
&lt;/figure>
&lt;p>&lt;strong>LUMExt&lt;/strong> UI also provides user edition and user deletion and a specific wizard for password reset operation.&lt;/p>
&lt;blockquote>
&lt;p>&lt;strong>Note :&lt;/strong> LDAP based groups support is intended but not yet developed.&lt;/p>
&lt;/blockquote>
&lt;h2 id="conclusion">Conclusion&lt;/h2>
&lt;p>&lt;strong>LUMExt&lt;/strong> is an internal SII project that we &amp;quot;opensource&amp;quot; (MIT license) on &lt;a href="https://github.com/groupe-sii/lumext">github&lt;/a> to demonstrate the extensibility abilities of vCloud Director with a technical and complete use-case.&lt;/p>
&lt;p>Since about 6 months, our teams have working on these kind of &lt;em>plugins&lt;/em> development for our customers to extend the available features of the vCD portal with tools for their customers (as &lt;em>&amp;quot;Service Provider&amp;quot;&lt;/em>).&lt;/p>
&lt;p>It is also a great example of the combined work of developers and infrastrucure engineering in our teams, when, in computer science history, both jobs are more and more linked together.&lt;/p>
&lt;p>Illustration credits go to:&lt;/p>
&lt;ul>
&lt;li>Applications-ristretto.svg - &lt;a href="https://commons.wikimedia.org/wiki/File:Applications-ristretto.svg">Sebastian Kraft - GPL&lt;/a>&lt;/li>
&lt;li>RRZE-icon-set - &lt;a href="https://github.com/RRZE-PP/rrze-icon-set/">Regional Computing Centre of Erlangen (RRZE) - CC-by-sa/3.0&lt;/a>&lt;/li>
&lt;li>Screenshots from LUMExt are SII group own work&lt;/li>
&lt;/ul></description></item><item><title>VMUG France - Meet&amp;Geek Rennais, le bilan</title><link>https://vuptime.io/post/2019-03-08-vmug-france-meetandgeek-rennes-bilan/</link><pubDate>Fri, 08 Mar 2019 00:00:00 +0000</pubDate><guid>https://vuptime.io/2019/03/08/vmug-france-meetandgeek-rennes-bilan/</guid><description>
&lt;p>Quelques Rennais, membres de la &lt;strong>vCommunity&lt;/strong> se sont réunis dans les locaux de &lt;strong>SII Ouest&lt;/strong> hier soir pour partager quelques &lt;strong>vBeers&lt;/strong> et &lt;em>vPizza&lt;/em> dans une ambiance bon enfant.&lt;/p>
&lt;p>C'était une très belle occasion de rencontrer quelques personnes, de discuter des postes de chacun, de l'usage des produits VMware dans d'autres contextes.&lt;/p>
&lt;p>Les slides du &lt;em>Rex&lt;/em> sur l'usage de vRealize Orchestrator sont disponibles sur le &lt;em>Github&lt;/em> du groupe SII: &lt;a href="https://groupe-sii.github.io/rex-vro-meetngeek/">groupe-sii.github.io/rex-vro-meetngeek&lt;/a> (et les sources &lt;a href="https://github.com/groupe-sii/rex-vro-meetngeek/">ici&lt;/a>).&lt;/p>
&lt;div>
&lt;iframe width="100%" height="500" src="https://groupe-sii.github.io/rex-vro-meetngeek" style="border: 1px solid grey;">&lt;/iframe>
&lt;/div>
&lt;p>Quelques photos prises par Frédéric, notre &lt;strong>vMUG Leader&lt;/strong> local de l'étape:&lt;/p>
&lt;blockquote class="twitter-tweet" data-lang="fr">&lt;p lang="fr" dir="ltr">&lt;a href="https://twitter.com/hashtag/VMUGFR?src=hash&amp;amp;ref_src=twsrc%5Etfw">#VMUGFR&lt;/a> &lt;a href="https://twitter.com/hashtag/vbeer?src=hash&amp;amp;ref_src=twsrc%5Etfw">#vbeer&lt;/a> &lt;a href="https://twitter.com/hashtag/rennes?src=hash&amp;amp;ref_src=twsrc%5Etfw">#rennes&lt;/a> &lt;a href="https://twitter.com/lrivallain?ref_src=twsrc%5Etfw">@lrivallain&lt;/a> nous présente &lt;a href="https://twitter.com/hashtag/vRO?src=hash&amp;amp;ref_src=twsrc%5Etfw">#vRO&lt;/a> chez &lt;a href="https://twitter.com/hashtag/sii?src=hash&amp;amp;ref_src=twsrc%5Etfw">#sii&lt;/a> basé sur &lt;a href="https://twitter.com/hashtag/java?src=hash&amp;amp;ref_src=twsrc%5Etfw">#java&lt;/a> &lt;a href="https://t.co/7KaOJLSs3o">pic.twitter.com/7KaOJLSs3o&lt;/a>&lt;/p>&amp;mdash; frederic (@fredG_work) &lt;a href="https://twitter.com/fredG_work/status/1103723682009178119?ref_src=twsrc%5Etfw">7 mars 2019&lt;/a>&lt;/blockquote>
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8">&lt;/script>
&lt;blockquote class="twitter-tweet" data-lang="fr">&lt;p lang="fr" dir="ltr">&lt;a href="https://twitter.com/hashtag/BZH?src=hash&amp;amp;ref_src=twsrc%5Etfw">#BZH&lt;/a> c’est notre 1er Meet&amp;amp;Geek Breton - Merci pour votre accueil &lt;a href="https://twitter.com/sii_ouest?ref_src=twsrc%5Etfw">@sii_ouest&lt;/a> super 👍 REX autour de &lt;a href="https://twitter.com/hashtag/vRO?src=hash&amp;amp;ref_src=twsrc%5Etfw">#vRO&lt;/a> automatisation - Thx to &lt;a href="https://twitter.com/lrivallain?ref_src=twsrc%5Etfw">@lrivallain&lt;/a> &lt;a href="https://t.co/nPuPoo9lt5">pic.twitter.com/nPuPoo9lt5&lt;/a>&lt;/p>&amp;mdash; VMUG France (@VMUGFR) &lt;a href="https://twitter.com/VMUGFR/status/1103730799415910401?ref_src=twsrc%5Etfw">7 mars 2019&lt;/a>&lt;/blockquote>
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8">&lt;/script>
&lt;p>La soirée a aussi été &lt;em>marquée&lt;/em> par l'effervescence de la &lt;em>vCommunauté&lt;/em> mondiale autour de l'annonce des &lt;strong>vExperts&lt;/strong> 2019. L'occasion pour moi de trinquer à ma seconde ★★ en bonne compagnie!&lt;/p>
&lt;p>&lt;figure>&lt;img src="https://vuptime.io/images/vexpert-2.png"/>&lt;figcaption>
&lt;h4>vExpert 2019&lt;/h4>
&lt;/figcaption>
&lt;/figure>
{:width=&amp;quot;250px&amp;quot;}&lt;/p>
&lt;p>⚽ Et comme tout bon Rennais qui se respecte, nous suivions d'un oeil attentif le match &lt;strong>Rennes-Arsenal&lt;/strong> en huitièmes de finale (aller) de l'Europa League. Match qui a été logiquement remporté 3-1 par Rennes! Vive la galette-saucisse! ⚽&lt;/p>
&lt;p>Merci en tout cas à toute la vCommunauté Française et Rennaise, et en particulier à &lt;a href="https://twitter.com/fredG_work">Frédéric&lt;/a>, &lt;a href="https://vuptime.io/about/#jrossignol">Jérémy&lt;/a>, SII Ouest et les autres collègues m'aillant aidé à organiser ce petit événement!&lt;/p></description></item><item><title>VMUG France - Meet&amp;Geek Rennais le 7 mars 2019</title><link>https://vuptime.io/post/2019-02-28-vmug-france-meetandgeek-rennes/</link><pubDate>Thu, 28 Feb 2019 00:00:00 +0000</pubDate><guid>https://vuptime.io/2019/02/28/vmug-france-meetandgeek-rennes/</guid><description>
&lt;p>La communauté Rennaise des utilisateurs de solutions VMware se réunit à Rennes le &lt;strong>7 mars 2019, à partir de 18h30&lt;/strong>.&lt;/p>
&lt;p>Rdv dans les locaux de &lt;strong>SII Ouest&lt;/strong>: 5e étage, Hall B, Le Newton, 3 bis Avenue de Belle Fontaine à Cesson Sévigné.&lt;/p>
&lt;p>Rejoignez nous sur le &lt;strong>&lt;a href="https://vmugfrance.slack.com/">Slack VMUG&lt;/a>&lt;/strong>, Channel &lt;code>#vmug-rennes&lt;/code> pour discuter avant ou après cette rencontre.&lt;/p>
&lt;p>A cette occasion nous vous proposons un petit retour d'expérience sur l'usage de &lt;em>vRealize Orchestrator&lt;/em>.&lt;/p>
&lt;figure>&lt;img src="https://vuptime.io/images/meetandgeek-mars2019.png"/>&lt;figcaption>
&lt;h4>Meet&amp;amp;Geek Rennais&lt;/h4>
&lt;/figcaption>
&lt;/figure></description></item><item><title>VMworld 2018 – Recapitulatif jour 4</title><link>https://vuptime.io/post/2018-11-08-vmworld-2018-eu-day4/</link><pubDate>Thu, 08 Nov 2018 00:00:00 +0000</pubDate><guid>https://vuptime.io/2018/11/08/VMworld-2018-EU-Day4/</guid><description>
&lt;p>Quatrième et dernier jour du VMworld, on commençait un peu à se sentir à la maison à force d'arpenter les allés du &lt;em>Fira Barcelona Gran Via&lt;/em>.&lt;/p>
&lt;p>Moins de conférences pour moi aujourd'hui mais pas une journée moins intéressante pour autant car celà permet de faire le tour du hall des exposants et de découvrir bien des solutions innovantes.&lt;/p>
&lt;h2 id="vin1249ber--vsphere-clustering-deep-dive-part-1-vsphere-ha-and-drs">#VIN1249BER – vSphere Clustering Deep Dive, Part 1: vSphere HA and DRS&lt;/h2>
&lt;ul>
&lt;li>Auteur de la notice ci-dessous: &lt;em>&lt;a href="https://vuptime.io/about/#lrivallain">Ludovic Rivallain&lt;/a>&lt;/em>&lt;/li>
&lt;li>&lt;a href="https://videos.vmworld.com/global/2018/videoplayer/27144">Vidéo&lt;/a>&lt;/li>
&lt;li>Speakers(s): &lt;strong>Frank Denneman, Duncan Epping&lt;/strong>&lt;/li>
&lt;/ul>
&lt;p>On ne présentera pas en détail Frank et Duncan mais pour résumer, on a à faire à 2 rock stars, notamment auteurs de la série &lt;strong>(Host et Clustering) DeepDive&lt;/strong>: des bibles pour administrateurs de systèmes de virtualisation VMware. La conférence aborde justement un morceau du dernier opus: &lt;em>&amp;quot;Clustering Deep Dive&amp;quot;&lt;/em>.&lt;/p>
&lt;h3 id="vsphere-ha">vSphere HA&lt;/h3>
&lt;p>Avec un taux d'adoption supérieur à 90%, c'est clairement la feature la plus utilisé de l'écosystème VMware. Il est vrai que relancer sur un host sein une VM après le crash de son précédent hyperviseur, est devenu naturel pour tous les administrateurs réseau.&lt;/p>
&lt;p>Si les paramètres de configurations nous semblent familiers, Duncan insiste sur l'importance de les tester (et àa chaque changement), et pas en production… L'impact de certains pouvant être désastreux sur la résilience de votre infrastructure.&lt;/p>
&lt;p>S'en suit une petite analyse de certains paramètres:&lt;/p>
&lt;ul>
&lt;li>&lt;em>Restart priority&lt;/em> (priorisation en 5 niveau des redémarrages)&lt;/li>
&lt;li>&lt;em>Restart dependancy&lt;/em> (une règle inviolable, à utiliser avec parcimonie)&lt;/li>
&lt;li>&lt;em>Admission control&lt;/em> (assurez le redémarrage de vos VMs)&lt;/li>
&lt;/ul>
&lt;p>Et pour finir le chapitre, DeepDive dans les logs d'un cluster ESXi dans le cas des incidents suivants:&lt;/p>
&lt;ul>
&lt;li>Scénario 1: host failure: qui n'a jamais connu ça ? (dans la salle: personne)&lt;/li>
&lt;li>Scénario 2: Perte du stockage: Permanent Storage Loss ou All Paths Down (APD)&lt;/li>
&lt;li>Scénario 3: Isolation and partition response: de l'intérêt de choisir son adresse d'isolation entre autres.&lt;/li>
&lt;/ul>
&lt;p>Rapide présentation de proactive HA, qui permet d'analyser la dégradation de l'état d'un équipement matériel pour anticiper une panne (et provoquer en amont, la migration du workload). Proactive HA est à priori, peu déployé pour le moment.&lt;/p>
&lt;h3 id="vsphere-drs">vSphere DRS&lt;/h3>
&lt;p>Depuis 2006, cette technologie permet de load balancer la charge d'un clsuter d'ESXi, dès le démarrage des VMs ou pendant leur fonctionnement (via la migration à chaud: vMotion)&lt;/p>
&lt;p>Frank explique en détail les différentes métriques utilisées pour pondérer l'état de santé d'une VM, de son voisinage et son future état si on décide de la déplacer. Toutes les métriques ne se valent pas mais depuis 12 ans, DRS s'est doté de nouvelles possibilité de configuration qui permettent, si on les utilisent bien, d'optimiser le placement des VMs dans le cluster.&lt;/p>
&lt;p>L'occasion de parler de CPU %ready, de mémoire active Vs consumed, de distribution de VM, de network aware DRS etc.&lt;/p>
&lt;p>Visiblement le settings &lt;em>VM distribution&lt;/em> (qui essaye tout de même de priilégier le &lt;em>&amp;quot;VM Happiness&amp;quot;&lt;/em>) a 3 uses-case principaux:&lt;/p>
&lt;ul>
&lt;li>Prouver à son boss que DRS fonctionne quand celui-ci ne comprend rien.&lt;/li>
&lt;li>Le cas du stockage &lt;em>IP based&lt;/em>&lt;/li>
&lt;li>Réduire un peu les domaines de pannes.&lt;/li>
&lt;/ul>
&lt;p>Et fin sur le &lt;em>Predictive DRS&lt;/em> (Associé à vROPS) qui permet de prédire le comportement sur les 60 prochaines minutes et pondère la possibilité de migrer une VM avec son current Happiness-State.&lt;/p></description></item><item><title>VMworld 2018 – Recapitulatif jour 3</title><link>https://vuptime.io/post/2018-11-07-vmworld-2018-eu-day3/</link><pubDate>Wed, 07 Nov 2018 00:00:00 +0000</pubDate><guid>https://vuptime.io/2018/11/07/VMworld-2018-EU-Day3/</guid><description>
&lt;p>Troisième jour au VMworld et déjà le sentiment un peu amer que la fin approche doucement. En attendant, on en profite pour assister à de nouvelles sessions et réseauter!&lt;/p>
&lt;h2 id="vin2642be--dont-sleep-on-restful-apis-for-vsphere">#VIN2642BE – Don't Sleep on RESTful APIs for vSphere&lt;/h2>
&lt;ul>
&lt;li>Auteur de la notice ci-dessous: &lt;em>&lt;a href="https://vuptime.io/about/#lrivallain">Ludovic Rivallain&lt;/a>&lt;/em>&lt;/li>
&lt;li>&lt;a href="https://videos.vmworld.com/global/2018/videoplayer/26368">Vidéo&lt;/a>&lt;/li>
&lt;li>Speakers(s): &lt;strong>Kyle Ruddy&lt;/strong>&lt;/li>
&lt;/ul>
&lt;p>Dans cette session, &lt;a href="https://twitter.com/kmruddy">Kyle Ruddy&lt;/a> nous rappelle l'intérêt des API RESTful dans le monde de la programmation, de la navigation et surtout, de l'automatisation. L'importance des concepts CRUD (Create, Read, Update, Delete), la sécurité des appels et l'idempotence sont aussi rappelés rapidement.&lt;/p>
&lt;p>Pour le sujet qui nous concerne, &lt;strong>vSphere&lt;/strong>, les API SOAP ont eu la prédominance jusque-là mais VMware reconnait à présent que le choix n'était certainement pas le meilleur et démontre sa transition en cours vers des API RESTful (sur de nombreux produits d'ailleurs). Plus faciles à utiliser, documenter, maintenir, les API RESTful remplaceront totalement SOAP dans le futur des produits VMware. Entamé en version 6.5, cette migration a encore progressé en 6.7 avec l'ajout de nombreuse fonctions (dont, le scheduler de backup, le repoint PSC, des techpreview etc…).&lt;/p>
&lt;p>La suite de la conférence est au sujet des outils disponibles pour utiliser ces API. Au-delà de la documentation disponible sur le site &lt;a href="https://code.vmware.com/apis">code.vmware.com/apis&lt;/a>, VMware produit (et soutient la production communautaire) des outils pour différents modes de consommation des API REST: &lt;em>Postman, DatacenterCLI, Swagger based API Explorer, PowerCLI&lt;/em> etc.&lt;/p>
&lt;p>L'occasion de démontrer via une démo comment déployer rapidement une enveloppe de VM vide et que les différents modes d'utilisation et outils produits par VMware sont cohérents entre eux et permettent d'obtenir les mêmes résultats.&lt;/p>
&lt;p>Trop de monde pour aller rencontrer la RockStar Kyle Ruddy à la fin mais si je le recroise, j'aimerais lui demander si VMware compte modifier ses interfaces pour ne plus utiliser &lt;strong>QUE&lt;/strong> ses API REST pour atteindre le backend, ce qui assurerait que tout ce qui est possible dans une UI, l'est aussi dans le monde API.&lt;/p>
&lt;h2 id="cna1674be--deep-dive-run-kubernetes-in-production-with-pks">#CNA1674BE – Deep Dive: Run Kubernetes in Production with PKS&lt;/h2>
&lt;ul>
&lt;li>Auteur de la notice ci-dessous: &lt;em>&lt;a href="https://vuptime.io/about/#lrivallain">Ludovic Rivallain&lt;/a>&lt;/em>&lt;/li>
&lt;li>&lt;a href="https://videos.vmworld.com/global/2018/videoplayer/26336">Vidéo&lt;/a>&lt;/li>
&lt;li>Speakers(s): &lt;strong>Merlin Glynn, James Webb&lt;/strong>&lt;/li>
&lt;/ul>
&lt;p>Dans cette session &lt;strong>#DeepDive&lt;/strong> &lt;a href="https://twitter.com/VirtualMerlin">Merlin Glynn&lt;/a> (Technical Product Manager @ VMware) et James Webb (Cloud Foundry Platform Architect @ T-Mobile) reviennent sur le déploiement chez T-Mobile de la solution VMware PKS: un challenge qui visait à homogénéiser les différents modes de consommation de containeurs par les équipes de développement de différents produit. Accompagnés par VMware dans cette démarche, ils ont expliqué les challenges de ce projet: authentification, HA de la stack de management, automatisation, scalabilité des composants, réplications du stockage persistent, usage PAS-like (&lt;em>HTTPS, DNS, Load Balancing&lt;/em>…), les difficultés rencontrées et les challenges qui restent à relever.&lt;/p>
&lt;p>Le use case est intéressant mais clairement j'atteinds ma limite de technicité: Je visualise bien PKS, Kubernetes, mais ici on a affaire à des défis techniques très précis que j'ai du mal à appréhender. Toutefois je ressors de cette session avec en tête quelques noms d'outils qu'il m'intéresse d'explorer plus tard: &lt;em>GitOps, Concourse, Prometheus&lt;/em>…&lt;/p>
&lt;h2 id="dc3845ke--cloud-and-developer-keynote-public-clouds-and-kubernetes-at-scale">#DC3845KE – Cloud and Developer Keynote: Public Clouds and Kubernetes at Scale&lt;/h2>
&lt;ul>
&lt;li>Auteur de la notice ci-dessous: &lt;em>&lt;a href="https://vuptime.io/about/#lrivallain">Ludovic Rivallain&lt;/a>&lt;/em>&lt;/li>
&lt;li>&lt;a href="https://videos.vmworld.com/global/2018/videoplayer/26297">Vidéo&lt;/a>&lt;/li>
&lt;li>Speakers:
&lt;ul>
&lt;li>&lt;strong>Joe Beda&lt;/strong>, CTO, Heptio&lt;/li>
&lt;li>&lt;strong>Guido Appenzeller&lt;/strong>, CTO, VMware&lt;/li>
&lt;li>&lt;strong>Paul Fazzone&lt;/strong>, SVP and GM, Cloud Native Apps, VMware&lt;/li>
&lt;li>&lt;strong>Joseph Kinsella&lt;/strong>, Vice President and CTO, Products, CloudHealth, VMware&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h3 id="cloud-health">Cloud Health&lt;/h3>
&lt;p>Cette keynote démarre avec un constat de la situation actuelle et de l'évolution en cours de la consommation du &lt;em>cloud&lt;/em>: l'usage de cloud multiples. Par exemple, les Hands On Lab de VMware tournent à la fois sur un Datacenter interne, mais aussi sur le cloud IBM, le cloud AWS (débordements, tolérance à la panne etc.).&lt;/p>
&lt;p>Cela n'est pas sans problématique et notamment, celle de la compatibilité: formats, outils, méthodologies, complexités…&lt;/p>
&lt;p>C'est là qu'arrive la promesse de VMware: Aider à l'adoption de différents cloud sans se poser ces questions, notamment à l'aide de &lt;strong>Cloud Health&lt;/strong> (une acquisition récente). Un autre but de Cloud Health est de sécuriser l'usage d'un Cloud Public (ou plus) même si vous n'avez pas la maturité nécessaire pour gérer pro-activement les débordements, les sur-coûts, les réductions de ressources… au lieu d'être seulement dans la réaction (à la réception d'une facture AWS un peu salée par exemple).&lt;/p>
&lt;p>Après une démo de Cloud Health (pas forcément très lisible), Vodafone intervient sur scène pour témoigner de son adoption de différents clouds à l'aide de Cloud Health.&lt;/p>
&lt;h3 id="cloud-native-apps--kubernetes">Cloud Native Apps &amp;amp; Kubernetes&lt;/h3>
&lt;p>Forcément, avec l'acquisition de &lt;strong>Heptio&lt;/strong>, nous allions aborder le sujet de Kubernetes et de Cloud Native Apps pour démontrer la volonté de rendre plus facile l'adoption de clouds dans un processus de développement.&lt;/p>
&lt;p>VMware fait aussi beaucoup de pub de sa solution &lt;strong>VMware PKS&lt;/strong> (et la nouvelle &lt;strong>VMware Cloud PKS&lt;/strong>: en Beta !) pour déployer, gérer et proposer des clusters &lt;strong>Kubernetes&lt;/strong>.&lt;/p>
&lt;p>Forcément le scénario de la démo de VMware Cloud PKS sera de: &lt;em>&amp;quot;déployer un blog Wordpress&amp;quot;&lt;/em> (s'il vous plait, soyez plus créatifs la prochaine fois que vous voudrez faire une démo…).&lt;/p>
&lt;p>En gros, VMware gère pour vous la complexité de PKS et vous permet de lancer vos cluster Kubernetes vous-même en quelques minutes: réduisant ainsi le temps nécessaire entre l'expression de besoin et le déploiement d'une application.&lt;/p>
&lt;h2 id="vin1735be--clustering-deep-dive-2-quality-control-with-drs-and-network-io-control">#VIN1735BE – Clustering Deep Dive 2: Quality Control with DRS and Network I/O Control&lt;/h2>
&lt;ul>
&lt;li>Auteur de la notice ci-dessous: &lt;em>&lt;a href="https://vuptime.io/about/#jrossignol">Jérémy Rossignol&lt;/a>&lt;/em>&lt;/li>
&lt;li>&lt;a href="https://videos.vmworld.com/global/2018/videoplayer/26303">Vidéo&lt;/a>&lt;/li>
&lt;li>Speakers(s): &lt;strong>Niels Hagoort&lt;/strong>, &lt;strong>Sahan Gamage&lt;/strong>&lt;/li>
&lt;/ul>
&lt;p>Un petit mot déjà sur l'un des speakers, Niels est l'un des auteurs du livre &lt;em>VMware vSphere 6. 7 Clustering Deepdive - Rubrik&lt;/em>, du coup la conférence est déjà très remplie car pour certain c'est une rockstar !&lt;/p>
&lt;p>Bref, revenons à la conférence, Niels nous présente les bienfaits du Network I/O control, cette fonctionnalité souvent méconnue qui permet de limiter les bandes passantes via des valeurs share en cas de contention réseau par type de traffic. Le NIOC va nous permettre de contrôler le traffic entrant sur le DVSwitch(VDS). Pour ce qui est du traffic sortant, il faudra mettre en place du traffic shapping et ainsi pouvoir par exemple réserver une bande passante sortante pour le traffic de type stockage, attention cela va s'appliquer au niveau de l'uplink du VDS.&lt;/p>
&lt;p>Plusieurs usecases nous sont présentés pour ensuite passer à la partie DRS. Que fait le DRS ici? Et bien il s'agit d'une technologie qu'on ne présente plus pour équilibrer la charge sur un cluster, mais depuis la version 6.5 il y'a une nouvelle fonctionnalité qui a été ajoutée: &lt;em>Network aware DRS&lt;/em>. Concrètement il s'agit ici de prendre en compte en plus des ressources RAM et CPU, les contraintes réseaux pour être sûre que le déplacement d'une VM n'entrainera pas une saturation de bande passante ou bien d'autres problèmes liés au réseau.&lt;/p>
&lt;p>Malheureusement, la fonctionnalité est seulement présentée par use-case et pas via une explication en profondeur de l'algorythme: on nous dit que ce sont des formules mathématiques dérrière, bref apparemment les informaticiens n'aiment pas les maths mais moi cela m'aurait intéressé.&lt;/p>
&lt;h2 id="net1106be--advanced-vmware-nsx-data-center-demistifying-the-vtep-mac-and-arp-tables">#NET1106BE – Advanced VMware NSX Data Center: Demistifying the VTEP, MAC and ARP Tables&lt;/h2>
&lt;ul>
&lt;li>Auteur de la notice ci-dessous: &lt;em>&lt;a href="https://vuptime.io/about/#jrossignol">Jérémy Rossignol&lt;/a>&lt;/em>&lt;/li>
&lt;li>&lt;a href="https://videos.vmworld.com/global/2018/videoplayer/26194">Vidéo&lt;/a>&lt;/li>
&lt;li>Speaker(s): *&lt;em>Tim Burkard&lt;/em> &amp;amp; &lt;strong>Jean François Couturier&lt;/strong>&lt;/li>
&lt;/ul>
&lt;p>Le but de cette conférence était de rentrer dans le détail du fonctionnement des tables d'adresses &lt;em>MAC&lt;/em>, &lt;em>VTEP&lt;/em> et &lt;em>ARP&lt;/em> lorsque l'on utilise des DLR. Nous commençons la conférence avec un petit rappel sur le fait que toutes ces tables sont stockées au niveau du/des &lt;em>NSX-controller(s)&lt;/em>, nous revenons ensuite sur la communication entre l'&lt;em>ESXi&lt;/em> et le(s) &lt;em>controller(s)&lt;/em> et le fait que cela se fait via le composant &lt;em>NetCPA&lt;/em> (Network Control Plane Agent).&lt;/p>
&lt;p>Ensuite, petite présentation de &lt;em>Central CLI&lt;/em> qui permet depuis le NSX manager d'interroger les &lt;em>controlle(s)&lt;/em> et ainsi afficher les tables &lt;em>MAC&lt;/em>, &lt;em>VTEP&lt;/em> et &lt;em>ARP&lt;/em>. Démo à l'appui, on nous montre comment ces tables se remplissent au démarrage d'une VM (et pas avant).&lt;/p>
&lt;p>Nous passons ensuite sur l'&lt;em>ARP suppression&lt;/em>, gros avantage de &lt;em>NSX-V&lt;/em>: Les échanges passant par l'agent &lt;em>NETCPA&lt;/em> et les communications se font au niveau &lt;em>kernel&lt;/em> et ne consomment pas de bande passante. Autre avantage de ce fonctionnement: Si une VM a besoin de communiquer avec une autre VM qui est allumée (qui est donc connue des &lt;em>controllers&lt;/em>), la requête &lt;em>ARP&lt;/em> s'arrêtera au niveau de l'&lt;em>ESXi&lt;/em> et la trame sera envoyée directement en &lt;em>unicast&lt;/em> vers l'&lt;em>ESXi&lt;/em> qui héberge la VM.&lt;/p>
&lt;p>Petite nouveauté: on nous parle d'une fonctionnalité qui était jusque là un peu caché, le &lt;em>CDO (Controller Disconnected Operation) mode&lt;/em>. Dans le cas où on aurait un problème de communication entre le &lt;em>controler cluster&lt;/em> et l'&lt;em>ESXi&lt;/em> et grâce à ce procédé, l'&lt;em>ESXi&lt;/em> conserve une copie locale des tables &lt;em>MAC&lt;/em>, &lt;em>VTEP&lt;/em> et &lt;em>ARP&lt;/em> jusqu'à rétablissement de la communication avec le &lt;em>controller&lt;/em>. Cela empêche d'avoir des &lt;em>broadcast&lt;/em> dans tous les sens sans couper les échanges. Ces tables sont populées &lt;strong>avant l'allumage des VMs&lt;/strong> ce qui permet de préparer la communication avec une VM qui était encore éteinte au moment de l'incident. Limite du procédé: si une VM inconnue est déployée et allumée après le crash du &lt;em>controller&lt;/em> on ne pourra pas communiquer avec elle.&lt;/p>
&lt;p>Conférence très intéressante et très pédagogique, elle m'a permis d'approfondir mes connaissances sur l'&lt;em>ARP suppression&lt;/em> et aussi de faire connaissance avec le &lt;em>CPO mode&lt;/em> qui sera très utile pour les futurs infrastructures NSX.&lt;/p>
&lt;h2 id="mgt1312be---intro-to-vmwares-cloud-management-automation-services-you-agile-enough">#MGT1312BE - Intro to VMware’s Cloud Management Automation Services. You agile enough?&lt;/h2>
&lt;ul>
&lt;li>Auteur de la notice ci-dessous: &lt;em>&lt;a href="https://vuptime.io/about/#aharalaut">Antoine Harlaut&lt;/a>&lt;/em>&lt;/li>
&lt;li>&lt;a href="https://videos.vmworld.com/global/2018/videoplayer/26551">Video&lt;/a>&lt;/li>
&lt;li>Speaker(s): &lt;em>Cody De Arkland, Hicham Mourad&lt;/em>&lt;/li>
&lt;/ul>
&lt;p>L'utilisation du muticloud est un gros challenge pour les infrastructures IT:&lt;/p>
&lt;ul>
&lt;li>Manque de visibilité&lt;/li>
&lt;li>Complexe à gérer&lt;/li>
&lt;li>Multiples portails (AWS, Azure, vCenter)&lt;/li>
&lt;/ul>
&lt;p>VMware annonce sur son portail &lt;strong>VMware Cloud Services&lt;/strong>, trois services &lt;em>SaaS&lt;/em>:&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Cloud Assembly&lt;/strong>: Permet d'ouvrir du provisionning multi-cloud (&lt;em>Azure&lt;/em>, &lt;em>AWS&lt;/em>, &lt;em>VMware&lt;/em>). Il orchestre l'infrastructure et les applications avec les principes DevOps.&lt;/li>
&lt;li>&lt;strong>Service broker&lt;/strong>: Presente à l'utilisateur tout son catalogue hybrid-cloud sous une seule et unique interface.&lt;/li>
&lt;li>&lt;strong>Code Stream&lt;/strong>: Un outil de &lt;em>CI/CD&lt;/em>. Permet de tester du bout en bout le déploiement de son blueprints que ce soit côté infrastructure et/ou applicatif.&lt;/li>
&lt;/ul>
&lt;p>La conférence se concentre sur &lt;em>Cloud assembly&lt;/em> qui permet d'offir du déploiement multi-cloud (&lt;em>Azure, vCenter, AWS, NSX-T, NSX-V, VMware Cloud on AWS&lt;/em>). L'interface ressemble à s'y méprendre à &lt;em>vRealize Automation&lt;/em>: On peut y déclarer ses endpoints, gérer des networks profiles, storage profiles et y créer ses propres blueprints.&lt;/p>
&lt;p>L'interface de création des blueprints est très bien faite car on peut y créer directement son blueprint en mode &lt;em>Infra-as-code&lt;/em> avec l'interface &lt;em>YAML&lt;/em> présente sur &lt;em>l'UI&lt;/em>. On peut aussi effectuer un versionning de blueprint (Impossible pour le moment sur vRA mais pourtant bien utile)!&lt;/p>
&lt;p>Côté déploiement, on nous informe que le provisionning d'instances est beaucoup plus rapide que vRA car il a été optimisé pour le cloud public. On peut également peut mettre à jour les déploiements existants (Ajout d'un disque, ajout d'une VM ou d'un réseau par example).&lt;/p>
&lt;p>Concernant l'extensibility, ce point a été abordé très rapidement car il est pour le moment en beta mais on retrouve les éléments suivants:&lt;/p>
&lt;ul>
&lt;li>Integration avec &lt;em>Puppet&lt;/em>&lt;/li>
&lt;li>&lt;em>Action As A Service&lt;/em>: Permet de proposer du code dans son catalogue&lt;/li>
&lt;li>&lt;em>Workflow vRO&lt;/em>&lt;/li>
&lt;/ul>
&lt;p>Un beau produit en perspective à suivre avec attention.&lt;/p></description></item><item><title>VMworld 2018 – Recapitulatif jour 2</title><link>https://vuptime.io/post/2018-11-06-vmworld-2018-eu-day2/</link><pubDate>Tue, 06 Nov 2018 00:00:00 +0000</pubDate><guid>https://vuptime.io/2018/11/06/VMworld-2018-EU-Day2/</guid><description>
&lt;p>Second jour, beaucoup plus de monde, une &lt;strong>&lt;a href="https://vuptime.io/2018/11/06/VMworld-2018-EU-Day2-GeneralSession/">General Session&lt;/a>&lt;/strong> folle et toujours plus de conférences:&lt;/p>
&lt;h2 id="dev3466be--putting-it-all-together-using-vmware-products-to-deliver-the-devops-dream">#DEV3466BE – Putting It All Together: Using VMware Products to Deliver the DevOps Dream&lt;/h2>
&lt;ul>
&lt;li>Auteur de la notice ci-dessous: &lt;em>&lt;a href="https://vuptime.io/about/#lrivallain">Ludovic Rivallain&lt;/a>&lt;/em>&lt;/li>
&lt;li>&lt;a href="https://videos.vmworld.com/global/2018/videoplayer/26750">Vidéo&lt;/a>&lt;/li>
&lt;li>Speakers(s): &lt;strong>Dave Markham&lt;/strong>&lt;/li>
&lt;/ul>
&lt;p>Cette conférence avait pour but d'expliquer comment utiliser les produits VMware dans un processus de transformation en méthodologie &lt;em>DevOps&lt;/em>.&lt;/p>
&lt;p>vCenter configuré en multi-tenants avec des &lt;em>resourcesPools&lt;/em> et des droits adaptés aux publics de votre société, vRA avec &lt;em>business groups&lt;/em> etc., Code Stream pour les pipelines et l'automatisation de tâches répétitives: tout est là. Mais force est de constater qu'il manque à mon avis (@lrivallain speaking) du liant entre ces outils, et qu'obtenir une infrastructure as code dans ces conditions nécessite un investissement de temps assez important.&lt;/p>
&lt;p>Tout est automatisable, mais il manque peut être de la part de VMware, un peu d'outillage ou de simplification des process internes des produits pour rendre ça: convenable et attractif pour une transformation DevOps.&lt;/p>
&lt;h2 id="nfv2220be--service-providers-love-vmware-integrated-openstack-heres-why">#NFV2220BE – Service Providers Love VMware Integrated OpenStack. Here's Why.&lt;/h2>
&lt;ul>
&lt;li>Auteur de la notice ci-dessous: &lt;em>&lt;a href="https://vuptime.io/about/#lrivallain">Ludovic Rivallain&lt;/a>&lt;/em>&lt;/li>
&lt;li>&lt;a href="https://videos.vmworld.com/global/2018/videoplayer/26786">Vidéo&lt;/a>&lt;/li>
&lt;li>Speakers(s): &lt;strong>Ramkumar Venketaramani&lt;/strong>&lt;/li>
&lt;/ul>
&lt;p>Alors qu'on pourrait penser qu'en principe, OpenStack et VMware ne cohabitent pas sur les mêmes segments de marché, visiblement, ce n'est pas le point de vue de VMware qui espère proposer avec &lt;strong>VMware Integrated OpenStack&lt;/strong> (VIO) des réponses à quelques challenges et difficultés rencontrées dans le déploiement de la solution OpenStack.&lt;/p>
&lt;p>Pour rappel, la promesse du projet OpenStack est la suivante: &lt;em>Open Source, Cross Vendor, Standard, Software Defined DataCenter&lt;/em>&lt;/p>
&lt;p>Toutefois dans la mise en œuvre, certains challenges peuvent être rencontrés:&lt;/p>
&lt;ul>
&lt;li>Segmentation des solutions possibles: the &lt;em>snowflake effet&lt;/em> (un challenge rencontré très souvent dans le milieu des ESN et leurs réponses possibles à une demande d'expertise autour d'OpenStack&lt;/li>
&lt;li>Monitoring et Opérations: difficulté à troubleshooter et peu d'outils disponibles et efficace: haut niveau de technicité nécessaire.&lt;/li>
&lt;li>Upgrades complexes...&lt;/li>
&lt;/ul>
&lt;p>La réponse de VMware est VIO (actuellement en version 5.0) en mêlant le meilleur des mondes VMware et d'OS: En gros il s'agit de mettre en place, en amont d'un DataCenter VMware, les API standards d'OS pour gérer, les instances, le compute, le stockage, le réseau et les métriques.&lt;/p>
&lt;p>Pour le moment, les produits suivants sont disponibles (en version 2018.02):&lt;/p>
&lt;ul>
&lt;li>&lt;code>nova&lt;/code>&lt;/li>
&lt;li>&lt;code>cinder&lt;/code>&lt;/li>
&lt;li>&lt;code>neutron&lt;/code>&lt;/li>
&lt;li>&lt;code>glance&lt;/code>&lt;/li>
&lt;li>&lt;code>swift&lt;/code>&lt;/li>
&lt;/ul>
&lt;p>Et finalement, à travers la surcouche VMware, vous opérez, sans le savoir, un cloud basé sur vSphere/vCenter/NSX tout en utilisant les commandes ou les API d'OpenStack.&lt;/p>
&lt;h2 id="hci1552be--deploying-vsan-to-300-stores-in-2-weeks-an-automation-story">#HCI1552BE – Deploying vSAN to 300 Stores in 2 Weeks: An Automation Story&lt;/h2>
&lt;ul>
&lt;li>Auteur de la notice ci-dessous: &lt;em>&lt;a href="https://vuptime.io/about/#lrivallain">Ludovic Rivallain&lt;/a>&lt;/em>&lt;/li>
&lt;li>&lt;a href="https://videos.vmworld.com/global/2018/videoplayer/26347">Vidéo&lt;/a>&lt;/li>
&lt;li>Speakers(s): &lt;strong>Simon Todd, Nigel Venables&lt;/strong>&lt;/li>
&lt;/ul>
&lt;p>Nigel et Simon souhaitaient par cette conférence, revenir sur un projet d'automatisation réalisé pour un de leur client: un &lt;em>global food retailer&lt;/em> (&lt;em>seulement&lt;/em> la 3e chaine de supermarché au monde, 6800 magasins, 440 000 employés).&lt;/p>
&lt;p>Le but était d'implémenter une plateforme résiliente, sous la forme d'un canvas, où les développeurs pourraient librement déployer des VMs et des containeurs. Et par ce fait, de remplacer l'existant qui commençait à dater.&lt;/p>
&lt;p>Le choix de la solution s'est porté sur des clusters (par magasin) de 3 nœuds vSAN, un uplink unique (10GBps) par nœud (simplicité!). Le tout a été groupé en pod (1000 magasins par pod) avec pour chacun: 2 vCSA &lt;em>small&lt;/em>, 2 vROPs, et un serveur vRO. Ensuite à coup de clé USB bootable, d'un très gros workflow vRO (et c'est là qu'est la magie: &lt;em>&lt;strong>Voodoo part&lt;/strong>&lt;/em>!), tout est préparé presque automatiquement (seulement les variables à changer en fonction du lieu) quand un technicien débarque dans un magasin avec son nouveau matériel.&lt;/p>
&lt;p>Etonnant, VMware a conservé une approche semi-automatisée: certains inputs viennent d'un être humain afin de lancer le workflow et sont gérées déploiement par déploiement… le risque d'erreur est présent et c'est étonnant de n'avoir pas poussé plus loin la logique d'automatisation.&lt;/p>
&lt;p>Bilan de la conférence: que ferait VMware sans vRO au niveau automatisation 🤔?&lt;/p>
&lt;h2 id="hyp1499be--vmware-cloud-provider-pod">#HYP1499BE – VMware Cloud Provider Pod&lt;/h2>
&lt;ul>
&lt;li>Auteur de la notice ci-dessous: &lt;em>&lt;a href="https://vuptime.io/about/#aharlaut">Antoine Harlaut&lt;/a>&lt;/em>&lt;/li>
&lt;li>&lt;a href="https://videos.vmworld.com/global/2018/videoplayer/26995">Vidéo&lt;/a>&lt;/li>
&lt;li>Speakers(s): &lt;strong>Yves Sandfort&lt;/strong>, &lt;strong>Wade Holmes&lt;/strong>&lt;/li>
&lt;/ul>
&lt;p>Au tout début de cette présentation, VMware a insisté une nouvelle fois sur leur politique d'hybridation et de moderniser le cloud VMware.&lt;/p>
&lt;p>Qu'est-ce qu'est &lt;strong>Cloud Provider Pod&lt;/strong> (&lt;em>CPOD&lt;/em>)?&lt;/p>
&lt;p>Un outil qui permet de déployer (avec encore seulement &lt;em>un clic&lt;/em>) toute une infrastructure pour un cloud provider basée sur la suite &lt;em>vRealize&lt;/em> et &lt;em>vCloud Director&lt;/em>. Les produits déployés par &lt;em>CPOD&lt;/em> 1.0 sont les suivants:&lt;/p>
&lt;ul>
&lt;li>vRO 7.4&lt;/li>
&lt;li>vROPS 7.0&lt;/li>
&lt;li>vCD 9.1&lt;/li>
&lt;li>vCD Extender 1.0.1&lt;/li>
&lt;li>Usage meter 3.6.1&lt;/li>
&lt;li>vRNI 3.9&lt;/li>
&lt;li>vRLI 4.6.1&lt;/li>
&lt;li>vSphere 6.5u2&lt;/li>
&lt;li>NSX 6.4.1&lt;/li>
&lt;li>vSAN 6.6.1&lt;/li>
&lt;/ul>
&lt;p>La prochaine release de &lt;em>CPOD&lt;/em> intègrera des versions plus récentes.&lt;/p>
&lt;p>Tout comme &lt;strong>Vmware Cloud Fundation&lt;/strong> avec les &lt;em>VMware Validated Design&lt;/em>, &lt;em>CPOD&lt;/em> permet d'offrir une infrastructure destinée aux cloud providers avec la certification &lt;em>VMware cloud verified&lt;/em>.&lt;/p>
&lt;p>Le déploiement de l'infrastructure se fait à travers un formulaire ou avec un fichier de configuration . Le formulaire se décompose en 8 étapes qui vont du choix du nombre d'hôtes ESXi en passant par la configuration VXLAN jusqu'au licensing.&lt;/p>
&lt;p>A la fin du déploiement, un package d'une dizaine de documentations est automatiquement généré suivants les inputs définis lors du déploiement. On retrouve ainsi les documentations suivantes (&lt;em>liste non exhaustive&lt;/em>):&lt;/p>
&lt;ul>
&lt;li>Logical design&lt;/li>
&lt;li>Configuration réseau&lt;/li>
&lt;li>Configuration guide vCD&lt;/li>
&lt;li>Configuration guide vROps&lt;/li>
&lt;li>Configuration guide VCD Extender&lt;/li>
&lt;li>Config Sheet&lt;/li>
&lt;li>Export de la configuration&lt;/li>
&lt;li>Export package vRO&lt;/li>
&lt;/ul>
&lt;p>Pour ce qui nous a été montré, les documentations ont l'air d'être vraiment claires et détaillées. On nous explique ensuite que le déploiement de l'infrastructure se fait en bonne partie à travers &lt;em>vRealize Orchestrator&lt;/em> et que l'on peux extraire ce package et voir en détail ce qu'il fait (voir même de l'adapter à nos besoins).&lt;/p>
&lt;p>Il n'y a plus qu'à explorer ce produit plus en détail sur les &lt;em>HOLs&lt;/em> et voir s'il tient ses promesses!&lt;/p>
&lt;h2 id="net1559be--sddc-reference-design-with-nsx-data-center-for-vsphere">#NET1559BE – SDDC Reference Design with NSX Data Center for vSphere&lt;/h2>
&lt;ul>
&lt;li>Auteur de la notice ci-dessous: &lt;em>&lt;a href="https://vuptime.io/about/#jrossignol">Jérémy Rossignol&lt;/a>&lt;/em>&lt;/li>
&lt;li>&lt;a href="https://videos.vmworld.com/global/2018/videoplayer/26843">Vidéo&lt;/a>&lt;/li>
&lt;li>Speakers(s): &lt;strong>Dumlu Timuralp&lt;/strong>&lt;/li>
&lt;/ul>
&lt;p>Cette conférence était là pour nous rappeler les bonnes pratiques et surtout s'avoir s'orienter au début d'un design avec le produit NSX. De là on nous fait un petit rappel sur les avantages de NSX et notamment qu'il est complètement agnostique des équipements réseaux, mis à part peut être le fait que pour certaines fonctionnalités notamment le hardware VTEP, il faut quand même du matériel spécifique validé par VMware.&lt;/p>
&lt;p>Ensuite petit retour sur les différents composants de NSX et aussi de là où il se trouvent entre le data plane, control plane, management plane et enfin consumption. Jusque là aucune surprise, on insiste toujours autant sur le fait que dans le cadre de NSX il y'a toujours un seul NSX &lt;em>manager&lt;/em> avec 3 &lt;em>controler&lt;/em> pour un vCenter.&lt;/p>
&lt;p>Suivi ensuite par un petit &lt;em>what's new&lt;/em> de NSX 6.4.x, et on notera le passage à l'interface graphique en HTML5 -que VMware est en train de généraliser à tous ses logiciels), sinon globalement c'est une version de correction de bug et d'augmentations de limites diverses, pas de grosse fonctionnalités avec cette version.&lt;/p>
&lt;p>Passons maintenant au vif du sujet, le speaker nous rappelle bien que notre bible doit être le fameux design reference guide que l'on peut trouver à &lt;a href="https://communities.vmware.com/docs/DOC-27683">cet endroit&lt;/a>. Néanmoins, il va nous faire part de quelques points qui peuvent être imprécis dans ce guide.&lt;/p>
&lt;p>Voici quelques une de ses recommandations:&lt;/p>
&lt;ul>
&lt;li>A partir du moment on utilise un domaine avec plusieurs vcenters, il faudra penser à utiliser un cluster de management dédié ainsi qu'un vcenter dédié pour celui-ci&lt;/li>
&lt;li>On peut provisionner le mangement, vmotion, stockage mais aussi les portgroups VXLAN sur le même &lt;em>dvSwitch&lt;/em> (VDS), on fera juste attention au fait qu'ils ne reposent pas tous sur le même &lt;em>vmKernel&lt;/em>&lt;/li>
&lt;li>On doit utiliser le même numéro de VLAN pour le VXLAN sur tous les clusters NSX&lt;/li>
&lt;li>Les jumbo frames doivent être configurés sur les ESXs (passage du MTU à 9000)&lt;/li>
&lt;li>Transport zone &lt;em>unicast&lt;/em> recommandée sauf si vous disposez d'un grand domaine niveau 2 et dans ce cas on préférera utiliser le mode &lt;em>Hybrid&lt;/em>&lt;/li>
&lt;/ul>
&lt;p>Toutes ces recommendations sont bien sûre à prendre en compte avant l'installation mais pour ce qui est du design du produit NSX en lui même et la configuration à apporter sur les clusters de ressources, j'ai noté quelques remarques intéressantes:&lt;/p>
&lt;ul>
&lt;li>Le même VDS pour tous les clusters de ressources&lt;/li>
&lt;li>Pas de edge ECMP sur le même ESXi qu'un DLR control VM&lt;/li>
&lt;li>Pour une edge ECMP, configurer 2 uplinks avec 2 VLANs différents pour diminuer les interruptions potentielles&lt;/li>
&lt;li>Surtout si possible éviter le VPC car ce protocole (sauf dans des design bien particuliers) sera plus contre-productif qu'autre chose&lt;/li>
&lt;/ul>
&lt;p>Bilan de la conférence: plusieurs points intéressants, des rappels qui ne font pas de mal, des points de vigilance de configuration mais aussi d'installation et de design qui ne sont pas forcément explicites et que l'on acquiert en général seulement avec de l'expérience. En somme, c'était plutot positif, tout ça.&lt;/p>
&lt;h2 id="ns3729ke--the-nsx-keynote-building-the-network-of-the-future-with-the-virtual-cloud-network">#NS3729KE – The NSX Keynote: Building the Network of the Future with the Virtual Cloud Network&lt;/h2>
&lt;ul>
&lt;li>Auteur de la notice ci-dessous: &lt;em>&lt;a href="https://vuptime.io/about/#jrossignol">Jérémy Rossignol&lt;/a>&lt;/em>&lt;/li>
&lt;li>&lt;a href="https://videos.vmworld.com/global/2018/videoplayer/26858">Vidéo&lt;/a>&lt;/li>
&lt;li>Speakers:
&lt;ul>
&lt;li>&lt;strong>Tom Corn&lt;/strong>, SVP, VMware&lt;/li>
&lt;li>&lt;strong>Tom Gillis&lt;/strong>, SVP/GM, Network &amp;amp; Security, VMware&lt;/li>
&lt;li>&lt;strong>Sanjay Uppal&lt;/strong>, Vice President &amp;amp; GM , VMware&lt;/li>
&lt;li>&lt;strong>Stefano Firenze&lt;/strong>, CIO CNH Industrial, CNH Industrial&lt;/li>
&lt;li>&lt;strong>Ed Higgs&lt;/strong>, Global Service Delivery Director, Rentokil Initial&lt;/li>
&lt;li>&lt;strong>Faiyaz Shahpurwala&lt;/strong>, General Manager, IBM Cloud Platform, IBM&lt;/li>
&lt;li>&lt;strong>Jean-Marc Voisin&lt;/strong>, CTO, ALLIANZ&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>Le but ici était de donner un aperçu de ce que fait NSX et comment il répond aux problématiques des clients.&lt;/p>
&lt;p>On a pu voir pour les différents produits NSX: &lt;em>NSX Data Center (NSX-v)&lt;/em>, &lt;em>NSX Cloud (NSX-T)&lt;/em>, &lt;em>NSX Hybrid connect&lt;/em>, &lt;em>NSX SD-WAN by velo cloud&lt;/em> et enfin &lt;em>AppDefense&lt;/em>, différents usecases clients présentés sous forme de talk pour illustrer les mises en pratique de chaque produit.&lt;/p>
&lt;p>Personnellement, le format ne m'a pas enchanté et plutôt que d'annonce(s), la discussion client/fournisseur manquait un peu d'intérêt car les informations qui auraient pû être intéressantes ont été noyées dans les dicsussions.&lt;/p>
&lt;p>Néanmoins, un produit a attiré mon attention: &lt;em>AppDefense&lt;/em>. Il s'agit d'un nouveau produit de VMware permettant d'analyser les processus côté OS et de définir des profils de serveurs pour reconnaître les comportements normaux des comportements suspects.&lt;/p>
&lt;p>En effet, jusqu'à maintenant pour se protéger contre des attaques, le comportement standard des antivirus était d'avoir une liste de &lt;em>&amp;quot;Know bad&amp;quot;&lt;/em> (sous-entendus, des comportement suspects identifiés au préalable par le passé comme des bouts de codes malveillants par exemple). Avec &lt;em>AppDefense&lt;/em>*, l'idée ici est d'utiliser la philosophie &lt;em>&amp;quot;know good&amp;quot;&lt;/em> pour réduire le périmètre possible d'une attaque.&lt;/p>
&lt;p>Pour rajouter ce &lt;em>&amp;quot;know good&amp;quot;&lt;/em>, voici comment on procède:&lt;/p>
&lt;ol>
&lt;li>A l'installation d'un serveur, une fois tous les applicatifs installés et configurés, il vous suffit d'analyser les processus détectés par &lt;em>AppDefense&lt;/em> et de cliquer sur un bouton pour établir qu'il s'agit du profil &lt;em>&amp;quot;normal&amp;quot;&lt;/em> du serveur.&lt;/li>
&lt;li>A partir de ce moment, si il y'a une attaque extérieure et un comportement qui sort du profil standard, les services seront automatiquement bloqués par &lt;em>AppDefense&lt;/em> grâce au machine learning.&lt;/li>
&lt;/ol>
&lt;p>Le machine learning permet d'avoir une vue en temps réel du comportement d'un serveur et de ces services, ainsi il est possible de mettre en place de manière très simple de la micro segmentation: plus seulement au niveau échanges &lt;em>Est-Ouest&lt;/em> mais aussi au niveau applicatif.&lt;/p>
&lt;p>Bilan de la conférence: je dirais que le format ne correspondait pas du tout à une keynote mais il y'a des moments où le fond est plus important que la forme.&lt;/p>
&lt;h2 id="net1516be--introduction-to-nsx-cloud">#NET1516BE – Introduction to NSX Cloud&lt;/h2>
&lt;ul>
&lt;li>Auteur de la notice ci-dessous: &lt;em>&lt;a href="https://vuptime.io/about/#jrossignol">Jérémy Rossignol&lt;/a>&lt;/em>&lt;/li>
&lt;li>&lt;a href="https://videos.vmworld.com/global/2018/videoplayer/26540">Vidéo&lt;/a>&lt;/li>
&lt;li>Speaker(s): &lt;strong>Percy Wadia&lt;/strong>&lt;/li>
&lt;/ul>
&lt;p>Le but de &lt;em>NSX Cloud&lt;/em> est de pouvoir protégé de manière centralisée toutes vos apps tournant sur des clouds publics. Un des avantages de &lt;em>NSX Cloud&lt;/em> est que vous n'avez pas besoin d'avoir l'édition &lt;em>datacenter&lt;/em> au sein de votre infrastructure et que pouvez commencer de 0 avec &lt;em>NSX Cloud&lt;/em>. Vous allez pouvoir étendre vos politiques de sécurité sur vos clouds publics et les gérer de manière centralisée et homogène (Actuellement, seulement &lt;em>Azure&lt;/em> et &lt;em>AWS&lt;/em> sont supportés) via une seule unique interface graphique ou une seule API.&lt;/p>
&lt;p>En reprenant les technologies NSX pour manager ses politiques de sécurité sur &lt;em>Azure&lt;/em> ou &lt;em>AWS&lt;/em> par exemple, il est possible d'utiliser les règles &lt;em>'dynamiques'&lt;/em> propre à NSX et ainsi être plus réactif pour les besoins des développeurs.&lt;/p>
&lt;p>Par exemple: Dès qu'une machine virtuelle portera dans son nom &lt;code>DEV&lt;/code>, elle pourra être placer dynamiquement dans une règle qui aura déjà tous les accès de BDD configurés pour que la machine soit opérationnelle et prête à être utilisée sans pour autant être ouverte à tout le réseau.&lt;/p>
&lt;p>Si un bypass des règles de firewall distribuées est identifié, la mchine sera mise dynamiquement dans une autre &lt;em>&amp;quot;policy&amp;quot;&lt;/em> de quarantaine par exemple qui bloquera absolument tous les flux entrants et sortants. Il sera nécessaire d'avoir une intervention d'un administrateur pour la débloquer. Il est aussi possible de faire apparaître cette machine directement sur le dashboard et pour la mettre en évidence.&lt;/p>
&lt;p>A prendre en compte pour un déploiement, le nombre de VMs à déployer:&lt;/p>
&lt;ul>
&lt;li>&lt;em>NSX Manager&lt;/em>: 1 VMs&lt;/li>
&lt;li>&lt;em>Control Cluster&lt;/em>: 3 VMs&lt;/li>
&lt;/ul>
&lt;p>Viens ensuite la connection aux différents cloud publics qui permet de déployer des &lt;em>edges gateways&lt;/em> permettant de filtrer l'accès &lt;em>Nord-Sud&lt;/em> de votre cloud public. Et enfin, vient le déploiement d'agents &lt;em>NSX&lt;/em> sur les VMs afin de mettre en place des politiques de firewall distribué.&lt;/p>
&lt;p>Les VMs n'ayant pas d'agent installé seront détectées comme étant non conformes et il est possible de lancer à distance l'installation de l'agent ou encore de l'ignorer si l'on estime que telle ou telle VM n'en a pas besoin.&lt;/p>
&lt;p>Le produit semble vraiment intéressant: notamment le fait de pouvoir réutiliser la micro-segmentation NSX avec les groupes de sécurité &lt;em>dynamiques&lt;/em> (et non plus uniquement via une information réseau, IP ou DNS). Il reste à voir si VMware arrivera à généraliser ce produit de manière simple malgré la multitude d'offres cloud qui existent sur le marché.&lt;/p>
&lt;h2 id="edu7505e--advanced-troubleshooting-for-the-vmware-nsx-distributed-firewall">#EDU7505E – Advanced Troubleshooting for the VMware NSX Distributed Firewall&lt;/h2>
&lt;ul>
&lt;li>Auteur de la notice ci-dessous: &lt;em>&lt;a href="https://vuptime.io/about/#jrossignol">Jérémy Rossignol&lt;/a>&lt;/em>&lt;/li>
&lt;li>&lt;a href="https://videos.vmworld.com/global/2018?q=EDU7505E">Vidéo&lt;/a>&lt;/li>
&lt;li>Speaker(s): &lt;strong>Tim Burkard&lt;/strong>&lt;/li>
&lt;/ul>
&lt;blockquote>
&lt;p>You shall not pass !&lt;/p>
&lt;/blockquote>
&lt;p>Voilà ce que l'on attend de notre firewall et c'est sur ces 4 petits mots que commence la session. L'utilité de notre firewall distribué est bien d'empêcher les attaques sur nos systèmes mais aussi les empêcher de pouvoir rebondir depuis un serveur via une porte dérobée.&lt;/p>
&lt;p>Néanmoins sans les bons outils il peut être difficile de bien diagnostiquer les problèmes de communication. La difficulté lorsque l'on met en place la micro segmentations avec le firewall distribué est bien de s'assurer que l'on ne va pas contraindre les applications et se créer de nouveaux problèmes.&lt;/p>
&lt;p>Le sujet ici est de savoir analyser en temps réel ce qui se passe au sein de notre infrastructure au niveau réseau et firewalling.&lt;/p>
&lt;p>NSX introduit des outils qui nous permettent de répondre à cette problématique:&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Flow Monitoring&lt;/strong>: Grâce à lui il est possible d'analyser en temps réel via une interface graphique le traffic réseau. Il permet aussi de bloquer ou d'autoriser via un simple clic le traffic affiché.&lt;/li>
&lt;li>&lt;strong>Traceflow&lt;/strong>: Cet outil permet de tester la communication depuis un source vers une target donnée par le port que on lui indiquera.&lt;/li>
&lt;li>&lt;strong>Packet Capture&lt;/strong>: Comme son nom l'indique, il va permettre de capturer les trames à la manière d'un &lt;em>wireshark&lt;/em>.&lt;/li>
&lt;li>Et bien sûr dans l'interface graphique de NSX vous disposez aussi de l'&lt;strong>event viewer&lt;/strong> et des derniers &lt;strong>logs&lt;/strong> de l'applicatif.&lt;/li>
&lt;/ul>
&lt;p>Si jamais ces informations ne suffisent pas, il ne faut pas oublier qu'il existe aussi &lt;em>CLI NSX&lt;/em>, à exécuter depuis le &lt;em>NSX manager&lt;/em>: Lancer une session SSH sur votre NSX manager et utiliser la commande:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="ln">1&lt;/span>&lt;span class="cl">pktcap-uw
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Une commande intéressante permettant de faire du debug:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="ln">1&lt;/span>&lt;span class="cl">pktcap-uw --dvFilter dvfilter_name --capture PreDVFilter&lt;span class="p">|&lt;/span>PostDVFilter &lt;span class="o">[&lt;/span>filter_options&lt;span class="o">]&lt;/span> &lt;span class="o">[&lt;/span>--outfile pcap_file_path &lt;span class="o">[&lt;/span>--ng&lt;span class="o">]]&lt;/span> &lt;span class="o">[&lt;/span>--count number_of_packets&lt;span class="o">]&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Avec cette commande il est possible d'analyser les flux en entrée et à la sortie de votre &lt;em>distributed firewall&lt;/em> et ainsi voir si c'est lui qui vous bloque ou non un flux particulier.&lt;/p>
&lt;p>&lt;strong>Rappel&lt;/strong>: pour ceux qui aiment aller voir les logs concernant &lt;em>NSX&lt;/em> et les &lt;em>DLR&lt;/em> ou &lt;em>DFW&lt;/em>: Sans &lt;em>LogInsight&lt;/em>, les logs seront éparpillés entre tous vos ESXi...&lt;/p></description></item><item><title>VMworld 2018 – Technology Superpowers !</title><link>https://vuptime.io/post/2018-11-06-vmworld-2018-eu-day2-generalsession/</link><pubDate>Tue, 06 Nov 2018 00:00:00 +0000</pubDate><guid>https://vuptime.io/2018/11/06/VMworld-2018-EU-Day2-GeneralSession/</guid><description>
&lt;ul>
&lt;li>&lt;a href="https://videos.vmworld.com/global/2018/videoplayer/26843">Vidéo&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>Pour le second jour, nous commençons, comme la majorité des personnes qui sont au VMworld, par assister à la General Session: une &lt;em>v-Keynote&lt;/em>.&lt;/p>
&lt;p>&lt;strong>Jean-Pierre Brulard&lt;/strong> - Vice-président et directeur général, Europe, Moyen-Orient et Afrique (EMEA) - commence la session en annonçant que nous sommes 10 000 présents… C'est vrai que la salle est bondée pour le VMworld des 20 ans de VMware et les 10 ans de la filiale EVMware et les 10 ans de la filiale Européenne.&lt;/p>
&lt;p>Arrive ensuite &lt;strong>Pat Gelsinger&lt;/strong>, VMware CEO et visionnaire du cloud en général, pour animer la majeure partie de la session.&lt;/p>
&lt;p>Depuis 20 ans, VMware a bien changé, et son environnement aussi. A propos de NSX, Pat ose lancer un:&lt;/p>
&lt;blockquote>
&lt;p>Networking will never be the same again&lt;/p>
&lt;/blockquote>
&lt;p>VMware montre aussi son attention à son impact sur l'environnement en annonçant être à présent une &lt;strong>société au bilan carbone neutre&lt;/strong> dans ses opérations quotidiennes. Selon leurs estimations, ils ont aussi permis d'économiser la production de l'équivalent de 4 ans de production de carbone d'un pays comme le Royaume Uni depuis 20 ans. Si le chiffre est difficilement vérifiable, il y a tout de même un impact certain.&lt;/p>
&lt;p>Ray O 'Farrel, VMware CTO, monte ensuite sur scène pour une démonstration d'App Defense, le produit de protection des applications déployées sur une infrastructure VMware et disponible dans la &amp;quot;licence&amp;quot; vSphere Platinium ou, et c'est une nouveauté, &amp;quot;vCloud Suite Platinium&amp;quot;. Basé sur une phase d'apprentissage du comportement d'une application, AD est ensuite capable de verrouiller son comportement et d'alerter en cas de modification de celui-ci: à vous d'appliquer la réponse appropriée: autoriser le changement, ou le traiter comme une menace.&lt;/p>
&lt;p>VMware annonce ensuite la disponibilité de VMware Cloud Foundation 3.5. Un outil d'automatisation du déploiement d'infrastructures Cloud, hybrides, basée sur des produits et offres membres du programme &lt;em>VMware Cloud Certified&lt;/em>.&lt;/p>
&lt;p>Rapide présentation d'Amazon RDS sur une infrastructure VMware, où qu'elle soit, avec l'ajout, dans la console AWS, de Custom AZ. On voit bien le rapprochement qui s'opère en ce moment entre le monde du public et du private cloud avec des produits croisés.&lt;/p>
&lt;p>Retour de Ray sur scène pour une triple démonstration:&lt;/p>
&lt;ul>
&lt;li>Moderniser les applications à l'aide du cloud IBM (un gros partenaire de VMware)&lt;/li>
&lt;li>Un scénario de &lt;em>disaster recovery&lt;/em> basé sur VMware on AWS et la gestion de l'elastic DRS qui commande ou libère pour vous des hosts en cas de changement de consommations de resources.&lt;/li>
&lt;li>CloudHealth, un outil de gestion de coûts qui permet d'analyser les différents comptes chez vos clouds provider et peut être d'économiser de l'argent en ajustant la taille de vos réservations, d'instances.&lt;/li>
&lt;/ul>
&lt;p>C'est le moment de lâcher la bombe: VMware vient d'acquérir Heptio, une société spécialisé dans Kubernetes ! Clairement, les containeurs ont leur place ici et VMware annonce en même temps &lt;strong>VMware Cloud PKS&lt;/strong>, avec tous les outils nécessaires pour lancer K8S sur votre plateforme de virtualisation VMware: Azure, AWS, GCE ou On-Premise. Pour la démonstration ça sera le tour de Wendy Cartee, cheffe de produit PKS.&lt;/p>
&lt;p>Suit une présentation de Workspace One Intelligence mais je suis moins convaincu/intéressé par cet outil de gestion de parcs de terminaux. La même chose pour &lt;strong>Concord&lt;/strong>, le blockchain by VMware, que j'ai du mal à appréhender.&lt;/p>
&lt;p>Ray pour sa dernière intervention, arrive sur scène avec un Raspberry-Pi en main pour annoncer qu'ESXi, peut (en interne uniquement pour le moment) tourner sur ce petit appareil à 30 $/€ !!! &lt;strong>ESXi sur ARM&lt;/strong> arrive et cela sera certainement une prochaine révolution pour le monde des datacenters.&lt;/p></description></item><item><title>VMworld 2018 – Recapitulatif jour 1</title><link>https://vuptime.io/post/2018-11-05-vmworld-2018-eu-day1/</link><pubDate>Mon, 05 Nov 2018 00:00:00 +0000</pubDate><guid>https://vuptime.io/2018/11/05/VMworld-2018-EU-Day1/</guid><description>
&lt;p>Nous y voilà. Le premier jour au VMworld à Barcelone commence par une visite... et après une rapide estimations, la conclusion que nous avons est que c'est grand, très grand! Comme le Lundi est orienté &amp;quot;Partners&amp;quot;, il y a encore peu de monde et peu de conférences. Petit retour sur les premières confs auquelles nous avons assisté:&lt;/p>
&lt;figure>&lt;img src="https://vuptime.io/images/vmworld2018/3AtLogo.jpg"/>&lt;figcaption>
&lt;h4>Logo VMworld&lt;/h4>
&lt;/figcaption>
&lt;/figure>
&lt;h2 id="dev1965qe--quickstart-devops-culture-with-vmware">#DEV1965QE – QuickStart DevOps Culture with VMware&lt;/h2>
&lt;ul>
&lt;li>Auteur de la notice ci-dessous: &lt;em>&lt;a href="https://vuptime.io/about/#lrivallain">Ludovic Rivallain&lt;/a>&lt;/em>&lt;/li>
&lt;li>&lt;a href="https://videos.vmworld.com/global/2018/videoplayer/26752">Vidéo&lt;/a>&lt;/li>
&lt;li>Speakers(s): &lt;strong>Tom Hite&lt;/strong>&lt;/li>
&lt;/ul>
&lt;p>On commence avec une session assez basique (pas de technique à proprement parler) au sujet de la culture DevOps et des produits VMware (et pas que!).&lt;/p>
&lt;p>Clairement, on voit que dans la salle, c'est difficile de s'accorder sur une définition précise de ce qu'est le DevOps: personne ne s'aventurera à en proposer une quand le speaker l'a proposé :-) Du coup il est intéressant de montrer que même sans définition stricte, les principes de DevOps apportent beaucoup de choses dans un cycle de développement avec des &amp;quot;statistiques comparatives&amp;quot; sur les sociétés qui utilisent DevOps vis-à-vis de modèles plus anciens:&lt;/p>
&lt;ul>
&lt;li>Déploiements 30 fois plus fréquents&lt;/li>
&lt;li>60 fois moins de crash&lt;/li>
&lt;li>200 fois moins de temps entre l'idée et la mise en production&lt;/li>
&lt;li>168 fois plus rapide à récupérer d'un crash&lt;/li>
&lt;/ul>
&lt;p>On parle ensuite de délivrer de la production plus efficacement et de manière durable: ne pas tuer les équipes d'ops sur des tâches répétitives, et les devs à faire de la docs en surplus ;-)&lt;/p>
&lt;p>Enfin, nous avons abordé les concepts de frameworks d'infrastructure structurés et non-structurés et comment les outils, les méthodes et les intérêts divergent. En gros: &amp;quot;Adapter son infrastructure à son besoin, ou son besoin à son infrastructure&amp;quot;, un choix pas si évident au final.&lt;/p>
&lt;h2 id="hci2513qe--using-vsan-native-data-protection-in-the-real-world">#HCI2513QE – Using vSAN Native Data Protection in the Real World&lt;/h2>
&lt;ul>
&lt;li>Auteur de la notice ci-dessous: &lt;em>&lt;a href="https://vuptime.io/about/#lrivallain">Ludovic Rivallain&lt;/a>&lt;/em>&lt;/li>
&lt;li>&lt;a href="https://videos.vmworld.com/global/2018/videoplayer/26910">Vidéo&lt;/a>&lt;/li>
&lt;li>Speakers(s): &lt;strong>Shobhan Lakkapragada&lt;/strong>&lt;/li>
&lt;/ul>
&lt;p>Ce second talk aborde une &amp;quot;techpreview&amp;quot; de VMware (dont j'avais déjà entendu parlé en Septembre lors du VMug) au sujet des futures capacités de vSAN à opérer la sauvegardes de VM au sein d'un cluster.&lt;/p>
&lt;p>Il est intéressant de remarquer que VMware s'attaque au marché de certains de ses meilleurs partenaires en proposant bientôt une solution native de sauvegarde et de protection des données (et l'écosystème est déjà vaste: Veeam, Avamar, NetBackup etc..)&lt;/p>
&lt;p>Pour arriver à cette fonctionnalité, VMware a dû redévelopper son mécanisme de snapshot pour le rendre:&lt;/p>
&lt;ul>
&lt;li>Peu gourmand en I/O&lt;/li>
&lt;li>scalable, tout autant que vSAN lui-même&lt;/li>
&lt;li>instantané (pour la création, la suppression, l'accès)&lt;/li>
&lt;li>pas de redo-log !!!&lt;/li>
&lt;/ul>
&lt;p>Un des challenges que s'impose VMware est de proposer une expérience utilisateur simple, intégrée (à vCenter) et intuitive, notamment via l'utilisation des storages policy (que l'on connait et utilise déjà) pour configurer les backups, la rétention, la réplication…&lt;/p>
&lt;p>Sur le papier, ça sent la killer feature (pas celle qui tue votre infra, celle qui tue l'éditeur de solution de backup!):&lt;/p>
&lt;ul>
&lt;li>Faible RTO&lt;/li>
&lt;li>Catalogue de snapshot très visuel et intuitif pour choisir le point de restauration&lt;/li>
&lt;li>Restauration d'une VM via un linked clone (très rapide) ou en indépendant.&lt;/li>
&lt;li>Possibilité de restaurer de multiples copies d'une VM (pour dev, tests, mieux reproduire un incident)&lt;/li>
&lt;li>Compatible avec les solutions existantes de backup: continuez à utiliser votre backup traditionnel si vous le souhaitez en plus (basées sur VADP ou snapshot)&lt;/li>
&lt;li>Replication intégrée (bi-directionnelle si souhaité)&lt;/li>
&lt;/ul>
&lt;p>Le seul inconvénient évident pour le moment à mon avis est l'absence de backup au niveau fichier (et d'agent de backup): mais c'est évoqué comme une possibilité futures !&lt;/p>
&lt;h2 id="prv2201qer--introduction-to-vmware-cloud-foundation">#PRV2201QER – Introduction to VMware Cloud Foundation&lt;/h2>
&lt;ul>
&lt;li>Auteur de la notice ci-dessous: &lt;em>&lt;a href="https://vuptime.io/about/#lrivallain">Ludovic Rivallain&lt;/a>&lt;/em>&lt;/li>
&lt;li>&lt;a href="https://videos.vmworld.com/global/2018/videoplayer/26547">Vidéo&lt;/a>&lt;/li>
&lt;li>Speakers(s): &lt;strong>Darren Pham&lt;/strong>&lt;/li>
&lt;/ul>
&lt;p>Conférence très &lt;em>high level&lt;/em>, pour présenter un nouveau produit qui se nomme &lt;strong>Vmware Cloud Fundation&lt;/strong>(VCF).&lt;/p>
&lt;p>Cet outil permet de d'installer et de configurer automatiquement tout un écosystème basé sur vSphere, NSX et vSAN. Le gros plus de ce produit est qu'il construit l'infrastructure virtuelle en suivant le &lt;strong>VMware Validated design&lt;/strong>.&lt;/p>
&lt;p>Pour ceux qui ne connaissent pas, je vous invite regarder &lt;a href="https://www.vmware.com/support/pubs/vmware-validated-design-pubs.html">ce lien&lt;/a>&lt;/p>
&lt;p>&lt;strong>VCF&lt;/strong> gère également le cycle de vie de la plateforme avec la possibilité de la mettre à jour en &amp;quot;quelques clics&amp;quot;.&lt;/p>
&lt;p>Comme VMware mise beaucoup sur l'hybridation, la possibilité de connecter son infrastructure à un cloud public est bien mise en avant (surtout sur AWS!).&lt;/p>
&lt;h2 id="la-journée-de-jérém">La journée de Jérém&lt;/h2>
&lt;ul>
&lt;li>Auteur de la notice ci-dessous: &lt;em>&lt;a href="https://vuptime.io/about/#jrossignol">Jérémy Rossignol&lt;/a>&lt;/em>&lt;/li>
&lt;/ul>
&lt;p>Premier jour au VMworld, peu de conférences mais une découverte intéressante &lt;em>&amp;quot;l'expert bar&amp;quot;&lt;/em>: Des experts de VMware classés par produits sont ici pour écouter vos problèmes et essayer d'y répondre.&lt;/p>
&lt;p>J'ai eu l'occasion d'en rencontrer 2:&lt;/p>
&lt;ul>
&lt;li>Un français &lt;strong>Fabien Koessler&lt;/strong> pour NSX, un nom qui ne m'était pas inconnu car on avait déjà eu l'occasion d'échanger sur des tickets de support. Concernant ma question il reviendra vers moi car apparemment les limitations du bridging avec les &lt;em>distributed logical router&lt;/em> ne sont pas des sujets très courants. Il m'a donné toutefois une piste à creuser les hardwares VTEP.&lt;/li>
&lt;li>Le second expert rencontré est orienté &lt;strong>vCloud Director&lt;/strong> pour le coup, ma question porte sur la limite des &lt;em>external network&lt;/em> au sein d'une instance vCloud Director. En effet, VMware annonce une limite de 1024 réseaux externes, je voulais savoir si celle ci était une limite physique ou seulement théorique car non testé. Encore une fois malheureusement, j'ai laissé mes coordonnées et l'expert reviendra vers moi plus tard.&lt;/li>
&lt;/ul>
&lt;p>Pour le coup, je n'ai pas eu de réponses directe à mes questions mais toutefois ce concept &lt;em>&amp;quot;d'expert bar&amp;quot;&lt;/em> est très sympa.&lt;/p></description></item><item><title>VMworld 2018 – ¡ Let's go to VMworld 2018 EUMA !</title><link>https://vuptime.io/post/2018-11-01-letsgo-vmworld-2018-euma/</link><pubDate>Thu, 01 Nov 2018 00:00:00 +0000</pubDate><guid>https://vuptime.io/2018/11/01/LetsGo-VMworld-2018-EUMA/</guid><description>
&lt;p>Il faut une première fois à toute chose et dans environ 3 jours, j'aurais la chance de participer à mon premier &lt;strong>&lt;a href="https://www.vmworld.com/en/europe/index.html">VMworld&lt;/a>&lt;/strong>! Je serais accompagné de 2 collègues du &lt;a href="http://www.groupe-sii.com/en/">Groupe SII&lt;/a> (Merci SII au passage!): &lt;a href="https://vuptime.io/about/#aharlaut">Antoine&lt;/a> et Jeremy.&lt;/p>
&lt;p>Forcément, nous le savons déjà, nos planning de sessions sont bien trop chargés pour tenir sur la durée: nous devrons certainement ajuster ceux-ci sur place. L'avantage de partir à 3, est de pouvoir couvrir des domaines d'intérêts et de compétences différents, tout en espérant bénéficier du résumé des ses collègues pour les sessions auxquelles nous n'assistons pas.&lt;/p>
&lt;p>Une fois sur place nous allons certainement retrouver les membres de la cabale française du &lt;a href="https://community.vmug.com/">vMUG&lt;/a>, de nombreuses connaissances professionnelles, des clients et créer de nouveaux contacts: c'est en tout cas un des objectifs d'une participation à un tel évènement.&lt;/p>
&lt;p>D'après les rumeurs, le VMworld ne s'arrête aux portes du &lt;em>Fira Barcelona Gran Via&lt;/em> (Centre des congrès de Barcelone) et de nombreuses soirées et rencontres en &lt;em>'off'&lt;/em> font aussi partie du voyage. Nous participons d'ailleurs (entre autres soirées) tous les 3 au &lt;a href="https://vmworldeuhackathon.hackerearth.com/fr/">{code} Hackathon&lt;/a> avec &lt;a href="https://vmworldeuhackathon.hackerearth.com/fr/sprints/vmworld-eu-code-hackathon/dashboard/3c86b57/team/">un projet&lt;/a> autour de Python et vRealize Orchestrator.&lt;/p>
&lt;p>Nous ferons partager cet évènement au travers de nos comptes Twitter (&lt;a href="https://www.twitter.com/lrivallain">@lrivallain&lt;/a> et &lt;a href="https://www.twitter.com/antoine_hlt">@antoine_hlt&lt;/a>) ainsi que de quelques posts sur le blog.&lt;/p>
&lt;p>Et pour tout ceux qui seront sur place, nous ne refusons jamais de prendre une vBeer!&lt;/p>
&lt;p>&lt;em>PS:&lt;/em> nous aurons aussi des stickers du site, n'hésitez pas: &lt;figure>&lt;img src="https://vuptime.io/images/vuptime-stickers.jpg"/>&lt;figcaption>
&lt;h4>vuptime-stickers&lt;/h4>
&lt;/figcaption>
&lt;/figure>
&lt;/p></description></item><item><title>Use the vRealize Automation REST API on vRealize Orchestrator</title><link>https://vuptime.io/post/2018-10-06-use-vra-rest-api-on-vro/</link><pubDate>Sat, 06 Oct 2018 00:00:00 +0000</pubDate><guid>https://vuptime.io/2018/10/06/use-vra-rest-api-on-vro/</guid><description>
&lt;p>The vRealize Automation REST API can be used on vRealize Orchestrator directly with the &lt;code>vCACCAFE&lt;/code> plugin, instead of using the &lt;code>HTTP-REST&lt;/code> plugin, which can be much more simplier.&lt;/p>
&lt;h1 id="get-the-vra-rest-endpoint">Get the vRA REST endpoint&lt;/h1>
&lt;p>If you have already used the vRealize Automation REST API, you should have noticed that there is around twenty &lt;a href="https://code.vmware.com/apis/39/vrealize-automation">endpoints&lt;/a> !&lt;/p>
&lt;p>On this article, we'll take the example of listing all the blueprints using vRO.&lt;/p>
&lt;p>The REST API call to perform this operation is :&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="ln">1&lt;/span>&lt;span class="cl">https://vra-fqdn/composition-service/api/blueprints
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Thereby the endpoint is &lt;code>composition service&lt;/code>.&lt;/p>
&lt;h1 id="find-the-vcac-endpoint">Find the vCAC endpoint&lt;/h1>
&lt;p>Once the vRealize Automation REST endpoint defined, you need to find it on the vCAC plugin.&lt;/p>
&lt;p>With your favorite REST client ( like &lt;code>Postman&lt;/code> ), perform the following REST call on your vRealize Automation server after being authenticated :&lt;/p>
&lt;pre>&lt;code>https://vra-fqdn/component-registry/endpoints?$filter=endPointType/protocol eq 'REST'&amp;amp;limit=9999
&lt;/code>&lt;/pre>
&lt;p>It will collect all the vRealize Automation REST endpoints.&lt;/p>
&lt;p>On the result, locate your endpoint and get the &lt;code>typeId&lt;/code> which is the endpoint name on the vCAC plugin.&lt;br>
In this case, the vCAC endpoint found is &lt;code>com.vmware.csp.core.cafe.catalog.requested.item.info.provider&lt;/code> for the &lt;code>composition-service&lt;/code>.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-json" data-lang="json">&lt;span class="line">&lt;span class="ln"> 1&lt;/span>&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 2&lt;/span>&lt;span class="cl"> &lt;span class="nt">&amp;#34;@type&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;EndPoint&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 3&lt;/span>&lt;span class="cl"> &lt;span class="nt">&amp;#34;id&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;ed42c762-1487-458a-bc33-b7efc285b426&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 4&lt;/span>&lt;span class="cl"> &lt;span class="nt">&amp;#34;createdDate&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">null&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 5&lt;/span>&lt;span class="cl"> &lt;span class="nt">&amp;#34;lastUpdated&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">null&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 6&lt;/span>&lt;span class="cl"> &lt;span class="nt">&amp;#34;url&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;https://my-vra-server/composition-service/api&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 7&lt;/span>&lt;span class="cl"> &lt;span class="nt">&amp;#34;endPointType&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 8&lt;/span>&lt;span class="cl"> &lt;span class="nt">&amp;#34;typeId&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;com.vmware.csp.core.cafe.catalog.requested.item.info.provider&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 9&lt;/span>&lt;span class="cl"> &lt;span class="nt">&amp;#34;protocol&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;REST&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">10&lt;/span>&lt;span class="cl"> &lt;span class="p">},&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">11&lt;/span>&lt;span class="cl"> &lt;span class="nt">&amp;#34;serviceInfoId&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;b7d3fdea-4808-45d8-af95-cf3aac0c8259&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">12&lt;/span>&lt;span class="cl"> &lt;span class="nt">&amp;#34;endPointAttributes&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">null&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">13&lt;/span>&lt;span class="cl"> &lt;span class="nt">&amp;#34;sslTrusts&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">null&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">14&lt;/span>&lt;span class="cl"> &lt;span class="p">}&lt;/span>&lt;span class="err">,&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Great ! The vCAC endpoint now found, you can use it directly on vRO.&lt;/p>
&lt;h1 id="using-the-vra-rest-api-on-vro">Using the vRA REST API on vRO&lt;/h1>
&lt;p>On vRealize Orchestrator, you can create a rest client with the &lt;a href="http://vroapi.com/Class/vCACCAFE/7.3.0/vCACCAFEHost">vCACCAFEHost&lt;/a>
object and its method &lt;a href="http://vroapi.com/Method/vCACCAFE/7.3.0/vCACCAFEHost/createRestClient">createRestClient()&lt;/a> with the vCAC endpoint on the parameter.&lt;/p>
&lt;p>You will be able to do some basic REST operations like &lt;a href="http://vroapi.com/Class/vCACCAFE/7.3.0/vCACCAFERestClient">GET, POST and PUT&lt;/a>.&lt;/p>
&lt;p>Here is the code to list all the blueprints defined on a vRA tenant :&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-javascript" data-lang="javascript">&lt;span class="line">&lt;span class="ln"> 1&lt;/span>&lt;span class="cl">&lt;span class="cm">/*
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 2&lt;/span>&lt;span class="cl">&lt;span class="cm"> * List all the blueprints defined on a tenant
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 3&lt;/span>&lt;span class="cl">&lt;span class="cm"> *
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 4&lt;/span>&lt;span class="cl">&lt;span class="cm"> * @param {vCACCAFEHost} host Targeted vCACAFE Host Tenant.
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 5&lt;/span>&lt;span class="cl">&lt;span class="cm"> *
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 6&lt;/span>&lt;span class="cl">&lt;span class="cm">*/&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 7&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 8&lt;/span>&lt;span class="cl">&lt;span class="c1">//Create the rest client for the targeted tenant
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 9&lt;/span>&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="nx">restClient&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">host&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">createRestClient&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;com.vmware.csp.core.cafe.catalog.requested.item.info.provider&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">10&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">11&lt;/span>&lt;span class="cl">&lt;span class="c1">//List all the blueprints defined on the tenant
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">12&lt;/span>&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="nx">blueprints&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">restClient&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">get&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;/blueprints&amp;#34;&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="nx">getBodyAsJson&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">13&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">14&lt;/span>&lt;span class="cl">&lt;span class="c1">//Display the name for each blueprint found
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">15&lt;/span>&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="k">for&lt;/span> &lt;span class="nx">each&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kd">var&lt;/span> &lt;span class="nx">blueprint&lt;/span> &lt;span class="k">in&lt;/span> &lt;span class="nx">blueprints&lt;/span>&lt;span class="p">){&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">16&lt;/span>&lt;span class="cl"> &lt;span class="nx">System&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">log&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;Blueprint found : &amp;#34;&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="nx">blueprint&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">name&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">17&lt;/span>&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Reboot French VMUG, Paris, Septembre 2018</title><link>https://vuptime.io/post/2018-09-20-frenchvmug-reboot-paris/</link><pubDate>Thu, 20 Sep 2018 00:00:00 +0000</pubDate><guid>https://vuptime.io/2018/09/20/frenchvmug-reboot-paris/</guid><description>
&lt;blockquote>
&lt;p>As an exception, I will post this article in French only as its subject is the French VMUG edition. Sorry for english speaking people.&lt;/p>
&lt;/blockquote>
&lt;p>Aujourd'hui avait lieu la reboot-edition du &lt;a href="https://community.vmug.com/events/event-description?CalendarEventKey=a806468f-34a7-407d-8526-8d93617b3442&amp;amp;CommunityKey=bba8d80d-5f53-404f-94ea-0009187683ae&amp;amp;Home=%2fcommunities%2flocalcommunityhome">VMUG France&lt;/a> dans les (tout neufs!) locaux parisiens d'OVH.&lt;/p>
&lt;p>L'événènement est à présent orchestré (et bien orchestré!) par &lt;a href="https://twitter.com/Noham_m">Noham Medyouni&lt;/a> (Dell-EMC), &lt;a href="https://twitter.com/fredg_work">Fréderic Giovannacci&lt;/a> (SIB) et &lt;a href="https://twitter.com/notmg">Matthieu Gioia&lt;/a> (consultant indep.) et pour ce RDV parisien de rentrée, 2 invités de marque étaient présents:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://twitter.com/DuncanYB">Duncan Epping&lt;/a>: Chief Technologist HCI @VMware, Auteur du blog &lt;a href="http://yellow-bricks.com">Yellow Briks&lt;/a>, Coauteur de la &lt;em>bible&lt;/em> &lt;code>Clustering Deepdive&lt;/code>.&lt;/li>
&lt;li>&lt;a href="https://twitter.com/FrankDenneman">Franck Denneman&lt;/a>: coauteur de &lt;em>l'Ancien Testament&lt;/em> &lt;code>Host Deepdive&lt;/code>, du Nouveau: &lt;code>Clustering Deepdive&lt;/code>.&lt;/li>
&lt;/ul>
&lt;h2 id="ovh">OVH&lt;/h2>
&lt;p>Cette journée a commencé par une présentation d'OVH et de son offre de cloud privé: &lt;em>SDDC&lt;/em>.&lt;/p>
&lt;p>OVH dans son actualité récente a notamment inauguré une nouvelle usine d'assemblage de serveurs à Croix, avec une capacité annuelle de production de 400 000 serveurs. Autant dire qu'ils voient grand et que leur appétit est grand sur le marché du Cloud Computing.&lt;/p>
&lt;p>Coté &lt;em>Private Cloud/SDDC&lt;/em> (souvenirs, souvenirs!), l'offre s'étoffe de nouveautés:&lt;/p>
&lt;ul>
&lt;li>&lt;strong>vSAN&lt;/strong> sera certainement annoncé plus officiellement lors du Summit (mi-Octobre) avec, côté technique, du full MVNE et du vSAN en version 6.6. De ce que j'ai pu avoir comme info en off, le client sera assez libre de configurer comme il le souhaite de nombreux paramètres du cluster.&lt;/li>
&lt;li>Des nouveauté coté &lt;strong>sécurité&lt;/strong> avec la future possibilité de bénéficier des fonctions de chiffrement de l'écosystème vSphere via son propre HSM, ou encore, d'attacher son propre domaine Active Directory à l'authentification du produit.&lt;/li>
&lt;/ul>
&lt;p>Visiblement, les liens entre OVH et VMware sont forts (en témoignait déjà le rachat de vCloud Air par OVH il y a presque 2 ans) et cela se voit: OVH a été primé 7x comme meilleur partenaire VMware au cours des 9 dernières années.&lt;/p>
&lt;p>Enfin, c'est plus anecdotique mais intéressant à savoir, OVH, envisage de proposer des ressources (sans SLA et limitées dans le temps) aux membres de la communauté VMUG et vExpert! A suivre.&lt;/p>
&lt;h2 id="duncan-epping-révolution-de-lit">Duncan Epping, révolution de l'IT&lt;/h2>
&lt;p>Duncan a ensuite embrayé pour parler des évolutions actuelles et pré-senties du marché de l'IT.&lt;/p>
&lt;p>Si on estime que dans les 5 ans à venir, plus d'applications seront créées et déployées qu'au cours des 40 dernières années: en effet on remarque que l'accélération sera dure à encaisser avec des pratiques d'il y a 10 ans. VMware essaye de son coté, d'apporter des solutions et de simplifier le travail de ses utilisateurs dans ses nouvelles et futures releases.&lt;/p>
&lt;p>Nous avons notamment pu voir une démonstration de l'interface HTML5 de vSphere 6.7u1 avec un nouveau wizard de configuration de Cluster: qui n'a pas rêvé de configurer son cluster, avec vSAN, dvSwitch etc. en quelques clicks seulement? Et envoyer une support-request (les fameuses SR, un peu fastidieuses à remplir), directement depuis le vCenter concerné? Bientôt (on attend la GA), ça sera faisable!&lt;/p>
&lt;p>Puis il a abordé les Tech Preview en cours sur 2 sujets:&lt;/p>
&lt;ul>
&lt;li>&lt;em>Native Vsan data protection&lt;/em> qui permet de remplacer une solution de backup et d'exporter, au besoin, et selon ses politiques, les données sur du stockage distant, incluant quelques providers clouds.&lt;/li>
&lt;li>&lt;em>vSan file services&lt;/em> ou l'arrivée de la consommation du vSAN dans les guestOS au travers d'une appliance conçue pour être simple à déployer, résiliente, auto-managée, distribuée, compatible object-storage etc.&lt;/li>
&lt;/ul>
&lt;p>Autant dire que ça donne trèèèèès envie de tester tout ça et de l'envisager en production chez nos clients.&lt;/p>
&lt;h2 id="franck-denneman-compute-deep-dive">Franck Denneman, Compute Deep Dive&lt;/h2>
&lt;p>Autant le dire directement: on passe du coté DUR du compute quand on échange avec Franck et pourtant, ça semble couler de source tellement la pédagogie est efficace.&lt;/p>
&lt;p>Sa présentation a notamment été un rappel de quelques notions expliquées dans son bouquin: &lt;code>Host Deepdive&lt;/code> (que je recommande chaudement) comme l'impact de la configuration hardware (sockets, DIMM, NUMA, channel etc.) de vos hosts. Et celui de la configuration de paramètres de VM sur les performances: nombre de &lt;em>cores per socket&lt;/em> ou encore la configuration (sensible!) du mode &lt;em>cpu latency sensitivity: high&lt;/em> sur le workload d'une infrastructure.&lt;/p>
&lt;p>Hyper intéressant !&lt;/p>
&lt;h2 id="autres-présentations">Autres présentations&lt;/h2>
&lt;p>Je ne m'étendrais pas sur les autres présentations (Rubrik, NetApp, PureStorage et Zerto) qui étaient très intéressantes elles aussi mais un peu plus commerciales et vastes.&lt;/p>
&lt;h2 id="surprises">Surprises&lt;/h2>
&lt;p>Et comme si un VMUG avec de super guests ne suffisait pas, 2 grosses surprises sont intervenues au cours de la journée:&lt;/p>
&lt;ul>
&lt;li>La venue de Yoann Le Névé, cofondateur du 2ème festival de France, le HellFest. Quelques collègues Nantais en ont presque fait un QG et visiblement les liens sont forts puisque des places pour la prochaine édition ont été offertes aux participants par tirage au sort !&lt;/li>
&lt;li>L'intervention d'Oles (Octave Klaba) (&lt;em>mon ex boss&lt;/em>), qu'on ne présente plus et qui a pu rappeler tout le bien qu'il pensait des liens qu'il entretient avec VMware, et de ses équipes des projets de cloud privé. Toujours dans son style décontracté et inimitable!&lt;/li>
&lt;/ul>
&lt;h2 id="conclusion">Conclusion&lt;/h2>
&lt;p>Je crois que l'enthousiasme autour de cet évent se lit dans le billet ci-dessus mais au cas où, je le dis explicitement: &lt;em>à refaire&lt;/em>. Un grand merci aux organisateurs pour cette très belle journée (et ce sublime T-shirt).&lt;/p>
&lt;p>Merci aussi à SII, mon employeur, qui m'a permi d'assister à cet event!&lt;/p>
&lt;p>Et la photo de famille:&lt;/p>
&lt;figure>&lt;img src="https://vuptime.io/images/frvmug-09-2018-paris.jpg"/>&lt;figcaption>
&lt;h4>Photo de famille&lt;/h4>
&lt;/figcaption>
&lt;/figure></description></item><item><title>VMware vCloud Director – Change SSL certificates</title><link>https://vuptime.io/post/2018-07-24-vmware-vcloud-director-change-ssl-certificates/</link><pubDate>Tue, 24 Jul 2018 00:00:00 +0000</pubDate><guid>https://vuptime.io/2018/07/24/vmware-vcloud-director-change-ssl-certificates/</guid><description>
&lt;p>The following procedure is a self-reminder of How-To replace the certificates of a VMware &lt;strong>vCloud Director&lt;/strong> deployment.&lt;/p>
&lt;h1 id="prepare-informations">Prepare informations&lt;/h1>
&lt;p>Here is a configuration sample for a single cell deployment. Change settings according to your needs:&lt;/p>
&lt;blockquote>
&lt;p>If you are using multi-cells deployment, I stronlgy recommend you to extend informations in the &lt;code>-ext &amp;quot;san=dns:...&amp;quot;&lt;/code> parameter of the certificate creation to include each cell DNS and IP and the VIP FQDN at least.&lt;/p>
&lt;/blockquote>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="ln"> 1&lt;/span>&lt;span class="cl">&lt;span class="nv">DOMAIN&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;lri.lcl&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 2&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 3&lt;/span>&lt;span class="cl">&lt;span class="c1"># API and HTTP host info&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 4&lt;/span>&lt;span class="cl">&lt;span class="nv">HTTP_HOSTNAME&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;vuptime-vcd&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 5&lt;/span>&lt;span class="cl">&lt;span class="nv">HTTP_IP&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;10.10.110.3&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 6&lt;/span>&lt;span class="cl">&lt;span class="nv">HTTP_FQDN&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="nv">$HTTP_HOSTNAME&lt;/span>&lt;span class="s2">.&lt;/span>&lt;span class="nv">$DOMAIN&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 7&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 8&lt;/span>&lt;span class="cl">&lt;span class="c1"># Console proxy host info&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 9&lt;/span>&lt;span class="cl">&lt;span class="nv">CONSOLE_PROXY_HOSTNAME&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;vuptime-vcd-vmrc&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">10&lt;/span>&lt;span class="cl">&lt;span class="nv">CONSOLE_PROXY_IP&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;10.10.110.4&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">11&lt;/span>&lt;span class="cl">&lt;span class="nv">CONSOLE_PROXY_FQDN&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="nv">$CONSOLE_PROXY_HOSTNAME&lt;/span>&lt;span class="s2">.&lt;/span>&lt;span class="nv">$DOMAIN&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">12&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">13&lt;/span>&lt;span class="cl">&lt;span class="c1"># Others certificates information&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">14&lt;/span>&lt;span class="cl">&lt;span class="nv">VALIDITY&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="m">365&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">15&lt;/span>&lt;span class="cl">&lt;span class="nv">CERT_DNAME_INFO&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;OU=vUptime-IO, O=Example Corp, L=Rennes, S=Britain, C=FR&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">16&lt;/span>&lt;span class="cl">&lt;span class="nv">CA_CERT_PATH&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;/tmp/ca-root.cert&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">17&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">18&lt;/span>&lt;span class="cl">&lt;span class="c1"># Keytool informations&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">19&lt;/span>&lt;span class="cl">&lt;span class="nv">KEYTOOL_BIN&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="nv">$VCLOUD_JAVA_HOME&lt;/span>&lt;span class="s2">/bin/keytool&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">20&lt;/span>&lt;span class="cl">&lt;span class="nv">KS_PATH&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="nv">$VCLOUD_HOME&lt;/span>&lt;span class="s2">/data/transfer/certificates.ks&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">21&lt;/span>&lt;span class="cl">&lt;span class="nv">KS_PASSWORD&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;VMware1!&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="create-unsigned-certificates">Create unsigned certificates&lt;/h1>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="ln"> 1&lt;/span>&lt;span class="cl">&lt;span class="nv">$KEYTOOL_BIN&lt;/span> &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 2&lt;/span>&lt;span class="cl">&lt;span class="se">&lt;/span> -keystore &lt;span class="nv">$KS_PATH&lt;/span> &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 3&lt;/span>&lt;span class="cl">&lt;span class="se">&lt;/span> -alias http &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 4&lt;/span>&lt;span class="cl">&lt;span class="se">&lt;/span> -storepass &lt;span class="nv">$KS_PASSWORD&lt;/span> &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 5&lt;/span>&lt;span class="cl">&lt;span class="se">&lt;/span> -keypass &lt;span class="nv">$KS_PASSWORD&lt;/span> &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 6&lt;/span>&lt;span class="cl">&lt;span class="se">&lt;/span> -storetype JCEKS &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 7&lt;/span>&lt;span class="cl">&lt;span class="se">&lt;/span> -genkeypair &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 8&lt;/span>&lt;span class="cl">&lt;span class="se">&lt;/span> -keyalg RSA &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 9&lt;/span>&lt;span class="cl">&lt;span class="se">&lt;/span> -keysize &lt;span class="m">2048&lt;/span> &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">10&lt;/span>&lt;span class="cl">&lt;span class="se">&lt;/span> -validity &lt;span class="nv">$VALIDITY&lt;/span> &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">11&lt;/span>&lt;span class="cl">&lt;span class="se">&lt;/span> -dname &lt;span class="s2">&amp;#34;CN=&lt;/span>&lt;span class="nv">$HTTP_FQDN&lt;/span>&lt;span class="s2">, &lt;/span>&lt;span class="nv">$CERT_DNAME_INFO&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span> &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">12&lt;/span>&lt;span class="cl">&lt;span class="se">&lt;/span> -ext &lt;span class="s2">&amp;#34;san=dns:&lt;/span>&lt;span class="nv">$HTTP_FQDN&lt;/span>&lt;span class="s2">,dns:&lt;/span>&lt;span class="nv">$HTTP_HOSTNAME&lt;/span>&lt;span class="s2">,ip:&lt;/span>&lt;span class="nv">$HTTP_IP&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">13&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">14&lt;/span>&lt;span class="cl">&lt;span class="nv">$KEYTOOL_BIN&lt;/span> &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">15&lt;/span>&lt;span class="cl">&lt;span class="se">&lt;/span> -keystore &lt;span class="nv">$KS_PATH&lt;/span> &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">16&lt;/span>&lt;span class="cl">&lt;span class="se">&lt;/span> -alias consoleproxy &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">17&lt;/span>&lt;span class="cl">&lt;span class="se">&lt;/span> -storepass &lt;span class="nv">$KS_PASSWORD&lt;/span> &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">18&lt;/span>&lt;span class="cl">&lt;span class="se">&lt;/span> -keypass &lt;span class="nv">$KS_PASSWORD&lt;/span> &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">19&lt;/span>&lt;span class="cl">&lt;span class="se">&lt;/span> -storetype JCEKS &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">20&lt;/span>&lt;span class="cl">&lt;span class="se">&lt;/span> -keyalg RSA &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">21&lt;/span>&lt;span class="cl">&lt;span class="se">&lt;/span> -genkeypair &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">22&lt;/span>&lt;span class="cl">&lt;span class="se">&lt;/span> -keysize &lt;span class="m">2048&lt;/span> &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">23&lt;/span>&lt;span class="cl">&lt;span class="se">&lt;/span> -validity &lt;span class="nv">$VALIDITY&lt;/span> &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">24&lt;/span>&lt;span class="cl">&lt;span class="se">&lt;/span> -dname &lt;span class="s2">&amp;#34;CN=&lt;/span>&lt;span class="nv">$CONSOLE_PROXY_FQDN&lt;/span>&lt;span class="s2">, &lt;/span>&lt;span class="nv">$CERT_DNAME_INFO&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span> &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">25&lt;/span>&lt;span class="cl">&lt;span class="se">&lt;/span> -ext &lt;span class="s2">&amp;#34;san=dns:&lt;/span>&lt;span class="nv">$CONSOLE_PROXY_FQDN&lt;/span>&lt;span class="s2">,dns:&lt;/span>&lt;span class="nv">$CONSOLE_PROXY_HOSTNAME&lt;/span>&lt;span class="s2">,ip:&lt;/span>&lt;span class="nv">$CONSOLE_PROXY_IP&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="create-certificate-requests-for-ca-signing">Create certificate requests for CA-signing&lt;/h1>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="ln"> 1&lt;/span>&lt;span class="cl">&lt;span class="nv">$KEYTOOL_BIN&lt;/span> &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 2&lt;/span>&lt;span class="cl">&lt;span class="se">&lt;/span> -keystore &lt;span class="nv">$KS_PATH&lt;/span> &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 3&lt;/span>&lt;span class="cl">&lt;span class="se">&lt;/span> -storetype JCEKS &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 4&lt;/span>&lt;span class="cl">&lt;span class="se">&lt;/span> -storepass &lt;span class="nv">$KS_PASSWORD&lt;/span> &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 5&lt;/span>&lt;span class="cl">&lt;span class="se">&lt;/span> -certreq &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 6&lt;/span>&lt;span class="cl">&lt;span class="se">&lt;/span> -alias http &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 7&lt;/span>&lt;span class="cl">&lt;span class="se">&lt;/span> -file &lt;span class="nv">$HTTP_FQDN&lt;/span>.csr &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 8&lt;/span>&lt;span class="cl">&lt;span class="se">&lt;/span> -ext &lt;span class="s2">&amp;#34;san=dns:&lt;/span>&lt;span class="nv">$HTTP_FQDN&lt;/span>&lt;span class="s2">,dns:&lt;/span>&lt;span class="nv">$HTTP_HOSTNAME&lt;/span>&lt;span class="s2">,ip:&lt;/span>&lt;span class="nv">$HTTP_IP&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 9&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">10&lt;/span>&lt;span class="cl">&lt;span class="nv">$KEYTOOL_BIN&lt;/span> &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">11&lt;/span>&lt;span class="cl">&lt;span class="se">&lt;/span> -keystore &lt;span class="nv">$KS_PATH&lt;/span> &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">12&lt;/span>&lt;span class="cl">&lt;span class="se">&lt;/span> -storetype JCEKS &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">13&lt;/span>&lt;span class="cl">&lt;span class="se">&lt;/span> -storepass &lt;span class="nv">$KS_PASSWORD&lt;/span> &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">14&lt;/span>&lt;span class="cl">&lt;span class="se">&lt;/span> -certreq &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">15&lt;/span>&lt;span class="cl">&lt;span class="se">&lt;/span> -alias consoleproxy &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">16&lt;/span>&lt;span class="cl">&lt;span class="se">&lt;/span> -file &lt;span class="nv">$CONSOLE_PROXY_FQDN&lt;/span>.csr &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">17&lt;/span>&lt;span class="cl">&lt;span class="se">&lt;/span> -ext &lt;span class="s2">&amp;#34;san=dns:&lt;/span>&lt;span class="nv">$CONSOLE_PROXY_FQDN&lt;/span>&lt;span class="s2">,dns:&lt;/span>&lt;span class="nv">$CONSOLE_PROXY_HOSTNAME&lt;/span>&lt;span class="s2">,ip:&lt;/span>&lt;span class="nv">$CONSOLE_PROXY_IP&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Send CSR files to your (internal/external) CA for signing, and copy them to cell:&lt;/p>
&lt;ul>
&lt;li>&lt;code>ca-root.crt&lt;/code>: the CA certificate&lt;/li>
&lt;li>&lt;code>vuptime-vcd.lri.lcl.crt&lt;/code>: HTTP certificate&lt;/li>
&lt;li>&lt;code>vuptime-vcd-vmrc.lri.lcl.crt&lt;/code>: ConsoleProxy certificate&lt;/li>
&lt;/ul>
&lt;h1 id="import-signed-certificates-in-the-keystore">Import signed certificates in the keystore&lt;/h1>
&lt;p>First, we import the CA certificate:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="ln">1&lt;/span>&lt;span class="cl">&lt;span class="nv">$KEYTOOL_BIN&lt;/span> &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">2&lt;/span>&lt;span class="cl">&lt;span class="se">&lt;/span> -keystore &lt;span class="nv">$KS_PATH&lt;/span> &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">3&lt;/span>&lt;span class="cl">&lt;span class="se">&lt;/span> -storetype JCEKS &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">4&lt;/span>&lt;span class="cl">&lt;span class="se">&lt;/span> -storepass &lt;span class="nv">$KS_PASSWORD&lt;/span> &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">5&lt;/span>&lt;span class="cl">&lt;span class="se">&lt;/span> -import &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">6&lt;/span>&lt;span class="cl">&lt;span class="se">&lt;/span> -alias root &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">7&lt;/span>&lt;span class="cl">&lt;span class="se">&lt;/span> -file &lt;span class="nv">$CA_CERT_PATH&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Then the 2 applications certificates:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="ln"> 1&lt;/span>&lt;span class="cl">&lt;span class="nv">$KEYTOOL_BIN&lt;/span> &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 2&lt;/span>&lt;span class="cl">&lt;span class="se">&lt;/span> -keystore &lt;span class="nv">$KS_PATH&lt;/span> &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 3&lt;/span>&lt;span class="cl">&lt;span class="se">&lt;/span> -storetype JCEKS &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 4&lt;/span>&lt;span class="cl">&lt;span class="se">&lt;/span> -storepass &lt;span class="nv">$KS_PASSWORD&lt;/span> &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 5&lt;/span>&lt;span class="cl">&lt;span class="se">&lt;/span> -import &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 6&lt;/span>&lt;span class="cl">&lt;span class="se">&lt;/span> -alias http &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 7&lt;/span>&lt;span class="cl">&lt;span class="se">&lt;/span> -file &lt;span class="nv">$HTTP_FQDN&lt;/span>.crt
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 8&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 9&lt;/span>&lt;span class="cl">&lt;span class="nv">$KEYTOOL_BIN&lt;/span> &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">10&lt;/span>&lt;span class="cl">&lt;span class="se">&lt;/span> -keystore &lt;span class="nv">$KS_PATH&lt;/span> &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">11&lt;/span>&lt;span class="cl">&lt;span class="se">&lt;/span> -storetype JCEKS &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">12&lt;/span>&lt;span class="cl">&lt;span class="se">&lt;/span> -storepass &lt;span class="nv">$KS_PASSWORD&lt;/span> &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">13&lt;/span>&lt;span class="cl">&lt;span class="se">&lt;/span> -import &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">14&lt;/span>&lt;span class="cl">&lt;span class="se">&lt;/span> -alias consoleproxy &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">15&lt;/span>&lt;span class="cl">&lt;span class="se">&lt;/span> -file &lt;span class="nv">$CONSOLE_PROXY_FQDN&lt;/span>.crt
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="ln">1&lt;/span>&lt;span class="cl">&lt;span class="nv">$KEYTOOL_BIN&lt;/span> &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">2&lt;/span>&lt;span class="cl">&lt;span class="se">&lt;/span> -storetype JCEKS &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">3&lt;/span>&lt;span class="cl">&lt;span class="se">&lt;/span> -storepass &lt;span class="nv">$KS_PASSWORD&lt;/span> &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">4&lt;/span>&lt;span class="cl">&lt;span class="se">&lt;/span> -keystore &lt;span class="nv">$KS_PATH&lt;/span> &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">5&lt;/span>&lt;span class="cl">&lt;span class="se">&lt;/span> -list
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="apply-certificates-to-the-services">Apply certificates to the services&lt;/h1>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="ln">1&lt;/span>&lt;span class="cl">chown vcloud: &lt;span class="nv">$KS_PATH&lt;/span> &lt;span class="c1"># Set owner of the keystore to vcloud user&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">2&lt;/span>&lt;span class="cl">&lt;span class="nv">$VCLOUD_HOME&lt;/span>/bin/cell-management-tool certificates -j -k &lt;span class="nv">$KS_PATH&lt;/span> -w &lt;span class="nv">$KS_PASSWORD&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">3&lt;/span>&lt;span class="cl">service vmware-vcd restart
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Switch to Clarity UI light theme</title><link>https://vuptime.io/post/2018-06-11-switch-to-clarity-ui-light-theme/</link><pubDate>Mon, 11 Jun 2018 00:00:00 +0000</pubDate><guid>https://vuptime.io/2018/06/11/switch-to-clarity-ui-light-theme/</guid><description>
&lt;p>As you could notice (if you don't use an RSS tool to read this blog): there is a new UI theme based on the &lt;a href="https://vmware.github.io/clarity/">Clarity Design System&lt;/a>.&lt;/p>
&lt;p>To compare before/after:&lt;/p>
&lt;link rel="stylesheet" href="https://vuptime.io/includes/cocoen/cocoen.min.css">
&lt;div class="cocoen">
&lt;img src="https://vuptime.io/images/clarity-ui/before.png" alt="Before" title="Before">
&lt;img src="https://vuptime.io/images/clarity-ui/after.png" alt="After" title="After">
&lt;/div>
&lt;script src="https://vuptime.io/includes/cocoen/cocoen.min.js">&lt;/script>
&lt;script>
document.addEventListener('DOMContentLoaded', function(){
new Cocoen();
});
&lt;/script>
&lt;p>This decision was strongly motivated by the new &lt;em>&lt;strong>HTML5-powered interface&lt;/strong>&lt;/em> of vCSA 6.5 &amp;amp; 6.7. This new VMware vCenter UI is also based (as many of others VMware's products) on this open-source design system initiated by VMware and is very enjoyable to use on a daily basis (especially, with the Dark theme from &lt;a href="https://github.com/BeryJu/dark-vcenter">@BeryJu&lt;/a>!).&lt;/p>
&lt;p>&lt;strong>Clraity UI&lt;/strong> is a mix of UX guidelines, HTML/CSS framework, and Angular components to build web user interface with responsive features, a moderne look and accessibility best-practices. There is a very good documentation available &lt;a href="https://vmware.github.io/clarity/documentation/v0.11/get-started">to start using it&lt;/a> on your project and it contains reference guides for all available components.&lt;/p>
&lt;p>Finally, I whant to thank &lt;strong>&lt;a href="https://github.com/codyde">@codyde&lt;/a>&lt;/strong> for his post blog &lt;a href="https://www.thehumblelab.com/redesigning-my-blog-with-clarityui/">Redesigning My Blog With ClarityUI&lt;/a> that deeply help me to proceed the change.&lt;/p></description></item><item><title>VMware vRealize orchestrator package diff python tool</title><link>https://vuptime.io/post/2018-02-28-vmware-vrealizeorchestrator-package-diff-python-tool/</link><pubDate>Wed, 28 Feb 2018 00:00:00 +0000</pubDate><guid>https://vuptime.io/2018/02/28/vmware-vrealizeorchestrator-package-diff-python-tool/</guid><description>
&lt;p>I have recently published a draft tool to provide a table-formated diff of two vRealize Orchestrator packages.&lt;/p>
&lt;p>Project is available on &lt;a href="https://github.com/lrivallain/vro-package-diff/">GitHub project&lt;/a> and will evolve in futur to support more package item's types and to provide better information about differences.&lt;/p>
&lt;figure>&lt;img src="https://vuptime.io/images/vro-diff-package/vro-package-diff-sample.png"/>&lt;figcaption>
&lt;h4>Sample of output&lt;/h4>
&lt;/figcaption>
&lt;/figure>
&lt;h2 id="installation">Installation&lt;/h2>
&lt;p>&lt;strong>Requirements:&lt;/strong> Python 3 and &lt;code>pip&lt;/code> installed.&lt;/p>
&lt;p>Download:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="ln">1&lt;/span>&lt;span class="cl">git clone https://github.com/lrivallain/vro-package-diff.git
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">2&lt;/span>&lt;span class="cl">&lt;span class="nb">cd&lt;/span> vro-package-diff
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>(optionnal) Create python virtualenv:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="ln">1&lt;/span>&lt;span class="cl">virtualenv -p python3 --no-site-packages venv
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">2&lt;/span>&lt;span class="cl">. venv/bin/activate
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Install required python packages:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="ln">1&lt;/span>&lt;span class="cl">pip install -r requirements.txt
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="usage">Usage&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="ln">1&lt;/span>&lt;span class="cl">python ./vro_package_diff.py packageA.package packageB.package
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>With:&lt;/p>
&lt;ul>
&lt;li>&lt;code>packageA.package&lt;/code> : oldest package file&lt;/li>
&lt;li>&lt;code>packageB.package&lt;/code> : newest package file&lt;/li>
&lt;/ul>
&lt;h2 id="logs">Logs&lt;/h2>
&lt;p>Execution logs are saved in the &lt;code>diff.log&lt;/code> file. The file is overwritten at each execution of the diff tool.&lt;/p></description></item><item><title>Ansible/VMware modules - first steps</title><link>https://vuptime.io/post/2018-02-07-ansible-vmware_modules_-_first_steps/</link><pubDate>Wed, 07 Feb 2018 00:00:00 +0000</pubDate><guid>https://vuptime.io/2018/02/07/ansible-vmware_modules_-_first_steps/</guid><description>
&lt;p>Ansible is a well known software to automates software provisioning, configuration management, and application deployment. In concrete terms, it's possible to manage infrastructure deployment and configuration during life cycle from sets of configuration files.&lt;/p>
&lt;p>In the following post, I will try to explain how to use it with some VMware modules from ansible installation to the management of a vCenter based infrastructure.&lt;/p>
&lt;h1 id="ansible-installation">Ansible installation&lt;/h1>
&lt;p>I suggest to use Ansible from the &lt;a href="https://github.com/ansible/ansible">github repository&lt;/a> to be able to use the most recent modules from the repository as there is a lot of work in progress on the VMware related modules:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="ln">1&lt;/span>&lt;span class="cl">git clone https://github.com/ansible/ansible.git &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> &lt;span class="nb">cd&lt;/span> ansible/
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Personally, I prefer to use a python virtual environment to manage a test or stable environment:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="ln">1&lt;/span>&lt;span class="cl">sudo pip install virtualenv
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">2&lt;/span>&lt;span class="cl">virtualenv --system-site-packages venv
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">3&lt;/span>&lt;span class="cl">. venv/bin/activate
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Install the ansible requirements, and the VMware python sdk:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="ln">1&lt;/span>&lt;span class="cl">pip install -r requirements.txt
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">2&lt;/span>&lt;span class="cl">pip install pyvmomi
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>We are now ready to use ansible with VMware modules.&lt;/p>
&lt;h1 id="ansible-usage-with-vmware-vcenter">Ansible usage with VMware vCenter&lt;/h1>
&lt;p>The following sample consist of VM deployment in a existing vCenter infrastructure from a linked-clone operation.&lt;/p>
&lt;blockquote>
&lt;p>&lt;em>A linked clone is made from a snapshot of the parent. All files available on the parent at the moment of the snapshot continue to remain available to the linked clone. Ongoing changes to the virtual disk of the parent do not affect the linked clone, and changes to the disk of the linked clone do not affect the parent.&lt;/em>&lt;/p>
&lt;/blockquote>
&lt;h2 id="inventory">Inventory&lt;/h2>
&lt;p>We will create a simple inventory with virtual machines items representing a scalable 2 tiers application with:&lt;/p>
&lt;ul>
&lt;li>web frontend&lt;/li>
&lt;li>backend workers&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="ln"> 1&lt;/span>&lt;span class="cl"> [10.10.10.107.0/24] External Network
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 2&lt;/span>&lt;span class="cl"> +--------------------+-------------+-------------------+
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 3&lt;/span>&lt;span class="cl"> | |
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 4&lt;/span>&lt;span class="cl"> | |
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 5&lt;/span>&lt;span class="cl"> +-----+----+ +-----+----+
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 6&lt;/span>&lt;span class="cl"> | | | |
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 7&lt;/span>&lt;span class="cl"> | | | |
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 8&lt;/span>&lt;span class="cl"> | Web | | Web |
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 9&lt;/span>&lt;span class="cl"> | Frontend | | Frontend |
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">10&lt;/span>&lt;span class="cl"> | # 1 | | # 2 |
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">11&lt;/span>&lt;span class="cl"> | | | |
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">12&lt;/span>&lt;span class="cl"> | | | |
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">13&lt;/span>&lt;span class="cl"> +-----+----+ +-----+----+
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">14&lt;/span>&lt;span class="cl"> | |
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">15&lt;/span>&lt;span class="cl"> [10.10.10.108.0/24] | | Internal Network
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">16&lt;/span>&lt;span class="cl"> +----------+---------+----+--------+-----+-------------+
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">17&lt;/span>&lt;span class="cl"> | | |
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">18&lt;/span>&lt;span class="cl"> | | |
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">19&lt;/span>&lt;span class="cl"> +----+----+ +----+----+ +----+----+
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">20&lt;/span>&lt;span class="cl"> | | | | | |
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">21&lt;/span>&lt;span class="cl"> | | | | | |
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">22&lt;/span>&lt;span class="cl"> | Backend | | Backend | | Backend |
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">23&lt;/span>&lt;span class="cl"> | Worker | | Worker | | Worker |
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">24&lt;/span>&lt;span class="cl"> | # 1 | | # 2 | | # 3 |
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">25&lt;/span>&lt;span class="cl"> | | | | | |
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">26&lt;/span>&lt;span class="cl"> | | | | | |
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">27&lt;/span>&lt;span class="cl"> +---------+ +---------+ +---------+
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>To simplify the sample, all virtual machines will not be configured at the application level: we will only cover the deployment of new VM with OS ready for usage.&lt;/p>
&lt;p>We create an &lt;em>INI-like&lt;/em> (one of Ansible's defaults) inventory file named &lt;code>sample-app01.inv&lt;/code> with the following content:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-ini" data-lang="ini">&lt;span class="line">&lt;span class="ln"> 1&lt;/span>&lt;span class="cl">&lt;span class="k">[frontweb]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 2&lt;/span>&lt;span class="cl">&lt;span class="na">web01 ip&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;10.10.107.1&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 3&lt;/span>&lt;span class="cl">&lt;span class="na">web02 ip&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;10.10.107.2&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 4&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 5&lt;/span>&lt;span class="cl">&lt;span class="k">[workers]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 6&lt;/span>&lt;span class="cl">&lt;span class="na">worker01 ip&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;10.10.108.1&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 7&lt;/span>&lt;span class="cl">&lt;span class="na">worker02 ip&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;10.10.108.2&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 8&lt;/span>&lt;span class="cl">&lt;span class="na">worker03 ip&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;10.10.108.3&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 9&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">10&lt;/span>&lt;span class="cl">&lt;span class="k">[app01:vars]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">11&lt;/span>&lt;span class="cl">&lt;span class="na">datastore&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#39;Datastore01&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">12&lt;/span>&lt;span class="cl">&lt;span class="na">memory&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#39;256&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">13&lt;/span>&lt;span class="cl">&lt;span class="na">cpucount&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#39;1&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">14&lt;/span>&lt;span class="cl">&lt;span class="na">guest_id&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#39;ubuntu64Guest&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">15&lt;/span>&lt;span class="cl">&lt;span class="na">folder&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#39;app01&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">16&lt;/span>&lt;span class="cl">&lt;span class="na">respool&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#39;prod&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">17&lt;/span>&lt;span class="cl">&lt;span class="na">snapshot_name&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#39;20180129&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">18&lt;/span>&lt;span class="cl">&lt;span class="na">dns_domain&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#39;lri.lcl&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">19&lt;/span>&lt;span class="cl">&lt;span class="na">netmask&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#39;255.255.255.0&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">20&lt;/span>&lt;span class="cl">&lt;span class="na">dns_server&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#39;10.10.10.99&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">21&lt;/span>&lt;span class="cl">&lt;span class="na">os_password&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#39;VMware1!&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">22&lt;/span>&lt;span class="cl">&lt;span class="na">datacenter&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#39;DC-Rennes&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">23&lt;/span>&lt;span class="cl">&lt;span class="na">cluster&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#39;Cust01&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">24&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">25&lt;/span>&lt;span class="cl">&lt;span class="k">[frontweb:vars]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">26&lt;/span>&lt;span class="cl">&lt;span class="na">network1&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#39;pg_frontweb&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">27&lt;/span>&lt;span class="cl">&lt;span class="na">network2&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#39;pg_frontweb&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">28&lt;/span>&lt;span class="cl">&lt;span class="na">gateway&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#39;10.10.107.254&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">29&lt;/span>&lt;span class="cl">&lt;span class="na">template&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#39;LinkedCloneRef_Ubuntu16.04_frontweb&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">30&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">31&lt;/span>&lt;span class="cl">&lt;span class="k">[workers:vars]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">32&lt;/span>&lt;span class="cl">&lt;span class="na">network1&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#39;pg_backend&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">33&lt;/span>&lt;span class="cl">&lt;span class="na">gateway&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#39;10.10.108.254&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">34&lt;/span>&lt;span class="cl">&lt;span class="na">template&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#39;LinkedCloneRef_Ubuntu16.04_worker&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>In the sample inventory file we have:&lt;/p>
&lt;ul>
&lt;li>A frontend and workers categories with details about hosts members (including a specific parameters for each one: the IP address): &lt;code>[frontweb]&lt;/code> + &lt;code>[workers]&lt;/code>&lt;/li>
&lt;li>An &lt;em>app01&lt;/em> category including both frontend and workers sub categories: &lt;code>[app01:children]&lt;/code>&lt;/li>
&lt;li>a group a variables used for all the &lt;em>app01&lt;/em> members: &lt;code>[app01:vars]&lt;/code>&lt;/li>
&lt;li>a group a variables used for &lt;em>frontweb&lt;/em> members&lt;/li>
&lt;li>a group a variables used for &lt;em>backend&lt;/em> members&lt;/li>
&lt;/ul>
&lt;h2 id="playbook">Playbook&lt;/h2>
&lt;p>From &lt;a href="http://docs.ansible.com/ansible/latest/playbooks.html">Ansible Docs about Playbooks&lt;/a>:&lt;/p>
&lt;blockquote>
&lt;p>Playbooks are Ansible's configuration, deployment, and orchestration language. They can describe a policy you want your remote systems to enforce, or a set of steps in a general IT process. If Ansible modules are the tools in your workshop, playbooks are your instruction manuals, and your inventory of hosts are your raw material.&lt;/p>
&lt;/blockquote>
&lt;h3 id="dynamic-input-for-some-values">Dynamic input for some values&lt;/h3>
&lt;p>To manage VM in the vCenter inventory, it's necessary to have credentials for the target. In the following playbook part, we ask user to enter credentials when running the playbook:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="ln"> 1&lt;/span>&lt;span class="cl">&lt;span class="nn">---&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 2&lt;/span>&lt;span class="cl">&lt;span class="w">&lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">Credentials for vCenter API&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 3&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">hosts&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 4&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">workers&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 5&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">frontweb&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 6&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">gather_facts&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">no&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 7&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">vars_prompt&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 8&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;vcenter_hostname_tmp&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 9&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">prompt&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;Enter vcenter hostname&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">10&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">default&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;vcsa01-rennes.lri.lcl&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">11&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;vcenter_user_tmp&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">12&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">prompt&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;Enter vcenter username&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">13&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">default&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;administrator@vsphere.local&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">14&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;vcenter_pass_tmp&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">15&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">prompt&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;Enter vcenter password&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">16&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">private&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">yes&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">17&lt;/span>&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">18&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">tasks&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">19&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">set_fact&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">20&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">vcenter_hostname&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;{{ vcenter_hostname_tmp }}&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">21&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">vcenter_user &lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;{{ vcenter_user_tmp }}&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">22&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">vcenter_pass &lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;{{ vcenter_pass_tmp }}&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>This playbook part will be applied for both &lt;em>workers&lt;/em> and &lt;em>frontweb&lt;/em> servers and we set up global facts to be used in other parts of the playbook.&lt;/p>
&lt;h3 id="clone-specification-with-vmware_guest-module">Clone specification with vmware_guest module&lt;/h3>
&lt;p>Ansible's &lt;em>vmware_guest&lt;/em> module is used to manages virtual machines in vCenter or standalone ESXi. It allows to check the presence and configuration of VM and to proceed changes according to the result: clone, reconfiguration...&lt;/p>
&lt;p>Here is a sample task based on the &lt;em>vmware_guest&lt;/em> to deploy a &lt;em>worker&lt;/em>'s VM from a linked-clone operation:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="ln"> 1&lt;/span>&lt;span class="cl">- &lt;span class="nt">hosts&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">workers&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 2&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">gather_facts&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">no&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 3&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">connection&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">local&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 4&lt;/span>&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 5&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">tasks&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 6&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">Deploy workers nodes&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 7&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">vmware_guest&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 8&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">hostname&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;{{ vcenter_hostname }}&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 9&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">username&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;{{ vcenter_user }}&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">10&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">password&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;{{ vcenter_pass }}&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">11&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;{{ inventory_hostname }}&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">12&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">datacenter&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;{{ datacenter }}&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">13&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">cluster&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;{{ cluster }}&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">14&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">state&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">poweredon&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">15&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">template&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;{{ template }}&amp;#39;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">16&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">resource_pool&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;{{ respool }}&amp;#39;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">17&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">validate_certs&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">no&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">18&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">folder&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;{{ datacenter }}/vm/{{ folder }}&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">19&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">guest_id&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;{{ guest_id }}&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">20&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">networks&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">21&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;{{ network1 }}&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">22&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">ip&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;{{ ip1 }}&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">23&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">netmask&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;{{ netmask }}&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">24&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">gateway&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;{{ gateway }}&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">25&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">device_type&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;vmxnet3&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">26&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">dns_servers&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">27&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="s2">&amp;#34;{{ dns_server }}&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">28&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">snapshot_src&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;{{ snapshot_name }}&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">29&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">linked_clone&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">yes&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">30&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">customization&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">31&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">dns_servers&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">32&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="s2">&amp;#34;{{ dns_server }}&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">33&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">domain&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;{{ dns_domain }}&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">34&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">dns_suffix&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;{{ dns_domain }}&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">35&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">password&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;{{ os_password }}&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">36&lt;/span>&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">wait_for_ip_address&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">yes&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>We do the same for the &lt;em>frontweb&lt;/em> servers with 2 network attachement. See this gist for the full playbook content : &lt;a href="https://gist.github.com/lrivallain/a2fc8443ef4433623d0add3601ab7115#file-create_linked_vms_2tiers-yml">file-create_linked_vms_2tiers-yml&lt;/a>.&lt;/p>
&lt;h1 id="run-an-ansible-playbook-on-inventory">Run an Ansible playbook on inventory&lt;/h1>
&lt;p>To run the playbook:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="ln"> 1&lt;/span>&lt;span class="cl">./bin/ansible-playbook -i sample-app01.inv create_linked_vms_2tiers.yml
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 2&lt;/span>&lt;span class="cl">Enter vcenter hostname &lt;span class="o">[&lt;/span>vcsa01-rennes.lri.lcl&lt;span class="o">]&lt;/span>:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 3&lt;/span>&lt;span class="cl">Enter vcenter username &lt;span class="o">[&lt;/span>administrator@vsphere.local&lt;span class="o">]&lt;/span>:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 4&lt;/span>&lt;span class="cl">Enter vcenter password :
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 5&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 6&lt;/span>&lt;span class="cl">PLAY &lt;span class="o">[&lt;/span>Credentials &lt;span class="k">for&lt;/span> vCenter API&lt;span class="o">]&lt;/span> *****************************************************************
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 7&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 8&lt;/span>&lt;span class="cl">TASK &lt;span class="o">[&lt;/span>set_fact&lt;span class="o">]&lt;/span> ************************************************************************************
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 9&lt;/span>&lt;span class="cl">ok: &lt;span class="o">[&lt;/span>worker01&lt;span class="o">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">10&lt;/span>&lt;span class="cl">ok: &lt;span class="o">[&lt;/span>worker02&lt;span class="o">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">11&lt;/span>&lt;span class="cl">ok: &lt;span class="o">[&lt;/span>worker03&lt;span class="o">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">12&lt;/span>&lt;span class="cl">ok: &lt;span class="o">[&lt;/span>web01&lt;span class="o">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">13&lt;/span>&lt;span class="cl">ok: &lt;span class="o">[&lt;/span>web02&lt;span class="o">]&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>In the first part of the execution, credentials are requested to continue. Then Ansible will check if inventory VM's are well &lt;code>poweredon&lt;/code> are requested in the playbook and if not, will start creation task :&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="ln"> 1&lt;/span>&lt;span class="cl">PLAY &lt;span class="o">[&lt;/span>workers&lt;span class="o">]&lt;/span> *************************************************************************************
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 2&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 3&lt;/span>&lt;span class="cl">TASK &lt;span class="o">[&lt;/span>Deploy workers nodes&lt;span class="o">]&lt;/span> ************************************************************************
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 4&lt;/span>&lt;span class="cl">changed: &lt;span class="o">[&lt;/span>worker03&lt;span class="o">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 5&lt;/span>&lt;span class="cl">changed: &lt;span class="o">[&lt;/span>worker02&lt;span class="o">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 6&lt;/span>&lt;span class="cl">changed: &lt;span class="o">[&lt;/span>worker01&lt;span class="o">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 7&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 8&lt;/span>&lt;span class="cl">PLAY &lt;span class="o">[&lt;/span>frontweb&lt;span class="o">]&lt;/span> ************************************************************************************
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 9&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">10&lt;/span>&lt;span class="cl">TASK &lt;span class="o">[&lt;/span>Deploy frontweb nodes&lt;span class="o">]&lt;/span> ***********************************************************************
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">11&lt;/span>&lt;span class="cl">changed: &lt;span class="o">[&lt;/span>web01&lt;span class="o">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">12&lt;/span>&lt;span class="cl">changed: &lt;span class="o">[&lt;/span>web02&lt;span class="o">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">13&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">14&lt;/span>&lt;span class="cl">PLAY RECAP *****************************************************************************************
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">15&lt;/span>&lt;span class="cl">web01 : &lt;span class="nv">ok&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="m">2&lt;/span> &lt;span class="nv">changed&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="m">1&lt;/span> &lt;span class="nv">unreachable&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="m">0&lt;/span> &lt;span class="nv">failed&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="m">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">16&lt;/span>&lt;span class="cl">web02 : &lt;span class="nv">ok&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="m">2&lt;/span> &lt;span class="nv">changed&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="m">1&lt;/span> &lt;span class="nv">unreachable&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="m">0&lt;/span> &lt;span class="nv">failed&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="m">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">17&lt;/span>&lt;span class="cl">worker01 : &lt;span class="nv">ok&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="m">2&lt;/span> &lt;span class="nv">changed&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="m">1&lt;/span> &lt;span class="nv">unreachable&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="m">0&lt;/span> &lt;span class="nv">failed&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="m">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">18&lt;/span>&lt;span class="cl">worker02 : &lt;span class="nv">ok&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="m">2&lt;/span> &lt;span class="nv">changed&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="m">1&lt;/span> &lt;span class="nv">unreachable&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="m">0&lt;/span> &lt;span class="nv">failed&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="m">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">19&lt;/span>&lt;span class="cl">worker03 : &lt;span class="nv">ok&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="m">2&lt;/span> &lt;span class="nv">changed&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="m">1&lt;/span> &lt;span class="nv">unreachable&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="m">0&lt;/span> &lt;span class="nv">failed&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="m">0&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="idempotency">Idempotency&lt;/h1>
&lt;blockquote>
&lt;p>Modules should be idempotent, that is, running a module multiple times in a sequence should have the same effect as running it just once. One way to achieve idempotency is to have a module check whether its desired final state has already been achieved, and if that state has been achieved, to exit without performing any actions. If all the modules a playbook uses are idempotent, then the playbook itself is likely to be idempotent, so re-running the playbook should be safe.&lt;/p>
&lt;/blockquote>
&lt;p>In our case, if VMs are already present, re-run the playbook with same settings won't produce new changes.&lt;/p>
&lt;p>By replacing the &lt;code>state: poweredon&lt;/code> by &lt;code>state: absent&lt;/code> for VMs, it's possible to unprovision the deployed infrastructure.&lt;/p>
&lt;p>In the next post(s) I will try to explain the management of vCenter and ESXi hosts configuration through ansible playbooks.&lt;/p></description></item><item><title>VMware - VCSA 6.5u0 or PSC appliance - change SCSI block timeout</title><link>https://vuptime.io/post/2017-09-04-vmware_vcsa65u0_change_scsi_block_timeout/</link><pubDate>Mon, 04 Sep 2017 00:00:00 +0000</pubDate><guid>https://vuptime.io/2017/09/04/vmware_vcsa65u0_change_scsi_block_timeout/</guid><description>
&lt;p>In a previous post, I've already talk about an issue occuring in a lab environment with vCSA 6.5u0 and PSC appliance : &lt;a href="https://vuptime.io/2017/05/10/VMware-VCSA-PSC-wont-boot/">VCSA or PSC appliance won't boot after hard shutdown&lt;/a>.&lt;/p>
&lt;p>As the issue became more regular with time, I tried to figure out the root cause of those events.&lt;/p>
&lt;p>As system's logs reports SCSI timeout on write operations, I remember myself that the default 30 seconds timeout could be insufficient in some virtualized environment. So the proposal to fix it, is the modification of timeout to a higher value.&lt;/p>
&lt;h1 id="default-appliances-settings">Default appliance's settings&lt;/h1>
&lt;p>We can display the current (default at this time) value of SCSI timeout for any block device of the system with the following command (based on &lt;code>sysfs&lt;/code>, a &lt;a href="https://en.wikipedia.org/wiki/Sysfs">pseudo file system provided by the Linux kernel&lt;/a> since version 2.6):&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="ln">1&lt;/span>&lt;span class="cl">&lt;span class="k">for&lt;/span> d in &lt;span class="sb">`&lt;/span>ls /dev/sd* &lt;span class="p">|&lt;/span> egrep &lt;span class="s2">&amp;#34;sd[a-z]&lt;/span>$&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="sb">`&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="k">do&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">2&lt;/span>&lt;span class="cl"> &lt;span class="nb">printf&lt;/span> &lt;span class="s2">&amp;#34;`basename &lt;/span>&lt;span class="nv">$d&lt;/span>&lt;span class="s2">`: &amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">3&lt;/span>&lt;span class="cl"> cat /sys/block/&lt;span class="sb">`&lt;/span>basename &lt;span class="nv">$d&lt;/span>&lt;span class="sb">`&lt;/span>/device/timeout&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">4&lt;/span>&lt;span class="cl">&lt;span class="k">done&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="ln"> 1&lt;/span>&lt;span class="cl">sda: 30
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 2&lt;/span>&lt;span class="cl">sdb: 30
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 3&lt;/span>&lt;span class="cl">sdc: 30
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 4&lt;/span>&lt;span class="cl">sdd: 30
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 5&lt;/span>&lt;span class="cl">sde: 30
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 6&lt;/span>&lt;span class="cl">sdf: 30
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 7&lt;/span>&lt;span class="cl">sdg: 30
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 8&lt;/span>&lt;span class="cl">sdh: 30
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 9&lt;/span>&lt;span class="cl">sdi: 30
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">10&lt;/span>&lt;span class="cl">sdj: 30
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">11&lt;/span>&lt;span class="cl">sdk: 30
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">12&lt;/span>&lt;span class="cl">sdl: 30
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Following command shows the same informations:&lt;/p>
&lt;p>&lt;code>find /sys/class/scsi_generic/*/device/timeout -exec grep -H . '{}' \;&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="ln"> 1&lt;/span>&lt;span class="cl">/sys/class/scsi_generic/sg0/device/timeout:30
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 2&lt;/span>&lt;span class="cl">/sys/class/scsi_generic/sg10/device/timeout:30
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 3&lt;/span>&lt;span class="cl">/sys/class/scsi_generic/sg11/device/timeout:30
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 4&lt;/span>&lt;span class="cl">/sys/class/scsi_generic/sg12/device/timeout:30
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 5&lt;/span>&lt;span class="cl">/sys/class/scsi_generic/sg1/device/timeout:30
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 6&lt;/span>&lt;span class="cl">/sys/class/scsi_generic/sg2/device/timeout:30
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 7&lt;/span>&lt;span class="cl">/sys/class/scsi_generic/sg3/device/timeout:30
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 8&lt;/span>&lt;span class="cl">/sys/class/scsi_generic/sg4/device/timeout:30
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 9&lt;/span>&lt;span class="cl">/sys/class/scsi_generic/sg5/device/timeout:30
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">10&lt;/span>&lt;span class="cl">/sys/class/scsi_generic/sg6/device/timeout:30
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">11&lt;/span>&lt;span class="cl">/sys/class/scsi_generic/sg7/device/timeout:30
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">12&lt;/span>&lt;span class="cl">/sys/class/scsi_generic/sg8/device/timeout:30
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">13&lt;/span>&lt;span class="cl">/sys/class/scsi_generic/sg9/device/timeout:30
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>As mentionned in &lt;a href="http://kb.vmware.com/kb/1009465">KB #1009465 &lt;em>Increasing the disk timeout values for a Linux 2.6 virtual machine&lt;/em>&lt;/a>, VMware tools creates a &lt;code>udev&lt;/code> rule at &lt;code>/etc/udev/rules.d/99-vmware-scsi-udev.rules&lt;/code> that sets the timeout to 180 seconds for each VMware virtual disk device and reloads the &lt;code>udev&lt;/code> rules so that it takes effect immediately. But on the Photon appliance this udev rule doesn't exists anymore :&lt;/p>
&lt;p>&lt;code>ls -l /etc/udev/rules.d/*vmware*&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="ln">1&lt;/span>&lt;span class="cl">-rw-r--r-- 1 root root 268 Sep 30 2016 /etc/udev/rules.d/99-vmware-hotplug.rules
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">2&lt;/span>&lt;span class="cl">-rw-r--r-- 1 root root 104 Oct 22 2016 /etc/udev/rules.d/99-vmware-udev.rules
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;strong>To compare only&lt;/strong>: on a &amp;quot;non-Photon based&amp;quot; Linux VM, a &lt;code>/etc/udev/rules.d/99-vmware-scsi-udev.rules&lt;/code> file exists (created by the VMware-tools installer) and contains:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="ln">1&lt;/span>&lt;span class="cl">#
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">2&lt;/span>&lt;span class="cl"># VMware SCSI devices Timeout adjustment
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">3&lt;/span>&lt;span class="cl">#
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">4&lt;/span>&lt;span class="cl"># Modify the timeout value for VMware SCSI devices so that
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">5&lt;/span>&lt;span class="cl"># in the event of a failover, we don&amp;#39;t time out.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">6&lt;/span>&lt;span class="cl"># See Bug 271286 for more information.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">7&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">8&lt;/span>&lt;span class="cl">ACTION==&amp;#34;add&amp;#34;, SUBSYSTEMS==&amp;#34;scsi&amp;#34;, ATTRS{vendor}==&amp;#34;VMware &amp;#34;, ATTRS{model}==&amp;#34;Virtual disk &amp;#34;, RUN+=&amp;#34;/bin/sh -c &amp;#39;echo 180 &amp;gt;/sys$DEVPATH/timeout&amp;#39;&amp;#34;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>So we probably need to increase the value by ourselves at each system startup : by using &lt;code>rc.local&lt;/code> file for exemple.&lt;/p>
&lt;p>&lt;a href="https://twitter.com/tsugliani">@tsugliani&lt;/a> remembers me the NetApp recommandations about disk timeout on virtualized guest OS : &lt;em>&lt;a href="https://kb.netapp.com/support/s/article/ka21A0000000k7GQAQ/what-are-the-guest-os-tunings-needed-for-a-vmware-vsphere-deployment?language=en_US">What are the guest OS tunings needed for a VMware vSphere deployment?&lt;/a>&lt;/em>&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Guest OS Typ&lt;/th>
&lt;th>Historical Guest OS Tuning for SAN&lt;/th>
&lt;th>Updated Guest OS Tuning for SAN&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;strong>Windows&lt;/strong>&lt;/td>
&lt;td>disk timeout = 190&lt;/td>
&lt;td>disk timeout = 60&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>Linux&lt;/strong>&lt;/td>
&lt;td>disk timeout = 190&lt;/td>
&lt;td>disk timeout = 60&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>Solaris&lt;/strong>&lt;/td>
&lt;td>disk timeout = 190&lt;br>busy retry = 300&lt;br>not ready retry = 300&lt;br>reset retry = 30&lt;br>max.throttle = 32&lt;br>min.throttle = 8&lt;/td>
&lt;td>disk timeout = 60&lt;br>busy retry = 300&lt;br>not ready retry = 300&lt;br>reset retry = 30&lt;br>max.throttle = 32&lt;br>min.throttle = 8&lt;br>corrected VID/PID specification&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>VMware Support team confirms that the expected value is 180 seconds as configured in &lt;strong>VCSA 6.0 build-3339084&lt;/strong>:&lt;/p>
&lt;p>&lt;code>find /sys/class/scsi_generic/*/device/timeout -exec grep -H . '{}' \;&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="ln"> 1&lt;/span>&lt;span class="cl">/sys/class/scsi_generic/sg0/device/timeout:180
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 2&lt;/span>&lt;span class="cl">/sys/class/scsi_generic/sg1/device/timeout:180
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 3&lt;/span>&lt;span class="cl">/sys/class/scsi_generic/sg10/device/timeout:180
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 4&lt;/span>&lt;span class="cl">/sys/class/scsi_generic/sg11/device/timeout:30
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 5&lt;/span>&lt;span class="cl">/sys/class/scsi_generic/sg2/device/timeout:180
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 6&lt;/span>&lt;span class="cl">/sys/class/scsi_generic/sg3/device/timeout:180
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 7&lt;/span>&lt;span class="cl">/sys/class/scsi_generic/sg4/device/timeout:180
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 8&lt;/span>&lt;span class="cl">/sys/class/scsi_generic/sg5/device/timeout:180
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 9&lt;/span>&lt;span class="cl">/sys/class/scsi_generic/sg6/device/timeout:180
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">10&lt;/span>&lt;span class="cl">/sys/class/scsi_generic/sg7/device/timeout:180
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">11&lt;/span>&lt;span class="cl">/sys/class/scsi_generic/sg8/device/timeout:180
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">12&lt;/span>&lt;span class="cl">/sys/class/scsi_generic/sg9/device/timeout:180
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="fix-scsi-timeout">Fix SCSI timeout&lt;/h1>
&lt;p>There is multiple ways to fix the SCSI timeout value:&lt;/p>
&lt;ol>
&lt;li>Upgrade to VCSA 6.5u1 (aka build 5973321)&lt;/li>
&lt;li>Manually add the udev rule&lt;/li>
&lt;li>Add a &lt;code>rc.local&lt;/code> file (not recommended)&lt;/li>
&lt;/ol>
&lt;h2 id="vcsa-upgrade-way">VCSA upgrade way&lt;/h2>
&lt;p>It's not mentionned in the &lt;a href="https://docs.vmware.com/en/VMware-vSphere/6.5/rn/vsphere-vcenter-server-651-release-notes.html#storage-issues-resolved">Relase Notes&lt;/a>, but &lt;strong>VCSA 6.5 build 5973321&lt;/strong> include a fix for the missing udev rule with openvm-tools :&lt;/p>
&lt;p>&lt;code>find /sys/class/scsi_generic/*/device/timeout -exec grep -H . '{}' \;&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="ln"> 1&lt;/span>&lt;span class="cl">/sys/class/scsi_generic/sg0/device/timeout:30
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 2&lt;/span>&lt;span class="cl">/sys/class/scsi_generic/sg10/device/timeout:180
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 3&lt;/span>&lt;span class="cl">/sys/class/scsi_generic/sg11/device/timeout:180
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 4&lt;/span>&lt;span class="cl">/sys/class/scsi_generic/sg12/device/timeout:180
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 5&lt;/span>&lt;span class="cl">/sys/class/scsi_generic/sg1/device/timeout:180
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 6&lt;/span>&lt;span class="cl">/sys/class/scsi_generic/sg2/device/timeout:180
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 7&lt;/span>&lt;span class="cl">/sys/class/scsi_generic/sg3/device/timeout:180
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 8&lt;/span>&lt;span class="cl">/sys/class/scsi_generic/sg4/device/timeout:180
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 9&lt;/span>&lt;span class="cl">/sys/class/scsi_generic/sg5/device/timeout:180
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">10&lt;/span>&lt;span class="cl">/sys/class/scsi_generic/sg6/device/timeout:180
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">11&lt;/span>&lt;span class="cl">/sys/class/scsi_generic/sg7/device/timeout:180
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">12&lt;/span>&lt;span class="cl">/sys/class/scsi_generic/sg8/device/timeout:180
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">13&lt;/span>&lt;span class="cl">/sys/class/scsi_generic/sg9/device/timeout:180
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>An upgrade is the best way to avoid this issue.&lt;/p>
&lt;h2 id="manually-add-the-udev-rule">Manually add the udev rule&lt;/h2>
&lt;p>It's possible to manually add the missing udev rule and to apply it :&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="ln">1&lt;/span>&lt;span class="cl">&lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">2&lt;/span>&lt;span class="cl">&lt;span class="s2">ACTION==\&amp;#34;add\&amp;#34;, SUBSYSTEMS==\&amp;#34;scsi\&amp;#34;, ATTRS{vendor}==\&amp;#34;VMware*\&amp;#34; , ATTRS{model}==\&amp;#34;Virtual disk*\&amp;#34;, RUN+=\&amp;#34;/bin/sh -c &amp;#39;echo 180 &amp;gt;/sys&lt;/span>&lt;span class="nv">$DEVPATH&lt;/span>&lt;span class="s2">/device/timeout&amp;#39;\&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">3&lt;/span>&lt;span class="cl">&lt;span class="s2">ACTION==\&amp;#34;add\&amp;#34;, SUBSYSTEMS==\&amp;#34;scsi\&amp;#34;, ATTRS{vendor}==\&amp;#34;VMware*\&amp;#34; , ATTRS{model}==\&amp;#34;VMware Virtual S\&amp;#34;, RUN+=\&amp;#34;/bin/sh -c &amp;#39;echo 180 &amp;gt;/sys&lt;/span>&lt;span class="nv">$DEVPATH&lt;/span>&lt;span class="s2">/device/timeout&amp;#39;\&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">4&lt;/span>&lt;span class="cl">&lt;span class="s2">&amp;#34;&lt;/span> &amp;gt; /etc/udev/rules.d/99-vmware-scsi-udev.rules
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>A &lt;strong>reboot is necessary&lt;/strong> to apply the new rule (the hot command &lt;code>udevadm control --reload-rules &amp;amp;&amp;amp; udevadm trigger&lt;/code> didn't work for me).&lt;/p>
&lt;h2 id="the-rclocal-way">The rc.local way&lt;/h2>
&lt;p>By default , there is no created rc.local file on the Photon based appliance to run simple commands at every system startup. But it's simple to find out where to create this file by displaying the systemd &lt;code>rc-local&lt;/code> service configuration:&lt;/p>
&lt;p>&lt;code>systemctl cat rc-local&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="ln"> 1&lt;/span>&lt;span class="cl"># /etc/systemd/system/rc-local.service
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 2&lt;/span>&lt;span class="cl"># This file is part of systemd.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 3&lt;/span>&lt;span class="cl">#
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 4&lt;/span>&lt;span class="cl"># systemd is free software; you can redistribute it and/or modify it
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 5&lt;/span>&lt;span class="cl"># under the terms of the GNU Lesser General Public License as published by
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 6&lt;/span>&lt;span class="cl"># the Free Software Foundation; either version 2.1 of the License, or
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 7&lt;/span>&lt;span class="cl"># (at your option) any later version.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 8&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 9&lt;/span>&lt;span class="cl"># This unit gets pulled automatically into multi-user.target by
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">10&lt;/span>&lt;span class="cl"># systemd-rc-local-generator if /etc/rc.d/rc.local is executable.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">11&lt;/span>&lt;span class="cl">[Unit]
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">12&lt;/span>&lt;span class="cl">Description=/etc/rc.d/rc.local Compatibility
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">13&lt;/span>&lt;span class="cl">ConditionFileIsExecutable=/etc/rc.d/rc.local
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">14&lt;/span>&lt;span class="cl">After=network.target
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">15&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">16&lt;/span>&lt;span class="cl">[Service]
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">17&lt;/span>&lt;span class="cl">Type=forking
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">18&lt;/span>&lt;span class="cl">ExecStart=/etc/rc.d/rc.local start
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">19&lt;/span>&lt;span class="cl">TimeoutSec=0
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">20&lt;/span>&lt;span class="cl">RemainAfterExit=yes
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>As mentionned, the &lt;code>/etc/rc.d/rc.local&lt;/code> must be created and executable. Let's do it !&lt;/p>
&lt;p>&lt;code>vi /etc/rc.d/rc.local&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="ln"> 1&lt;/span>&lt;span class="cl">&lt;span class="cp">#!/bin/sh -e
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 2&lt;/span>&lt;span class="cl">&lt;span class="cp">&lt;/span>&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 3&lt;/span>&lt;span class="cl">&lt;span class="c1"># rc.local&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 4&lt;/span>&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 5&lt;/span>&lt;span class="cl">&lt;span class="c1"># This script is executed at the end of each multiuser runlevel.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 6&lt;/span>&lt;span class="cl">&lt;span class="c1"># Make sure that the script will &amp;#34;exit 0&amp;#34; on success or any other&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 7&lt;/span>&lt;span class="cl">&lt;span class="c1"># value on error.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 8&lt;/span>&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 9&lt;/span>&lt;span class="cl">&lt;span class="c1"># In order to enable or disable this script just change the execution&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">10&lt;/span>&lt;span class="cl">&lt;span class="c1"># bits.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">11&lt;/span>&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">12&lt;/span>&lt;span class="cl">&lt;span class="c1"># By default this script does nothing.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">13&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">14&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">15&lt;/span>&lt;span class="cl">&lt;span class="c1"># Change defaut SCSI timeout on all disks&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">16&lt;/span>&lt;span class="cl">&lt;span class="k">for&lt;/span> d in &lt;span class="sb">`&lt;/span>ls /dev/sd* &lt;span class="p">|&lt;/span> egrep &lt;span class="s2">&amp;#34;sd[a-z]&lt;/span>$&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="sb">`&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">17&lt;/span>&lt;span class="cl">&lt;span class="k">do&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">18&lt;/span>&lt;span class="cl"> &lt;span class="nb">echo&lt;/span> &lt;span class="m">180&lt;/span> &amp;gt; /sys/block/&lt;span class="sb">`&lt;/span>basename &lt;span class="nv">$d&lt;/span>&lt;span class="sb">`&lt;/span>/device/timeout
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">19&lt;/span>&lt;span class="cl">&lt;span class="k">done&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">20&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">21&lt;/span>&lt;span class="cl">&lt;span class="nb">exit&lt;/span> &lt;span class="m">0&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>When saved, we change the file permission to make it executable:&lt;/p>
&lt;p>&lt;code>chmod +x /etc/rc.d/rc.local&lt;/code>&lt;/p>
&lt;p>Then we activate the &lt;code>rc-local&lt;/code> on system startup:&lt;/p>
&lt;p>&lt;code>systemctl enable rc-local&lt;/code>&lt;/p>
&lt;p>And we test it&lt;/p>
&lt;p>&lt;code>systemctl start rc-local&lt;/code>&lt;/p>
&lt;p>No restart is needed to apply the new timeout settings. At every system startup, the &lt;code>rc.local&lt;/code> file will be instantiate and the timeout value increased from 30 seconds to 180.&lt;/p>
&lt;h1 id="check-new-timeout-value">Check new timeout value&lt;/h1>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="ln">1&lt;/span>&lt;span class="cl">&lt;span class="k">for&lt;/span> d in &lt;span class="sb">`&lt;/span>ls /dev/sd* &lt;span class="p">|&lt;/span> egrep &lt;span class="s2">&amp;#34;sd[a-z]&lt;/span>$&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="sb">`&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="k">do&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">2&lt;/span>&lt;span class="cl"> &lt;span class="nb">printf&lt;/span> &lt;span class="s2">&amp;#34;`basename &lt;/span>&lt;span class="nv">$d&lt;/span>&lt;span class="s2">`: &amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">3&lt;/span>&lt;span class="cl"> cat /sys/block/&lt;span class="sb">`&lt;/span>basename &lt;span class="nv">$d&lt;/span>&lt;span class="sb">`&lt;/span>/device/timeout&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">4&lt;/span>&lt;span class="cl">&lt;span class="k">done&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="ln"> 1&lt;/span>&lt;span class="cl">sda: 180
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 2&lt;/span>&lt;span class="cl">sdb: 180
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 3&lt;/span>&lt;span class="cl">sdc: 180
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 4&lt;/span>&lt;span class="cl">sdd: 180
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 5&lt;/span>&lt;span class="cl">sde: 180
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 6&lt;/span>&lt;span class="cl">sdf: 180
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 7&lt;/span>&lt;span class="cl">sdg: 180
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 8&lt;/span>&lt;span class="cl">sdh: 180
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 9&lt;/span>&lt;span class="cl">sdi: 180
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">10&lt;/span>&lt;span class="cl">sdj: 180
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">11&lt;/span>&lt;span class="cl">sdk: 180
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">12&lt;/span>&lt;span class="cl">sdl: 180
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Each block device should now use a 180 second timeout for SCSI commands.&lt;/p></description></item><item><title>VMware - Patch the vCloud Director cacerts file</title><link>https://vuptime.io/post/2017-08-30-vmware-patch-vclouddirector-cacerts-file/</link><pubDate>Wed, 30 Aug 2017 00:00:00 +0000</pubDate><guid>https://vuptime.io/2017/08/30/VMware-Patch-vCloudDirector-cacerts-file/</guid><description>
&lt;p>When you install a VMware vCloud Director instance, it comes with an embedded JRE (&lt;em>Java Runtime Environment&lt;/em>). For example, vCloud Director includes JRE 1.8.0_121 :&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="ln">1&lt;/span>&lt;span class="cl">&lt;span class="nv">$VCLOUD_HOME&lt;/span>/jre/bin/java -version
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">2&lt;/span>&lt;span class="cl">java version &lt;span class="s2">&amp;#34;1.8.0_121&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">3&lt;/span>&lt;span class="cl">Java&lt;span class="o">(&lt;/span>TM&lt;span class="o">)&lt;/span> SE Runtime Environment &lt;span class="o">(&lt;/span>build 1.8.0_121-b13&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">4&lt;/span>&lt;span class="cl">Java HotSpot&lt;span class="o">(&lt;/span>TM&lt;span class="o">)&lt;/span> 64-Bit Server VM &lt;span class="o">(&lt;/span>build 25.121-b13, mixed mode&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>JRE includes it's own keystore for trusted SSL certificates, the &lt;code>cacerts&lt;/code> file. This file is depending on both oracle/Java and VMware/vCloud releasing and if your certification authority root certificate isn't included, you may experienced issue when trying to communicate with products securized with SSL certificates (example : &lt;a href="https://vuptime.io/2017/08/02/VMware-ExploreVCD-catalog-publishing-feature/">Catalog synchronization between two vCloud Director entities&lt;/a>).&lt;/p>
&lt;p>It's possible to find SSL related issues by looking at the &lt;code>$VCLOUD_HOME/logs/vcloud-container-debug.log&lt;/code> file where you may find errors like:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="ln">1&lt;/span>&lt;span class="cl">...
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">2&lt;/span>&lt;span class="cl">javax.net.ssl.SSLHandshakeException: sun.security.validator.ValidatorException: PKIX path building failed: sun.security.provider.certpath.SunCertPathBuilderException: unable to find valid certification path to requested target
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">3&lt;/span>&lt;span class="cl">...
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>The following post shows how to add a new trusted (root and/or intermediate) certificates to the JRE cacerts keystore.&lt;/p>
&lt;h1 id="is-you-certification-authority-already-trusted-">Is you certification authority already trusted ?&lt;/h1>
&lt;p>According to the authority that issued your certificates, get the corresponding &lt;code>crt&lt;/code> files and their sha1 fingerprint.&lt;/p>
&lt;p>For example, if you use &lt;a href="https://letsencrypt.org">Let's Encrypt&lt;/a> :&lt;/p>
&lt;p>In &lt;a href="https://letsencrypt.org/certificates/">Let's Encrypt case, you need 2 certificates&lt;/a>:&lt;/p>
&lt;ul>
&lt;li>DST Root CA X3&lt;/li>
&lt;li>Let's Encrypt Authority X3&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="ln">1&lt;/span>&lt;span class="cl">&lt;span class="c1"># get crt files&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">2&lt;/span>&lt;span class="cl">curl -s &lt;span class="s2">&amp;#34;https://pastebin.com/raw/63dQV36A&amp;#34;&lt;/span> &amp;gt; DSTRootCAX3.crt
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">3&lt;/span>&lt;span class="cl">curl -s &lt;span class="s2">&amp;#34;https://letsencrypt.org/certs/lets-encrypt-x3-cross-signed.pem.txt&amp;#34;&lt;/span> &amp;gt; LetsEncryptAuthorityX3.crt
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">4&lt;/span>&lt;span class="cl">&lt;span class="c1"># calculate fingerprint&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">5&lt;/span>&lt;span class="cl">&lt;span class="nv">intermediate&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="k">$(&lt;/span>openssl x509 -in /tmp/LetsEncryptAuthorityX3.crt -fingerprint -sha1 -noout &lt;span class="p">|&lt;/span> cut -d&lt;span class="s1">&amp;#39;=&amp;#39;&lt;/span> -f2&lt;span class="k">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">6&lt;/span>&lt;span class="cl">&lt;span class="nv">root&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="k">$(&lt;/span>openssl x509 -in /tmp/DSTRootCAX3.crt -fingerprint -sha1 -noout &lt;span class="p">|&lt;/span> cut -d&lt;span class="s1">&amp;#39;=&amp;#39;&lt;/span> -f2&lt;span class="k">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Now you have two variables &lt;code>$root&lt;/code> and &lt;code>$intermediate&lt;/code> with cert authority sha1:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="ln">1&lt;/span>&lt;span class="cl">&lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="nv">$root&lt;/span>&lt;span class="s2">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">2&lt;/span>&lt;span class="cl">&lt;span class="s2">&lt;/span>&lt;span class="nv">$intermediate&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">3&lt;/span>&lt;span class="cl">DA:C9:02:4F:54:D8:F6:DF:94:93:5F:B1:73:26:38:CA:6A:D7:7C:13
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">4&lt;/span>&lt;span class="cl">E6:A3:B4:5B:06:2D:50:9B:33:82:28:2D:19:6E:FE:97:D5:95:6C:CB
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Let's look in the keystore to check if the certificates are already trusted. For this, we use the Java &lt;code>keytool&lt;/code> script that allow to manage the Java's keystore :&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="ln">1&lt;/span>&lt;span class="cl">&lt;span class="nv">$VCLOUD_HOME&lt;/span>/jre/bin/keytool -list -keystore &lt;span class="nv">$VCLOUD_HOME&lt;/span>/jre/lib/security/cacerts -storepass changeit &lt;span class="p">|&lt;/span> grep -i -B1 &lt;span class="nv">$root&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">2&lt;/span>&lt;span class="cl">&lt;span class="nv">$VCLOUD_HOME&lt;/span>/jre/bin/keytool -list -keystore &lt;span class="nv">$VCLOUD_HOME&lt;/span>/jre/lib/security/cacerts -storepass changeit &lt;span class="p">|&lt;/span> grep -i -B1 &lt;span class="nv">$intermediate&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>If there is no result, for both commands, you should add your certification authority to the trusted ones.&lt;/p>
&lt;p>By default, the JRE keystore is &lt;em>protected&lt;/em> with a password: &lt;code>changeit&lt;/code>.&lt;/p>
&lt;blockquote>
&lt;p>&lt;strong>Note&lt;/strong> : The letsencrypt sample is purely fictional as the Root certificate &lt;code>DSTRootCAX3&lt;/code> is already included in the included JRE keystore. But for the post, we will act as it is not.&lt;/p>
&lt;/blockquote>
&lt;h1 id="update-jre-keystore">Update JRE keystore&lt;/h1>
&lt;p>So your certification authority, possible internal and self-signed, is not known from the JRE keystore and you need to communicate between your vCloud Director and product using certificates issued from this authority. Therefore an update of the trusted certificates is required.&lt;/p>
&lt;p>We still use the (&lt;em>fabulous&lt;/em>) Java &lt;code>keytool&lt;/code> script to insert new certificates to the keystore.&lt;/p>
&lt;p>These operations needs to be done on &lt;strong>each cells&lt;/strong> of your vCloud Director instance as the JRE keystore is not shared between members.&lt;/p>
&lt;h2 id="take-a-backup-of-cacerts-file">Take a backup of cacerts file&lt;/h2>
&lt;p>Take a backup of the embedded keystore, to be able to rollback if necessary (md5sum is used to quiclky check that we copy the file without error):&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="ln">1&lt;/span>&lt;span class="cl">cp -f &lt;span class="nv">$VCLOUD_HOME&lt;/span>/jre/lib/security/cacerts ~/cacerts_jre.backup
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">2&lt;/span>&lt;span class="cl">md5sum ~/cacerts_jre.backup &lt;span class="nv">$VCLOUD_HOME&lt;/span>/jre/lib/security/cacerts
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="ln">1&lt;/span>&lt;span class="cl">#2ecfd7e5a8789c3f0e68ae85a26dea23 ~/cacerts_jre.backup
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">2&lt;/span>&lt;span class="cl">#2ecfd7e5a8789c3f0e68ae85a26dea23 $VCLOUD_HOME/jre/lib/security/cacerts
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="add-the-ca-certs-to-the-keystore">Add the CA certs to the keystore&lt;/h2>
&lt;p>Time to update keystore content :&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="ln"> 1&lt;/span>&lt;span class="cl">&lt;span class="nv">$VCLOUD_HOME&lt;/span>/jre/bin/keytool &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 2&lt;/span>&lt;span class="cl">&lt;span class="se">&lt;/span> -import -trustcacerts &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 3&lt;/span>&lt;span class="cl">&lt;span class="se">&lt;/span> -alias identrustdstx3 &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 4&lt;/span>&lt;span class="cl">&lt;span class="se">&lt;/span> -file /tmp/DSTRootCAX3.crt &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 5&lt;/span>&lt;span class="cl">&lt;span class="se">&lt;/span> -keystore &lt;span class="nv">$VCLOUD_HOME&lt;/span>/jre/lib/security/cacerts &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 6&lt;/span>&lt;span class="cl">&lt;span class="se">&lt;/span> -storepass changeit
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 7&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 8&lt;/span>&lt;span class="cl">&lt;span class="nv">$VCLOUD_HOME&lt;/span>/jre/bin/keytool &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 9&lt;/span>&lt;span class="cl">&lt;span class="se">&lt;/span> -import -trustcacerts &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">10&lt;/span>&lt;span class="cl">&lt;span class="se">&lt;/span> -alias letsencryptx3 &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">11&lt;/span>&lt;span class="cl">&lt;span class="se">&lt;/span> -file /tmp/LetsEncryptAuthorityX3.crt &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">12&lt;/span>&lt;span class="cl">&lt;span class="se">&lt;/span> -keystore &lt;span class="nv">$VCLOUD_HOME&lt;/span>/jre/lib/security/cacerts &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">13&lt;/span>&lt;span class="cl">&lt;span class="se">&lt;/span> -storepass changeit
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>And we check:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="ln">1&lt;/span>&lt;span class="cl">&lt;span class="nv">$VCLOUD_HOME&lt;/span>/jre/bin/keytool -list -keystore &lt;span class="nv">$VCLOUD_HOME&lt;/span>/jre/lib/security/cacerts -storepass changeit &lt;span class="p">|&lt;/span> grep -i &lt;span class="nv">$root&lt;/span> -c
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">2&lt;/span>&lt;span class="cl">&lt;span class="m">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">3&lt;/span>&lt;span class="cl">&lt;span class="nv">$VCLOUD_HOME&lt;/span>/jre/bin/keytool -list -keystore &lt;span class="nv">$VCLOUD_HOME&lt;/span>/jre/lib/security/cacerts -storepass changeit &lt;span class="p">|&lt;/span> grep -i &lt;span class="nv">$intermediate&lt;/span> -c
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">4&lt;/span>&lt;span class="cl">&lt;span class="m">1&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>One result is found for each certificate : good.&lt;/p>
&lt;p>It's also possible to look in keystore for a specific alias entry without &lt;code>grep&lt;/code>, but depending on used alias, I consider that it's possible to miss a match (that's why I prefer to calculate the fingerprint and made a search on it):&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="ln">1&lt;/span>&lt;span class="cl">&lt;span class="nv">$VCLOUD_HOME&lt;/span>/jre/bin/keytool -list -keystore &lt;span class="nv">$VCLOUD_HOME&lt;/span>/jre/lib/security/cacerts -storepass changeit -alias &lt;span class="s2">&amp;#34;identrustdstx3&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">2&lt;/span>&lt;span class="cl">identrustdstx3, Aug 25, 2016, trustedCertEntry,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">3&lt;/span>&lt;span class="cl">Certificate fingerprint &lt;span class="o">(&lt;/span>SHA1&lt;span class="o">)&lt;/span>: DA:C9:02:4F:54:D8:F6:DF:94:93:5F:B1:73:26:38:CA:6A:D7:7C:13
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="shutdown-cell">Shutdown cell&lt;/h1>
&lt;p>Once done, each cell needs to be 'service-restarted' in order to use the new keystore:&lt;/p>
&lt;blockquote>
&lt;p>&lt;strong>Note&lt;/strong> :Do not forget to move the vCenter proxy role before restarting cells.&lt;/p>
&lt;/blockquote>
&lt;p>Quiesce the cell, to not accept new incoming job on this specific cell:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="ln">1&lt;/span>&lt;span class="cl">&lt;span class="nv">$VCLOUD_HOME&lt;/span>/bin/cell-management-tool -u administrator -p &lt;span class="s1">&amp;#39;********&amp;#39;&lt;/span> cell -quiesce &lt;span class="nb">true&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Check that there is no more running job:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="ln">1&lt;/span>&lt;span class="cl">&lt;span class="nv">$VCLOUD_HOME&lt;/span>/bin/cell-management-tool -u administrator -p &lt;span class="s1">&amp;#39;********&amp;#39;&lt;/span> cell -status
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;blockquote>
&lt;p>&lt;strong>Note:&lt;/strong> Since a couple of versions, when you use the &lt;code>quiesce true&lt;/code> command, the command is not returning prompt until there is no more job left on the cell. The status command could be considered as useless.&lt;/p>
&lt;/blockquote>
&lt;p>Shutdown services:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="ln">1&lt;/span>&lt;span class="cl">&lt;span class="nv">$VCLOUD_HOME&lt;/span>/bin/cell-management-tool -u administrator -p &lt;span class="s1">&amp;#39;********&amp;#39;&lt;/span> cell -shutdown
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Then restart services:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="ln">1&lt;/span>&lt;span class="cl">service vmware-vcd start
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Have a look on the startup of the service through the logs:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="ln">1&lt;/span>&lt;span class="cl">tail -f &lt;span class="nv">$VCLOUD_HOME&lt;/span>/logs/cell.log &lt;span class="p">|&lt;/span> grep -i &lt;span class="s2">&amp;#34;Application Initialization&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;blockquote>
&lt;p>&lt;strong>Note&lt;/strong> : A better documentation about the cell shutdown is available in &lt;a href="http://pubs.vmware.com/vcd-820/index.jsp#com.vmware.vcloud.install.doc/GUID-65C8B7B6-EC5E-4BDA-8564-56DD6671F5FE.html?resultof=%2522%2573%2568%2575%2574%2564%256f%2577%256e%2522%2520">official VMware documentation about vCD&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;p>When all cells are restarted, your issue with certificate chain should be solved.&lt;/p></description></item><item><title>VMware - Explore vCloud Director catalog publishing feature</title><link>https://vuptime.io/post/2017-08-02-vmware-explorevcd-catalog-publishing-feature/</link><pubDate>Wed, 02 Aug 2017 00:00:00 +0000</pubDate><guid>https://vuptime.io/2017/08/02/VMware-ExploreVCD-catalog-publishing-feature/</guid><description>
&lt;p>VMware introduced in version 5.5 of vCloud Director, a feature to externaly expose catalogs and if necessary, to subscribe to an externaly exposed one.&lt;/p>
&lt;p>This is useful to synchronize catalog between two (or more) vCloud Director instances.&lt;/p>
&lt;h1 id="basic-usage">Basic usage&lt;/h1>
&lt;p>The two following sections are extracts from the &lt;a href="http://pubs.vmware.com/vcd-820/index.jsp#com.vmware.vcloud.admin.doc/GUID-1A098021-07C4-44BA-AB9D-9D48FD4CA812.html">VMware documentation about VCD Catalogs&lt;/a>.&lt;/p>
&lt;h2 id="publish-a-catalog-to-an-external-organization">Publish a Catalog to an External Organization&lt;/h2>
&lt;p>You can publish a catalog externally to make its vApp templates and media files available for subscription by organizations outside the vCloud Director installation.&lt;/p>
&lt;ol>
&lt;li>Enable external catalog publishing for the organization&lt;/li>
&lt;li>Click Catalog and select My Organization's Catalogs in the left pane.&lt;/li>
&lt;li>On the Catalogs tab, right-click the catalog name and select Publish Settings.&lt;/li>
&lt;li>On the External Publishing tab, select Enabled and supply a password for the catalog feed.&lt;/li>
&lt;/ol>
&lt;p>The subscription URL is provided and can be shared with external organizations for subscription.&lt;/p>
&lt;h2 id="subscribe-to-an-external-catalog-feed">Subscribe to an External Catalog Feed&lt;/h2>
&lt;ol>
&lt;li>Click Catalogs and select My Organization's Catalogs in the left pane.&lt;/li>
&lt;li>Click Add Catalog and type a name and optional description for the catalog feed.&lt;/li>
&lt;li>Select Subscribe to an external catalog and click Next.&lt;/li>
&lt;li>Select the type of storage to use for this catalog feed and click Next.&lt;/li>
&lt;li>Add other members if necessary&lt;/li>
&lt;li>Review the catalog feed settings and click Finish.&lt;/li>
&lt;/ol>
&lt;h1 id="exploring-the-catalog-content">Exploring the catalog content&lt;/h1>
&lt;p>Previous section are describing trivial usage of Externaly shared catalogs on vCloud Director. The following will explore the catalog content and how to retrieve Metadata or data of catalog from outside a vCloud Director environment.&lt;/p>
&lt;h2 id="what-is-behind-the-shared-uri">What is behind the shared URI&lt;/h2>
&lt;p>Let see what is available through the given subscription link:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="ln">1&lt;/span>&lt;span class="cl">curl -s -u :MyPassword &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">2&lt;/span>&lt;span class="cl">&lt;span class="se">&lt;/span> https://moncloud.enfrance.net/vcsp/lib/4c8f39ca-b7ef-4bac-acf4-c377401a729d
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-json" data-lang="json">&lt;span class="line">&lt;span class="ln"> 1&lt;/span>&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 2&lt;/span>&lt;span class="cl"> &lt;span class="nt">&amp;#34;vcspVersion&amp;#34;&lt;/span> &lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;1&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 3&lt;/span>&lt;span class="cl"> &lt;span class="nt">&amp;#34;version&amp;#34;&lt;/span> &lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;3&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 4&lt;/span>&lt;span class="cl"> &lt;span class="nt">&amp;#34;id&amp;#34;&lt;/span> &lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;urn:uuid:4c8f39ca-b7ef-4bac-acf4-c377401a729d&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 5&lt;/span>&lt;span class="cl"> &lt;span class="nt">&amp;#34;name&amp;#34;&lt;/span> &lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;Catalogue France&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 6&lt;/span>&lt;span class="cl"> &lt;span class="nt">&amp;#34;description&amp;#34;&lt;/span> &lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;Catalog items from France Cloud&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 7&lt;/span>&lt;span class="cl"> &lt;span class="nt">&amp;#34;created&amp;#34;&lt;/span> &lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;2017-07-19T15:18:52.923Z&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 8&lt;/span>&lt;span class="cl"> &lt;span class="nt">&amp;#34;itemType&amp;#34;&lt;/span> &lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;vcsp.CatalogItem&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 9&lt;/span>&lt;span class="cl"> &lt;span class="nt">&amp;#34;itemsHref&amp;#34;&lt;/span> &lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;items&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">10&lt;/span>&lt;span class="cl"> &lt;span class="nt">&amp;#34;capabilities&amp;#34;&lt;/span> &lt;span class="p">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">11&lt;/span>&lt;span class="cl"> &lt;span class="nt">&amp;#34;transferIn&amp;#34;&lt;/span> &lt;span class="p">:&lt;/span> &lt;span class="p">[&lt;/span> &lt;span class="s2">&amp;#34;httpGet&amp;#34;&lt;/span> &lt;span class="p">],&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">12&lt;/span>&lt;span class="cl"> &lt;span class="nt">&amp;#34;transferOut&amp;#34;&lt;/span> &lt;span class="p">:&lt;/span> &lt;span class="p">[&lt;/span> &lt;span class="s2">&amp;#34;httpGet&amp;#34;&lt;/span> &lt;span class="p">],&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">13&lt;/span>&lt;span class="cl"> &lt;span class="nt">&amp;#34;generateIds&amp;#34;&lt;/span> &lt;span class="p">:&lt;/span> &lt;span class="kc">true&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">14&lt;/span>&lt;span class="cl"> &lt;span class="p">},&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">15&lt;/span>&lt;span class="cl"> &lt;span class="nt">&amp;#34;metadata&amp;#34;&lt;/span> &lt;span class="p">:&lt;/span> &lt;span class="p">[&lt;/span> &lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">16&lt;/span>&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;blockquote>
&lt;p>&lt;strong>Note:&lt;/strong> &lt;code>-u&lt;/code> option is used to pass authentification informations to the HTTP request header. As we do not set any user, the credentials only contains password, following the &amp;quot;:&amp;quot; separator.&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;p>&lt;strong>Note:&lt;/strong> &lt;code>-s&lt;/code> option make culr mute the progress or error messages. Remove it to see potential error for debuging.&lt;/p>
&lt;/blockquote>
&lt;p>This request give us metadata about the catalog : name, description, version... And &lt;code>itemsHref&lt;/code> give us clue to continue exploration and list the catalog items.&lt;/p>
&lt;h2 id="list-items">List items&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="ln">1&lt;/span>&lt;span class="cl">curl -s -u :MyPassword &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">2&lt;/span>&lt;span class="cl">&lt;span class="se">&lt;/span> https://moncloud.enfrance.net/vcsp/lib/4c8f39ca-b7ef-4bac-acf4-c377401a729d/items
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-json" data-lang="json">&lt;span class="line">&lt;span class="ln"> 1&lt;/span>&lt;span class="cl"> &lt;span class="s2">&amp;#34;itemType&amp;#34;&lt;/span> &lt;span class="err">:&lt;/span> &lt;span class="s2">&amp;#34;vcsp.CatalogItem&amp;#34;&lt;/span>&lt;span class="err">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 2&lt;/span>&lt;span class="cl"> &lt;span class="s2">&amp;#34;items&amp;#34;&lt;/span> &lt;span class="err">:&lt;/span> &lt;span class="p">[&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 3&lt;/span>&lt;span class="cl"> &lt;span class="nt">&amp;#34;vcspVersion&amp;#34;&lt;/span> &lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;1&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 4&lt;/span>&lt;span class="cl"> &lt;span class="nt">&amp;#34;version&amp;#34;&lt;/span> &lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;1&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 5&lt;/span>&lt;span class="cl"> &lt;span class="nt">&amp;#34;id&amp;#34;&lt;/span> &lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;urn:uuid:46713c7b-3f72-472d-bb4e-97122b99e884&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 6&lt;/span>&lt;span class="cl"> &lt;span class="nt">&amp;#34;name&amp;#34;&lt;/span> &lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;Puppet-Debian9x64&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 7&lt;/span>&lt;span class="cl"> &lt;span class="nt">&amp;#34;created&amp;#34;&lt;/span> &lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;2017-07-19T15:20:41.470Z&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 8&lt;/span>&lt;span class="cl"> &lt;span class="nt">&amp;#34;description&amp;#34;&lt;/span> &lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;Debian 9 for x64 with puppet pre-configuration&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 9&lt;/span>&lt;span class="cl"> &lt;span class="nt">&amp;#34;type&amp;#34;&lt;/span> &lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;vcsp.ovf&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">10&lt;/span>&lt;span class="cl"> &lt;span class="nt">&amp;#34;files&amp;#34;&lt;/span> &lt;span class="p">:&lt;/span> &lt;span class="p">[&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">11&lt;/span>&lt;span class="cl"> &lt;span class="nt">&amp;#34;name&amp;#34;&lt;/span> &lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;descriptor.ovf&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">12&lt;/span>&lt;span class="cl"> &lt;span class="nt">&amp;#34;etag&amp;#34;&lt;/span> &lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;95ad8688-4b1b-419f-aa34-50bcf0e5c395&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">13&lt;/span>&lt;span class="cl"> &lt;span class="nt">&amp;#34;size&amp;#34;&lt;/span> &lt;span class="p">:&lt;/span> &lt;span class="mi">12302&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">14&lt;/span>&lt;span class="cl"> &lt;span class="nt">&amp;#34;hrefs&amp;#34;&lt;/span> &lt;span class="p">:&lt;/span> &lt;span class="p">[&lt;/span> &lt;span class="s2">&amp;#34;/vcsp/lib/4c8f39ca-b7ef-4bac-acf4-c377401a729d/item/46713c7b-3f72-472d-bb4e-97122b99e884/file/descriptor.ovf&amp;#34;&lt;/span> &lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">15&lt;/span>&lt;span class="cl"> &lt;span class="p">},&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">16&lt;/span>&lt;span class="cl"> &lt;span class="nt">&amp;#34;name&amp;#34;&lt;/span> &lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;descriptor.mf&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">17&lt;/span>&lt;span class="cl"> &lt;span class="nt">&amp;#34;etag&amp;#34;&lt;/span> &lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;95ad8688-4b1b-419f-aa34-50bcf0e5c395&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">18&lt;/span>&lt;span class="cl"> &lt;span class="nt">&amp;#34;size&amp;#34;&lt;/span> &lt;span class="p">:&lt;/span> &lt;span class="mi">163&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">19&lt;/span>&lt;span class="cl"> &lt;span class="nt">&amp;#34;hrefs&amp;#34;&lt;/span> &lt;span class="p">:&lt;/span> &lt;span class="p">[&lt;/span> &lt;span class="s2">&amp;#34;/vcsp/lib/4c8f39ca-b7ef-4bac-acf4-c377401a729d/item/46713c7b-3f72-472d-bb4e-97122b99e884/file/descriptor.mf&amp;#34;&lt;/span> &lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">20&lt;/span>&lt;span class="cl"> &lt;span class="p">},&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">21&lt;/span>&lt;span class="cl"> &lt;span class="nt">&amp;#34;name&amp;#34;&lt;/span> &lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;vm-3453bb14-5093-4c6a-ac64-4f41e4380ec6-disk-0.vmdk&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">22&lt;/span>&lt;span class="cl"> &lt;span class="nt">&amp;#34;etag&amp;#34;&lt;/span> &lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;95ad8688-4b1b-419f-aa34-50bcf0e5c395&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">23&lt;/span>&lt;span class="cl"> &lt;span class="nt">&amp;#34;size&amp;#34;&lt;/span> &lt;span class="p">:&lt;/span> &lt;span class="mi">976322048&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">24&lt;/span>&lt;span class="cl"> &lt;span class="nt">&amp;#34;hrefs&amp;#34;&lt;/span> &lt;span class="p">:&lt;/span> &lt;span class="p">[&lt;/span> &lt;span class="s2">&amp;#34;/vcsp/lib/4c8f39ca-b7ef-4bac-acf4-c377401a729d/item/46713c7b-3f72-472d-bb4e-97122b99e884/file/vm-3453bb14-5093-4c6a-ac64-4f41e4380ec6-disk-0.vmdk&amp;#34;&lt;/span> &lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">25&lt;/span>&lt;span class="cl"> &lt;span class="p">}&lt;/span> &lt;span class="p">],&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">26&lt;/span>&lt;span class="cl"> &lt;span class="nt">&amp;#34;properties&amp;#34;&lt;/span> &lt;span class="p">:&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">27&lt;/span>&lt;span class="cl"> &lt;span class="p">},&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">28&lt;/span>&lt;span class="cl"> &lt;span class="nt">&amp;#34;selfHref&amp;#34;&lt;/span> &lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;/vcsp/lib/4c8f39ca-b7ef-4bac-acf4-c377401a729d/item/46713c7b-3f72-472d-bb4e-97122b99e884/&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">29&lt;/span>&lt;span class="cl"> &lt;span class="nt">&amp;#34;metadata&amp;#34;&lt;/span> &lt;span class="p">:&lt;/span> &lt;span class="p">[&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">30&lt;/span>&lt;span class="cl"> &lt;span class="nt">&amp;#34;type&amp;#34;&lt;/span> &lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;STRING&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">31&lt;/span>&lt;span class="cl"> &lt;span class="nt">&amp;#34;domain&amp;#34;&lt;/span> &lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;SYSTEM&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">32&lt;/span>&lt;span class="cl"> &lt;span class="nt">&amp;#34;key&amp;#34;&lt;/span> &lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;vapp.origin.id&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">33&lt;/span>&lt;span class="cl"> &lt;span class="nt">&amp;#34;value&amp;#34;&lt;/span> &lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;fc98dff4-3239-433d-be71-6756c11c5db8&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">34&lt;/span>&lt;span class="cl"> &lt;span class="nt">&amp;#34;visibility&amp;#34;&lt;/span> &lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;READONLY&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">35&lt;/span>&lt;span class="cl"> &lt;span class="p">},&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">36&lt;/span>&lt;span class="cl"> &lt;span class="nt">&amp;#34;type&amp;#34;&lt;/span> &lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;STRING&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">37&lt;/span>&lt;span class="cl"> &lt;span class="nt">&amp;#34;domain&amp;#34;&lt;/span> &lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;SYSTEM&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">38&lt;/span>&lt;span class="cl"> &lt;span class="nt">&amp;#34;key&amp;#34;&lt;/span> &lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;vapp.origin.name&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">39&lt;/span>&lt;span class="cl"> &lt;span class="nt">&amp;#34;value&amp;#34;&lt;/span> &lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;Puppet-Debian9x64&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">40&lt;/span>&lt;span class="cl"> &lt;span class="nt">&amp;#34;visibility&amp;#34;&lt;/span> &lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;READONLY&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">41&lt;/span>&lt;span class="cl"> &lt;span class="p">},&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">42&lt;/span>&lt;span class="cl"> &lt;span class="nt">&amp;#34;type&amp;#34;&lt;/span> &lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;STRING&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">43&lt;/span>&lt;span class="cl"> &lt;span class="nt">&amp;#34;domain&amp;#34;&lt;/span> &lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;SYSTEM&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">44&lt;/span>&lt;span class="cl"> &lt;span class="nt">&amp;#34;key&amp;#34;&lt;/span> &lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;vapp.origin.type&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">45&lt;/span>&lt;span class="cl"> &lt;span class="nt">&amp;#34;value&amp;#34;&lt;/span> &lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;com.vmware.vcloud.entity.vapptemplate&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">46&lt;/span>&lt;span class="cl"> &lt;span class="nt">&amp;#34;visibility&amp;#34;&lt;/span> &lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;READONLY&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">47&lt;/span>&lt;span class="cl"> &lt;span class="p">}&lt;/span> &lt;span class="p">],&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">48&lt;/span>&lt;span class="cl"> &lt;span class="nt">&amp;#34;vms&amp;#34;&lt;/span> &lt;span class="p">:&lt;/span> &lt;span class="p">[&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">49&lt;/span>&lt;span class="cl"> &lt;span class="nt">&amp;#34;name&amp;#34;&lt;/span> &lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;puppet-debian9x64&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">50&lt;/span>&lt;span class="cl"> &lt;span class="nt">&amp;#34;metadata&amp;#34;&lt;/span> &lt;span class="p">:&lt;/span> &lt;span class="p">[&lt;/span> &lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">51&lt;/span>&lt;span class="cl"> &lt;span class="p">}&lt;/span> &lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">52&lt;/span>&lt;span class="cl"> &lt;span class="p">}&lt;/span> &lt;span class="p">]&lt;/span>&lt;span class="err">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">53&lt;/span>&lt;span class="cl"> &lt;span class="s2">&amp;#34;version&amp;#34;&lt;/span> &lt;span class="err">:&lt;/span> &lt;span class="s2">&amp;#34;3&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">54&lt;/span>&lt;span class="cl">&lt;span class="err">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>This part of the catalog is much more interesting as it shows us informations about its content. There are also pointer to download the files corresponding to the catalog's files, including vAPP.&lt;/p>
&lt;h2 id="download-files-from-catalog">Download files from catalog&lt;/h2>
&lt;p>So if we need to download the OVF file (for example):&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="ln">1&lt;/span>&lt;span class="cl">curl -s -i -u :MyPassword &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">2&lt;/span>&lt;span class="cl">&lt;span class="se">&lt;/span> https://moncloud.enfrance.net/vcsp/lib/4c8f39ca-b7ef-4bac-acf4-c377401a729d/item/83f573cd-e5ab-442e-a585-53b6e2c5e820/file/descriptor.ovf
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">3&lt;/span>&lt;span class="cl">HTTP/1.1 &lt;span class="m">302&lt;/span> Found
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">4&lt;/span>&lt;span class="cl">Date: Tue, &lt;span class="m">01&lt;/span> Aug &lt;span class="m">2017&lt;/span> 14:37:22 GMT
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">5&lt;/span>&lt;span class="cl">X-VMWARE-VCLOUD-REQUEST-ID: &lt;span class="m">000000000000000000000000000000000000001&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">6&lt;/span>&lt;span class="cl">Content-Language: en-US
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">7&lt;/span>&lt;span class="cl">Location: https://moncloud.enfrance.net/transfer/0474fbe8-5ebe-4d69-ae27-790fae40c9d9/descriptor.ovf
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">8&lt;/span>&lt;span class="cl">Content-Length: &lt;span class="m">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">9&lt;/span>&lt;span class="cl">...
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;blockquote>
&lt;p>&lt;strong>Note:&lt;/strong> &lt;code>-i&lt;/code> option is used to include the HTTP response headers in the output.&lt;/p>
&lt;/blockquote>
&lt;p>Oups, it's a &lt;code>302&lt;/code> redirect so we need to follow redirect. 2 choices:&lt;/p>
&lt;ul>
&lt;li>You adapt the request with the &lt;code>Location&lt;/code> path from the HTTP response header&lt;/li>
&lt;li>You add &lt;code>-L&lt;/code> option to curl to follow redirects&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="ln">1&lt;/span>&lt;span class="cl">curl -s -L -u :MyPassword &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">2&lt;/span>&lt;span class="cl">&lt;span class="se">&lt;/span> https://moncloud.enfrance.net/vcsp/lib/4c8f39ca-b7ef-4bac-acf4-c377401a729d/item/83f573cd-e5ab-442e-a585-53b6e2c5e820/file/descriptor.ovf &amp;gt; myVapp/descriptor.ovf
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;blockquote>
&lt;p>&lt;strong>Note:&lt;/strong> &lt;code>-L&lt;/code> option is used to make curl follow a redirect.&lt;/p>
&lt;/blockquote>
&lt;p>And you can proceed similarly for the other files for each VM of the vApp:&lt;/p>
&lt;ul>
&lt;li>descriptor.mf&lt;/li>
&lt;li>disk-*.vmdk&lt;/li>
&lt;/ul>
&lt;p>Now you can explore VCD externaly published catalogs, from outside of a vCloud Director user interface. As it's possible to download catalog content, it's possible to imagine synchronization of the catalog on other product as a raw vCenter+vSphere environment.&lt;/p></description></item><item><title>VMware - VCSA or PSC appliance won't boot after hard shutdown</title><link>https://vuptime.io/post/2017-05-10-vmware-vcsa-psc-wont-boot/</link><pubDate>Wed, 10 May 2017 00:00:00 +0000</pubDate><guid>https://vuptime.io/2017/05/10/VMware-VCSA-PSC-wont-boot/</guid><description>
&lt;p>I started using the VMware &lt;em>Photon&lt;/em> based appliances to deploy vCenter services (VCSA) and PSC with the 6.5 version several months ago.&lt;/p>
&lt;p>It's really stable and I appreciate to use it daily and to replace the windows based services with the appliance ones. But a couple of days ago, I had a bad suprise in a lab environment where 2 PSC instances were unable to boot after a hard power-off.&lt;/p>
&lt;p>Here is a screenshot of the PSC console during the boot sequence:&lt;/p>
&lt;figure>&lt;img src="https://vuptime.io/images/psc-wont-boot-1.png"/>&lt;figcaption>
&lt;h4>PSC console during the boot sequence&lt;/h4>
&lt;/figcaption>
&lt;/figure>
&lt;p>When logging with root credentials, I wasn't able to start services (as network) but I was able to manually set an IP address to the ethernet interface.&lt;/p>
&lt;p>It tooks me quite a lot of time, searching in logs, to find out the root cause:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="ln">1&lt;/span>&lt;span class="cl">journalctl -xb
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;figure>&lt;img src="https://vuptime.io/images/psc-wont-boot-2.png"/>&lt;figcaption>
&lt;h4>The root cause&lt;/h4>
&lt;/figcaption>
&lt;/figure>
&lt;p>&lt;code>/dev/mapper/log_vg-log&lt;/code> partition was in error during the boot filesystem check.&lt;/p>
&lt;p>To fix it quickly (and dirty):&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="ln">1&lt;/span>&lt;span class="cl">fsck.ext4 /dev/mapper/log_vg-log -y
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>The &lt;code>-y&lt;/code> option is set to accept the default error fixing suggested by the fsck.ext4 tool.&lt;/p>
&lt;p>From that point, a simple reboot was necessary to get back the lab service up.&lt;/p></description></item><item><title>VMware - PowerCLI 6.5.1 Cheat Sheet</title><link>https://vuptime.io/post/2017-05-05-vmware-powercli-cheatsheet/</link><pubDate>Fri, 05 May 2017 00:00:00 +0000</pubDate><guid>https://vuptime.io/2017/05/05/VMware-PowerCLI-cheatsheet/</guid><description>
&lt;p>&lt;a href="http://rennes.groupe-sii.com/fr">SII Ouest&lt;/a> VMware team has published a PowerCli Cheatsheet with most common commands
of the VMware PowerShell SDK to manage vSphere environments.&lt;/p>
&lt;p>The cheat sheet is open-sourced and published in the SII Group &lt;a href="https://github.com/groupe-sii/cheat-sheets">GitHub page&lt;/a>.&lt;/p>
&lt;p>Online html version is available in the following page : &lt;a href="https://groupe-sii.github.io/cheat-sheets/powercli/index.html">cheat-sheets/powercli&lt;/a>&lt;/p>
&lt;p>Printable PDF can be download here: &lt;a href="https://vuptime.io/images/powercli-cheatsheet.pdf">PDF&lt;/a>&lt;/p>
&lt;p>Feel free to suggest or commit modification in the repository to enhance those 2 pages.&lt;/p></description></item><item><title>VMware - Dive into OVF properties</title><link>https://vuptime.io/post/2017-03-06-vmware-dive-into-ovf-properties/</link><pubDate>Mon, 06 Mar 2017 00:00:00 +0000</pubDate><guid>https://vuptime.io/2017/03/06/vmware-dive-into-ovf-properties/</guid><description>
&lt;p>In order to fully configure a virtual machine after a clone of OVF deployment, it may be useful to use settings from virtualization layer in the guest OS: for example to run &lt;a href="https://vuptime.io/2014/08/15/vmware-use-guestinfo-variables-to-customize-guest-os">Guest OS customization&lt;/a> as already discussed in this blog.&lt;/p>
&lt;p>Today, we will focus on OVF properties.&lt;/p>
&lt;h1 id="presentation-of-ovf-properties">Presentation of OVF properties&lt;/h1>
&lt;p>If you deploy some VM through OVF/OVA files, you are probably already familiar with OVF settings. They appear as the possibility to customize VM settings during the deployment process:&lt;/p>
&lt;figure>&lt;img src="https://vuptime.io/images/dive_into_ovf/ovf_properties_deploy.png"/>&lt;figcaption>
&lt;h4>OVF properties deploy&lt;/h4>
&lt;/figcaption>
&lt;/figure>
&lt;p>Typical OVF properties include: Network settings (IP address, netmask, gateway...), users configuration (username, password). As properties are not restrictives, it is possible to create custom keys to manage any other kind of customization.&lt;/p>
&lt;p>OVF properties are a part of the full OVF environment encapsulating a VM deployment process and to use it inside of a VM, some scripting is necessary.&lt;/p>
&lt;h2 id="representation-of-ovf-properties">Representation of OVF properties&lt;/h2>
&lt;p>XML representation of an OVF environment configuration can be retrieved in a guest OS by 2 ways:&lt;/p>
&lt;ul>
&lt;li>As a CD-ROM drive containing the XML document&lt;/li>
&lt;li>VMware Tools in the &lt;code>guestinfo.ovfEnv&lt;/code> variable&lt;/li>
&lt;/ul>
&lt;p>Here is an example of OVF environment of a VM with customized properties:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-xml" data-lang="xml">&lt;span class="line">&lt;span class="ln"> 1&lt;/span>&lt;span class="cl">&lt;span class="cp">&amp;lt;?xml version=&amp;#34;1.0&amp;#34; encoding=&amp;#34;UTF-8&amp;#34;?&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 2&lt;/span>&lt;span class="cl">&lt;span class="nt">&amp;lt;Environment&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 3&lt;/span>&lt;span class="cl"> &lt;span class="na">xmlns=&lt;/span>&lt;span class="s">&amp;#34;http://schemas.dmtf.org/ovf/environment/1&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 4&lt;/span>&lt;span class="cl"> &lt;span class="na">xmlns:xsi=&lt;/span>&lt;span class="s">&amp;#34;http://www.w3.org/2001/XMLSchema-instance&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 5&lt;/span>&lt;span class="cl"> &lt;span class="na">xmlns:oe=&lt;/span>&lt;span class="s">&amp;#34;http://schemas.dmtf.org/ovf/environment/1&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 6&lt;/span>&lt;span class="cl"> &lt;span class="na">xmlns:ve=&lt;/span>&lt;span class="s">&amp;#34;http://www.vmware.com/schema/ovfenv&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 7&lt;/span>&lt;span class="cl"> &lt;span class="na">oe:id=&lt;/span>&lt;span class="s">&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 8&lt;/span>&lt;span class="cl"> &lt;span class="na">ve:vCenterId=&lt;/span>&lt;span class="s">&amp;#34;vm-94765&amp;#34;&lt;/span>&lt;span class="nt">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 9&lt;/span>&lt;span class="cl"> &lt;span class="nt">&amp;lt;PlatformSection&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">10&lt;/span>&lt;span class="cl"> &lt;span class="nt">&amp;lt;Kind&amp;gt;&lt;/span>VMware ESXi&lt;span class="nt">&amp;lt;/Kind&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">11&lt;/span>&lt;span class="cl"> &lt;span class="nt">&amp;lt;Version&amp;gt;&lt;/span>6.0.0&lt;span class="nt">&amp;lt;/Version&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">12&lt;/span>&lt;span class="cl"> &lt;span class="nt">&amp;lt;Vendor&amp;gt;&lt;/span>VMware, Inc.&lt;span class="nt">&amp;lt;/Vendor&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">13&lt;/span>&lt;span class="cl"> &lt;span class="nt">&amp;lt;Locale&amp;gt;&lt;/span>en_US&lt;span class="nt">&amp;lt;/Locale&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">14&lt;/span>&lt;span class="cl"> &lt;span class="nt">&amp;lt;/PlatformSection&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">15&lt;/span>&lt;span class="cl"> &lt;span class="nt">&amp;lt;PropertySection&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">16&lt;/span>&lt;span class="cl"> &lt;span class="nt">&amp;lt;Property&lt;/span> &lt;span class="na">oe:key=&lt;/span>&lt;span class="s">&amp;#34;dns_servers&amp;#34;&lt;/span> &lt;span class="na">oe:value=&lt;/span>&lt;span class="s">&amp;#34;10.11.12.,10.11.12.2&amp;#34;&lt;/span>&lt;span class="nt">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">17&lt;/span>&lt;span class="cl"> &lt;span class="nt">&amp;lt;Property&lt;/span> &lt;span class="na">oe:key=&lt;/span>&lt;span class="s">&amp;#34;gateway&amp;#34;&lt;/span> &lt;span class="na">oe:value=&lt;/span>&lt;span class="s">&amp;#34;10.11.12.254&amp;#34;&lt;/span>&lt;span class="nt">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">18&lt;/span>&lt;span class="cl"> &lt;span class="nt">&amp;lt;Property&lt;/span> &lt;span class="na">oe:key=&lt;/span>&lt;span class="s">&amp;#34;ip_address&amp;#34;&lt;/span> &lt;span class="na">oe:value=&lt;/span>&lt;span class="s">&amp;#34;10.11.12.13&amp;#34;&lt;/span>&lt;span class="nt">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">19&lt;/span>&lt;span class="cl"> &lt;span class="nt">&amp;lt;Property&lt;/span> &lt;span class="na">oe:key=&lt;/span>&lt;span class="s">&amp;#34;netmask&amp;#34;&lt;/span> &lt;span class="na">oe:value=&lt;/span>&lt;span class="s">&amp;#34;255.255.255.0&amp;#34;&lt;/span>&lt;span class="nt">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">20&lt;/span>&lt;span class="cl"> &lt;span class="nt">&amp;lt;Property&lt;/span> &lt;span class="na">oe:key=&lt;/span>&lt;span class="s">&amp;#34;hostname&amp;#34;&lt;/span> &lt;span class="na">oe:value=&lt;/span>&lt;span class="s">&amp;#34;myvmame&amp;#34;&lt;/span>&lt;span class="nt">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">21&lt;/span>&lt;span class="cl"> &lt;span class="nt">&amp;lt;Property&lt;/span> &lt;span class="na">oe:key=&lt;/span>&lt;span class="s">&amp;#34;root_password&amp;#34;&lt;/span> &lt;span class="na">oe:value=&lt;/span>&lt;span class="s">&amp;#34;somepassword&amp;#34;&lt;/span>&lt;span class="nt">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">22&lt;/span>&lt;span class="cl"> &lt;span class="nt">&amp;lt;Property&lt;/span> &lt;span class="na">oe:key=&lt;/span>&lt;span class="s">&amp;#34;search_domain&amp;#34;&lt;/span> &lt;span class="na">oe:value=&lt;/span>&lt;span class="s">&amp;#34;lri.ovh&amp;#34;&lt;/span>&lt;span class="nt">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">23&lt;/span>&lt;span class="cl"> &lt;span class="nt">&amp;lt;/PropertySection&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">24&lt;/span>&lt;span class="cl"> &lt;span class="nt">&amp;lt;ve:EthernetAdapterSection&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">25&lt;/span>&lt;span class="cl"> &lt;span class="nt">&amp;lt;ve:Adapter&lt;/span> &lt;span class="na">ve:mac=&lt;/span>&lt;span class="s">&amp;#34;00:50:56:99:c0:4c&amp;#34;&lt;/span> &lt;span class="na">ve:network=&lt;/span>&lt;span class="s">&amp;#34;NestedLabs&amp;#34;&lt;/span> &lt;span class="na">ve:unitNumber=&lt;/span>&lt;span class="s">&amp;#34;7&amp;#34;&lt;/span>&lt;span class="nt">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">26&lt;/span>&lt;span class="cl"> &lt;span class="nt">&amp;lt;/ve:EthernetAdapterSection&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">27&lt;/span>&lt;span class="cl">&lt;span class="nt">&amp;lt;/Environment&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;code>PropertySection&lt;/code> contains the list of OVF properties that can be used to customize a guest OS.&lt;/p>
&lt;h1 id="create-new-properties">Create new properties&lt;/h1>
&lt;p>When you create a new template for OVF export, it is possible to create/edit/delete custom OVF properties.&lt;/p>
&lt;p>From vSphere Web client -&amp;gt; Edit Settings of a VM -&amp;gt; vApp Options: In Authoring section, it is possible to give a name/version/url to describe your future OVF and to manage properties:&lt;/p>
&lt;figure>&lt;img src="https://vuptime.io/images/dive_into_ovf/ovf_properties_edition.png"/>&lt;figcaption>
&lt;h4>OVF properties edition&lt;/h4>
&lt;/figcaption>
&lt;/figure>
&lt;p>In the edition/creation wizard, the most useful fields are:&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Label&lt;/strong>: How is named the parameter when user is prompted to fill its value&lt;/li>
&lt;li>&lt;strong>KeyID&lt;/strong>: How is named the parameter in the XML file&lt;/li>
&lt;li>&lt;strong>Category&lt;/strong>: a way to order parts of the customization form fields by grouping properties together&lt;/li>
&lt;li>&lt;strong>Description&lt;/strong>: to give more information about the purpose of the field to end users&lt;/li>
&lt;/ul>
&lt;figure>&lt;img src="https://vuptime.io/images/dive_into_ovf/ovf_properties_fields.png"/>&lt;figcaption>
&lt;h4>OVF properties fields&lt;/h4>
&lt;/figcaption>
&lt;/figure>
&lt;p>It is possible to choose between 2 types of properties:&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Static propertie&lt;/strong>: Values will be configured by user or will be fixed by the default ones.&lt;/li>
&lt;li>&lt;strong>Dynamic propertie&lt;/strong>: Values will be set according to the virtualization layer information (ex: getting IP from an IP Pool attached to a PortGroup.)&lt;/li>
&lt;/ul>
&lt;p>Then you can choose between sub-types:&lt;/p>
&lt;ul>
&lt;li>String&lt;/li>
&lt;li>Password&lt;/li>
&lt;li>Integer&lt;/li>
&lt;li>Real&lt;/li>
&lt;li>Boolean&lt;/li>
&lt;li>(external) IP address&lt;/li>
&lt;li>...&lt;/li>
&lt;/ul>
&lt;figure>&lt;img src="https://vuptime.io/images/dive_into_ovf/ovf_properties_subtypes.png"/>&lt;figcaption>
&lt;h4>OVF properties sub-types&lt;/h4>
&lt;/figcaption>
&lt;/figure>
&lt;p>You can also set default value, or some requirements (like the minimal/maximal length of a string):&lt;/p>
&lt;figure>&lt;img src="https://vuptime.io/images/dive_into_ovf/ovf_properties_options.png"/>&lt;figcaption>
&lt;h4>OVF properties options&lt;/h4>
&lt;/figcaption>
&lt;/figure>
&lt;h1 id="edit-vm-properties-values">Edit VM properties values&lt;/h1>
&lt;p>As we saw previously, a user deploying an OVF coming from export of VM where properties are set, will be prompted to fill the values of the properties.&lt;/p>
&lt;p>it is also possible to edit properties values of an already deployed VM: From vSphere Web client -&amp;gt; Edit Settings of a VM -&amp;gt; vApp Options.&lt;/p>
&lt;figure>&lt;img src="https://vuptime.io/images/dive_into_ovf/ovf_values_edition.png"/>&lt;figcaption>
&lt;h4>OVF properties values edition on VM&lt;/h4>
&lt;/figcaption>
&lt;/figure>
&lt;p>In this case, you may have to run 'again' some GuestOS glue code to take the change into account.&lt;/p>
&lt;h1 id="get-ovf-properties-from-the-guestos">Get OVF properties from the guestOS&lt;/h1>
&lt;p>When you configure an OVF environment, you can choose between CD-ROM and VMware-tools methods to transport information into the virtual machine:&lt;/p>
&lt;figure>&lt;img src="https://vuptime.io/images/dive_into_ovf/ovf_transport_method.png"/>&lt;figcaption>
&lt;h4>OVF transport method&lt;/h4>
&lt;/figcaption>
&lt;/figure>
&lt;h2 id="vmware-tools">VMware tools&lt;/h2>
&lt;p>If you choose &lt;code>VMware tools&lt;/code> transport method for OVF environment, according to the used OS type, the method to retrieve properties can vary a bit. Here are two samples to get the XML representation.&lt;/p>
&lt;p>On &lt;strong>Windows&lt;/strong>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="ln">1&lt;/span>&lt;span class="cl">&lt;span class="s2">&amp;#34;C:\Program Files\VMware\VMware Tools\VMwareService.exe&amp;#34;&lt;/span> -cmd &lt;span class="s2">&amp;#34;info-get guestinfo.ovfEnv&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>On &lt;strong>Linux&lt;/strong>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="ln">1&lt;/span>&lt;span class="cl">/usr/bin/vmtoolsd --cmd &lt;span class="s1">&amp;#39;info-get guestinfo.ovfEnv&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="iso-image">ISO image&lt;/h2>
&lt;p>If you choose &lt;code>ISO image&lt;/code> transport method for OVF environment, you need to :&lt;/p>
&lt;ol>
&lt;li>mount the CD-ROM drive to your guest OS&lt;/li>
&lt;li>read the &lt;code>ovf-env.xml&lt;/code> file&lt;/li>
&lt;/ol>
&lt;h2 id="properties-usage">Properties usage&lt;/h2>
&lt;p>Here is a very simple Python helper to deal with the XML blob from OVF environment to export properties:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="ln"> 1&lt;/span>&lt;span class="cl">&lt;span class="ch">#!/usr/bin/env python&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 2&lt;/span>&lt;span class="cl">&lt;span class="c1"># -*- coding: utf-8 -*-&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 3&lt;/span>&lt;span class="cl">&lt;span class="s2">&amp;#34;&amp;#34;&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 4&lt;/span>&lt;span class="cl">&lt;span class="s2"> This script retrieves information from guestInfo.ovfEnv and
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 5&lt;/span>&lt;span class="cl">&lt;span class="s2"> print the OVF properties.
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 6&lt;/span>&lt;span class="cl">&lt;span class="s2">&amp;#34;&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 7&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 8&lt;/span>&lt;span class="cl">&lt;span class="kn">import&lt;/span> &lt;span class="nn">subprocess&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 9&lt;/span>&lt;span class="cl">&lt;span class="kn">from&lt;/span> &lt;span class="nn">xml.dom.minidom&lt;/span> &lt;span class="kn">import&lt;/span> &lt;span class="n">parseString&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">10&lt;/span>&lt;span class="cl">&lt;span class="kn">from&lt;/span> &lt;span class="nn">pprint&lt;/span> &lt;span class="kn">import&lt;/span> &lt;span class="n">pprint&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">11&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">12&lt;/span>&lt;span class="cl">&lt;span class="n">ovfenv_cmd&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;/usr/bin/vmtoolsd --cmd &amp;#39;info-get guestinfo.ovfEnv&amp;#39;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">13&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">14&lt;/span>&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">get_ovf_properties&lt;/span>&lt;span class="p">():&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">15&lt;/span>&lt;span class="cl"> &lt;span class="s2">&amp;#34;&amp;#34;&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">16&lt;/span>&lt;span class="cl">&lt;span class="s2"> Return a dict of OVF properties in the ovfenv
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">17&lt;/span>&lt;span class="cl">&lt;span class="s2"> &amp;#34;&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">18&lt;/span>&lt;span class="cl"> &lt;span class="n">properties&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">19&lt;/span>&lt;span class="cl"> &lt;span class="n">xml_parts&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">subprocess&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Popen&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">ovfenv_cmd&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">shell&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="kc">True&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">20&lt;/span>&lt;span class="cl"> &lt;span class="n">stdout&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">subprocess&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">PIPE&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">stdout&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">read&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">21&lt;/span>&lt;span class="cl"> &lt;span class="n">raw_data&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">parseString&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">xml_parts&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">22&lt;/span>&lt;span class="cl"> &lt;span class="k">for&lt;/span> &lt;span class="nb">property&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="n">raw_data&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">getElementsByTagName&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;Property&amp;#39;&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">23&lt;/span>&lt;span class="cl"> &lt;span class="n">key&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">value&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[&lt;/span> &lt;span class="nb">property&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">attributes&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s1">&amp;#39;oe:key&amp;#39;&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">value&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">24&lt;/span>&lt;span class="cl"> &lt;span class="nb">property&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">attributes&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s1">&amp;#39;oe:value&amp;#39;&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">value&lt;/span> &lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">25&lt;/span>&lt;span class="cl"> &lt;span class="n">properties&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">key&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">value&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">26&lt;/span>&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">properties&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">27&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">28&lt;/span>&lt;span class="cl">&lt;span class="n">properties&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">get_ovf_properties&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">29&lt;/span>&lt;span class="cl">&lt;span class="n">pprint&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">properties&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">indent&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">width&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">80&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>From here, it is pretty simple to customize the guest OS. For example, to change the root password based on &lt;code>root_password&lt;/code> properties:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="ln"> 1&lt;/span>&lt;span class="cl">&lt;span class="n">chpasswd_cmd&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;/usr/sbin/chpasswd&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 2&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 3&lt;/span>&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">change_linux_password&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">user&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">new_password&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 4&lt;/span>&lt;span class="cl"> &lt;span class="s2">&amp;#34;&amp;#34;&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 5&lt;/span>&lt;span class="cl">&lt;span class="s2"> Change linux password for a user
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 6&lt;/span>&lt;span class="cl">&lt;span class="s2"> &amp;#34;&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 7&lt;/span>&lt;span class="cl"> &lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;Setting new password for &lt;/span>&lt;span class="si">%s&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span> &lt;span class="o">%&lt;/span> &lt;span class="n">user&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 8&lt;/span>&lt;span class="cl"> &lt;span class="n">sp&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">subprocess&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Popen&lt;/span>&lt;span class="p">([&lt;/span>&lt;span class="n">chpasswd_cmd&lt;/span>&lt;span class="p">],&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln"> 9&lt;/span>&lt;span class="cl"> &lt;span class="n">stderr&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">subprocess&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">PIPE&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">stdin&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">subprocess&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">PIPE&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">10&lt;/span>&lt;span class="cl"> &lt;span class="n">sp&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">communicate&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">input&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;&lt;/span>&lt;span class="si">%s&lt;/span>&lt;span class="s1">:&lt;/span>&lt;span class="si">%s&lt;/span>&lt;span class="s1">&amp;#39;&lt;/span> &lt;span class="o">%&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">user&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">new_password&lt;/span>&lt;span class="p">))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">11&lt;/span>&lt;span class="cl"> &lt;span class="n">sp&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">wait&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">12&lt;/span>&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="n">sp&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">returncode&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">13&lt;/span>&lt;span class="cl"> &lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;Failed to set new password for &lt;/span>&lt;span class="si">%s&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span> &lt;span class="o">%&lt;/span> &lt;span class="n">user&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">14&lt;/span>&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">15&lt;/span>&lt;span class="cl">&lt;span class="n">change_linux_password&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;root&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">properties&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s1">&amp;#39;root_password&amp;#39;&lt;/span>&lt;span class="p">])&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="conclusion">Conclusion&lt;/h1>
&lt;p>Now you are ready to produce OVF appliances with customization on deployment. This can be very useful to easily script the deployment of many VM instances or to provide a 'ready-to-deploy' appliances to customers.&lt;/p>
&lt;p>Full script for the customization of the guestOS can be found here: &lt;a href="https://gist.github.com/lrivallain/77d9dda42bf77ddce1fc3bf2ee69e37a">get-ovfenv.py&lt;/a>&lt;/p></description></item><item><title>Play with VM snapshots and linked-clones with ESXi command line tools</title><link>https://vuptime.io/post/2015-02-26-play-vm-snapshots-esxi-command-line-tools/</link><pubDate>Thu, 26 Feb 2015 00:00:00 +0000</pubDate><guid>https://vuptime.io/2015/02/26/play-vm-snapshots-esxi-command-line-tools/</guid><description>
&lt;p>In this article, we will see how to create, commit, revert-to virtual machine snapshots from ESXi command line. We will also talk about the very useful &amp;quot;linked clones&amp;quot; that are related to the snapshot feature.&lt;/p>
&lt;h1 id="prerequisites">Prerequisites&lt;/h1>
&lt;p>You only need to have a running VM on the ESXi and to know its Vmid:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="ln">1&lt;/span>&lt;span class="cl"> $ vim-cmd vmsvc/getallvms
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">2&lt;/span>&lt;span class="cl"> Vmid Name File Guest OS Version Annotation
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="ln">3&lt;/span>&lt;span class="cl"> &lt;span class="m">3&lt;/span> CentosTest &lt;span class="o">[&lt;/span>LocalDatastore_001&lt;span class="o">]&lt;/span> CentosTest/CentosTest.vmx otherLinuxGuest vmx-10&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;h1 id="snapshots">Snapshots&lt;/h1>
&lt;p>Here is the VMware definition of VM snapshot feature (&lt;a href="https://www.vmware.com/support/ws4/doc/preserve_snapshot_ws.html" title="Snapshot definition">source&lt;/a>):&lt;/p>
&lt;blockquote>
&lt;p>The snapshot feature is most useful when you want to preserve the state of the virtual machine so you can return to the same state repeatedly.&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;p>You can take a snapshot of a virtual machine at any time and revert to that snapshot at any time.&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;p>You can take a snapshot while a virtual machine is powered on, powered off or suspended. A snapshot preserves the virtual machine just as it was when you took the snapshot - the state of the data on all the virtual machine's disks and whether the virtual machine was powered on, powered off or suspended.&lt;/p>
&lt;/blockquote>
&lt;h2 id="create-snapshots">Create snapshots&lt;/h2>
&lt;p>To create a snapshot, you can use the 'vim-cmd' command:&lt;/p>
&lt;pre>&lt;code>$ vim-cmd vmsvc/snapshot.create 3 snap01 'snap01 description'
&lt;/code>&lt;/pre>
&lt;p>Command usage is:&lt;/p>
&lt;blockquote>
&lt;p>Usage: snapshot.create vmid [snapshotName] [snapshotDescription] [includeMemory] [quiesced]&lt;/p>
&lt;/blockquote>
&lt;p>So you can make a snapshot with VM memory and quiesced:&lt;/p>
&lt;pre>&lt;code>vim-cmd vmsvc/snapshot.create 3 &amp;quot;SnapName&amp;quot; &amp;quot;Snap Description&amp;quot; 1 1
&lt;/code>&lt;/pre>
&lt;h2 id="get-snapshots-list">Get snapshot(s) list&lt;/h2>
&lt;p>You may need to get the list of VM snapshots:&lt;/p>
&lt;pre>&lt;code>$ vim-cmd vmsvc/snapshot.get 3
Get Snapshot:
|-ROOT
--Snapshot Name : snap01
--Snapshot Id : 1
--Snapshot Desciption : snap01 description
--Snapshot Created On : 2/23/2015 18:12:50
--Snapshot State : powered on
--|-CHILD
----Snapshot Name : snap02
----Snapshot Id : 2
----Snapshot Desciption : snap02 description
----Snapshot Created On : 2/23/2015 18:13:15
----Snapshot State : powered off
----|-CHILD
------Snapshot Name : snap03
------Snapshot Id : 3
------Snapshot Desciption : snap03 description
------Snapshot Created On : 2/23/2015 18:13:32
------Snapshot State : powered off
------|-CHILD
--------Snapshot Name : snap04
--------Snapshot Id : 4
--------Snapshot Desciption : snap04 description
--------Snapshot Created On : 2/23/2015 18:13:59
--------Snapshot State : powered off
&lt;/code>&lt;/pre>
&lt;p>The list is displayed as a tree according to the parents or children of a snapshot.&lt;/p>
&lt;h2 id="removecommit-a-snapshot">Remove/Commit a snapshot&lt;/h2>
&lt;p>As you can create and list snapshot(s) for a VM, you can remove them. Deletion operation is also called the &amp;quot;commit&amp;quot; as all recent changes made from the moment the snapshot is taken, are committed to the based disk or the parent snapshot disk file.&lt;/p>
&lt;p>To remove or commit a snapshot for a VM:&lt;/p>
&lt;blockquote>
&lt;p>Usage: snapshot.remove vmid snapId&lt;/p>
&lt;/blockquote>
&lt;pre>&lt;code>$ vim-cmd vmsvc/snapshot.remove 3 4
Remove Snapshot:
|-ROOT
--Snapshot Name : snap01
--Snapshot Id : 1
--Snapshot Desciption : snap01 description
--Snapshot Created On : 2/23/2015 18:12:50
--Snapshot State : powered off
--|-CHILD
----Snapshot Name : snap02
----Snapshot Id : 2
----Snapshot Desciption : snap02 description
----Snapshot Created On : 2/23/2015 18:13:15
----Snapshot State : powered off
----|-CHILD
------Snapshot Name : snap03
------Snapshot Id : 3
------Snapshot Desciption : snap03 description
------Snapshot Created On : 2/23/2015 18:13:32
------Snapshot State : powered off
&lt;/code>&lt;/pre>
&lt;p>There is also a &lt;code>snapshot.removeall&lt;/code> argument to remove... all snapshots on a VM. \o/&lt;/p>
&lt;h2 id="revert-to-a-snapshot">Revert to a snapshot&lt;/h2>
&lt;p>Goal of VM snapshot is not to only create, list or remove snapshots... It's to be able to revert the VM state to the moment you take the snapshot. To do so, you can use the &lt;code>snapshot.revert&lt;/code> argument.&lt;/p>
&lt;blockquote>
&lt;p>Usage: snapshot.revert vmid snapshotId suppressPowerOff&lt;/p>
&lt;/blockquote>
&lt;p>So to revert to the first snapshot of the VM with Vmid 3:&lt;/p>
&lt;pre>&lt;code>$ vim-cmd vmsvc/snapshot.revert 3 1 0
Revert Snapshot:
|-ROOT
--Snapshot Name : snap01
--Snapshot Id : 1
--Snapshot Desciption : snap01 description
--Snapshot Created On : 2/23/2015 18:12:50
--Snapshot State : powered on
...
&lt;/code>&lt;/pre>
&lt;p>This will restore VM, powered-on (!), at the state where you take the first snapshot. Last option is to revert to snapshot with or without memory content:&lt;/p>
&lt;pre>&lt;code>suppressPowerOff = 0
|-&amp;gt; With RAM content
|-&amp;gt; Virtual machine is restored with power-on state
suppressPowerOff = 1
|-&amp;gt; Without RAM content
|-&amp;gt; Virtual machine is restored with power-off state
&lt;/code>&lt;/pre>
&lt;h1 id="linked-clone">Linked clone&lt;/h1>
&lt;p>Linked-clone definition (&lt;a href="https://pubs.vmware.com/workstation-9/index.jsp?topic=%2Fcom.vmware.ws.using.doc%2FGUID-BA264A65-C50F-4345-A787-DCC5C5324DD1.html" title="Linked clone definition">source&lt;/a>):&lt;/p>
&lt;blockquote>
&lt;p>A linked clone is a copy of a virtual machine that shares virtual disks with the parent virtual machine in an ongoing manner.&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;p>Because a linked clone is made from a snapshot of the parent, disk space is conserved and multiple virtual machines can use the same software installation. All files available on the parent at the moment you take the snapshot continue to remain available to the linked clone.&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;p>Ongoing changes to the virtual disk of the parent do not affect the linked clone, and changes to the disk of the linked clone do not affect the parent. A linked clone must have access to the parent. Without access to the parent, you cannot use a linked clone.&lt;/p>
&lt;/blockquote>
&lt;h2 id="create-a-linked-clone">Create a linked clone&lt;/h2>
&lt;p>Create a reference snapshot on a source VM. This will be our base for clones.&lt;/p>
&lt;pre>&lt;code>$ vim-cmd vmsvc/snapshot.create 3 &amp;quot;ReferenceSnapshot&amp;quot; &amp;quot;Used for linked clones of Centos VM&amp;quot;
Create Snapshot:
$ vim-cmd vmsvc/snapshot.get 3
Get Snapshot:
|-ROOT
--Snapshot Name : ReferenceSnapshot
--Snapshot Id : 7
--Snapshot Desciption : Used for linked clones of Centos VM
--Snapshot Created On : 2/24/2015 21:22:25
--Snapshot State : powered off
&lt;/code>&lt;/pre>
&lt;p>To have more understandable command lines, we set in variable the reference and destination path:&lt;/p>
&lt;pre>&lt;code>src=&amp;quot;/vmfs/volumes/LocalDatastore_001/CentosTest&amp;quot;
dst=&amp;quot;/vmfs/volumes/LocalDatastore_001/LinkedClone1&amp;quot;
&lt;/code>&lt;/pre>
&lt;p>First step for a linked clone from command line, is to create a destination folder :&lt;/p>
&lt;pre>&lt;code>mkdir $dst
&lt;/code>&lt;/pre>
&lt;p>Then we copy reference VM's &lt;code>.vmx&lt;/code> file and the &lt;code>.vmdk&lt;/code> (including the &lt;code>-delta&lt;/code> file) corresponding to our reference snapshot:&lt;/p>
&lt;pre>&lt;code>$ cat $src/CentosTest.vmx | grep fileName
ide1:0.fileName = &amp;quot;cdrom0&amp;quot;
scsi0:0.fileName = &amp;quot;CentosTest-000001.vmdk&amp;quot; **cp $src/CentosTest-000001*.vmdk $dst/
$ cp $src/CentosTest.vmx $dst/
$ ls $dst
CentosTest-000001-delta.vmdk CentosTest-000001.vmdk CentosTest.vmx
&lt;/code>&lt;/pre>
&lt;p>Then we rename files:&lt;/p>
&lt;pre>&lt;code>$ mv $dst/*-delta.vmdk $dst/LinkedClone1-000001-delta.vmdk
mv $dst/*000001.vmdk $dst/LinkedClone1-000001.vmdk
mv $dst/*.vmx $dst/LinkedClone1.vmx
$ ls $dst
LinkedClone1-000001-delta.vmdk LinkedClone1-000001.vmdk LinkedClone1.vmx
&lt;/code>&lt;/pre>
&lt;p>Great ! Now we need to edit &lt;code>LinkedClone1.vmx&lt;/code> file to made some changes:&lt;/p>
&lt;ul>
&lt;li>remove &lt;code>sched.swap.derivedName&lt;/code> line&lt;/li>
&lt;li>remove &lt;code>uuid.location&lt;/code> line&lt;/li>
&lt;li>remove &lt;code>uuid.bios&lt;/code> line&lt;/li>
&lt;li>remove &lt;code>ethernet0.generatedAddress&lt;/code> line (if generated mac address)&lt;/li>
&lt;li>remove &lt;code>extendedConfigFile&lt;/code> line if present&lt;/li>
&lt;/ul>
&lt;p>Then, edit the following lines:&lt;/p>
&lt;ul>
&lt;li>&lt;code>displayName&lt;/code> according to the name you whant to display in ESXi list of VMs&lt;/li>
&lt;li>&lt;code>scsi0:0.fileName&lt;/code> with vmdk new name&lt;/li>
&lt;li>&lt;code>ethernet0.address&lt;/code> if not a generated address&lt;/li>
&lt;/ul>
&lt;p>Last changes to made are in on the &lt;code>LinkedClone1-000001.vmdk&lt;/code> file:&lt;/p>
&lt;ul>
&lt;li>&lt;code>Extent description&lt;/code>, adapt the file name according to the delta file name of you linked clone.&lt;/li>
&lt;li>&lt;code>parentFileNameHint&lt;/code> with absolute path of the source vmdk file: ex: &lt;code>/vmfs/volumes/LocalDatastore_001/CentosTest/CentosTest.vmdk&lt;/code>&lt;/li>
&lt;/ul>
&lt;p>Last step is to register and start our VM:&lt;/p>
&lt;pre>&lt;code>$ vim-cmd solo/registervm $dst/LinkedClone1.vmx
$ vim-cmd vmsvc/getallvms
Vmid Name File Guest OS Version
3 CentosTest [LocalDatastore_001] CentosTest/CentosTest.vmx otherLinuxGuest vmx-10
6 CentosTest [LocalDatastore_001] LinkedClone1/LinkedClone1.vmx otherLinuxGuest vmx-10
$ vim-cmd vmsvc/power.on 6 &amp;amp;&amp;amp; echo &amp;quot;Powered ON&amp;quot;
Powering on VM:
Powered ON
&lt;/code>&lt;/pre>
&lt;p>You can now check the benefits of a linked clone by looking at the size of the vdisk of this new VM:&lt;/p>
&lt;pre>&lt;code>$ ls -lh delta.vmdk
-rw------- 1 root root 16.0M Feb 24 22:19 LinkedClone1-000001-delta.vmdk
&lt;/code>&lt;/pre>
&lt;p>And if we modify or create some file in the linkedClone VM, the vdisk usage increase:&lt;/p>
&lt;pre>&lt;code>$ ls -lh delta.vmdk
-rw------- 1 root root 32.0M Feb 24 22:24 LinkedClone1-000001-delta.vmdk
&lt;/code>&lt;/pre>
&lt;p>Very useful to have tiny VM for specific usage !&lt;/p>
&lt;h2 id="convert-a-linked-clone-to-a-full-clone">Convert a linked clone to a full clone&lt;/h2>
&lt;p>If you need to convert your LinkedClone VM to a virtual machine without link to the reference VM, you can use the vmkfstool:&lt;/p>
&lt;pre>&lt;code>$ vmkfstools -d thin -i /vmfs/volumes/LocalDatastore_001/LinkedClone1/LinkedClone1-000001.vmdk /vmfs/volumes/LocalDatastore_001/LinkedClone1/LinkedClone1_full.vmdk
Destination disk format: VMFS thin-provisioned
Cloning disk '/vmfs/volumes/LocalDatastore_001/LinkedClone1/LinkedClone1-000001.vmdk'...
Clone: 100% done.
&lt;/code>&lt;/pre>
&lt;p>Then you can compare the &lt;code>linked-cloned&lt;/code> and the &lt;code>full-cloned&lt;/code> vmdk(s):&lt;/p>
&lt;pre>&lt;code>$ ls -lh *.vmdk
-rw------- 1 root root 32.0M Feb 25 01:23 LinkedClone1-000001-delta.vmdk
-rw------- 1 root root 369 Feb 24 22:17 LinkedClone1-000001.vmdk
-rw------- 1 root root 8.0G Feb 25 18:34 LinkedClone1_full-flat.vmdk
-rw------- 1 root root 528 Feb 25 18:34 LinkedClone1_full.vmdk
&lt;/code>&lt;/pre>
&lt;p>Finally you can (with powered-off VM) change vmdk path on the vmx file to use the newly created vmdk, and reload the vmx by using:&lt;/p>
&lt;pre>&lt;code>$ vim-cmd vmsvc/reload 6
&lt;/code>&lt;/pre>
&lt;p>End ! Enjoy with VM snapshots and linked clones !&lt;/p></description></item><item><title>Nested VMware ESXi with virtualbox - Your first nested-virtual-machine</title><link>https://vuptime.io/post/2015-02-10-nested-vmware-esxi-virtualbox-your-first-nested-virtual-machine/</link><pubDate>Tue, 10 Feb 2015 00:00:00 +0000</pubDate><guid>https://vuptime.io/2015/02/10/nested-vmware-esxi-virtualbox-your-first-nested-virtual-machine/</guid><description>
&lt;p>Now that we've seen &lt;a href="https://vuptime.io/2015/01/25/nested-esxi-virtualbox/" title="Nested ESXi on Virtualbox">how to create a nested-ESXi&lt;/a> on virtualbox, we may need to have some content in order to test commands of procedures.&lt;/p>
&lt;h2 id="local-datastore">Local datastore&lt;/h2>
&lt;h3 id="disk-creation">Disk creation&lt;/h3>
&lt;p>To create a local datastore, you'll have to add a new virtual disk to your nested ESXi:&lt;/p>
&lt;p>First step is to create a SATA disk controller:&lt;/p>
&lt;figure>&lt;img src="https://vuptime.io/images/NestedVirtualMachine/NestedVirtualMachine01.png"/>&lt;figcaption>
&lt;h4>Add a SATA controller&lt;/h4>
&lt;/figcaption>
&lt;/figure>
&lt;p>Next, create a new disk on the SATA controller:&lt;/p>
&lt;figure>&lt;img src="https://vuptime.io/images/NestedVirtualMachine/NestedVirtualMachine02.png"/>&lt;figcaption>
&lt;h4>Add a new disk&lt;/h4>
&lt;/figcaption>
&lt;/figure>
&lt;p>I've choose to set:&lt;/p>
&lt;ul>
&lt;li>vmdk file type&lt;/li>
&lt;li>10GB&lt;/li>
&lt;li>Dynamic allocation&lt;/li>
&lt;/ul>
&lt;figure>&lt;img src="https://vuptime.io/images/NestedVirtualMachine/NestedVirtualMachine03.png"/>&lt;figcaption>
&lt;h4>My additional disk settings&lt;/h4>
&lt;/figcaption>
&lt;/figure>
&lt;p>When the vdisk is connected, ESXi started, get it's name before creating a VMFS file system. Name should be something close to &lt;code>_/dev/disks/t10.ATA_____VBOX_HARDDISK___________________________VBxcxxxxxxxxxxxxxxx__&lt;/code>&lt;/p>
&lt;p>Here is a tip to only get un-partitionned disks locally connected to the ESXi:&lt;/p>
&lt;pre>&lt;code>$ fdisk -l | grep partition
Disk /dev/disks/t10.ATA_____VBOX_HARDDISK___________________________VB_VBxcxxxxxxxxxxxxxxx__ doesn't contain a valid partition table
&lt;/code>&lt;/pre>
&lt;h3 id="disk-partition">Disk partition&lt;/h3>
&lt;p>When the new disk is located on the &lt;code>/dev/disks/&lt;/code>, check the partition table:&lt;/p>
&lt;pre>&lt;code>$ partedUtil get /dev/disks/t10.ATA_____VBOX_HARDDISK___________________________VBbc7a87cf2D7739136a_
1305 255 63 20971520
&lt;/code>&lt;/pre>
&lt;p>This indicates that there is no partition on this disk and every sector is free space.&lt;/p>
&lt;p>We also need the number of sector on the disk. This information is the last number of the previous command: 20971520 here.&lt;/p>
&lt;p>Then we can create the first partition.&lt;/p>
&lt;pre>&lt;code>$ partedUtil set &amp;quot;/vmfs/devices/disks/t10.ATA_____VBOX_HARDDISK___________________________VBbc7a87cf2D7739136a_&amp;quot; &amp;quot;1 128 20971519 251 0&amp;quot;
0 0 0 0
1 128 20971519 251 0
&lt;/code>&lt;/pre>
&lt;p>In this example, we create a partition number 1, starting at sector 128 and ending at sector 20971519 (20971520-1), with type 251 = 0xFB.&lt;/p>
&lt;p>And we can check the result:&lt;/p>
&lt;pre>&lt;code>$ partedUtil get /dev/disks/t10.ATA_____VBOX_HARDDISK___________________________VBbc7a87cf2D7739136a_
1305 255 63 20971520
1 128 20971519 251 0
&lt;/code>&lt;/pre>
&lt;p>Now we have a free partition ! And we can apply a vmfs5 file-system:&lt;/p>
&lt;pre>&lt;code>$ vmkfstools -C vmfs5 -b 1m -S LocalDatastore_001 /dev/disks/t10.ATA_____VBOX_HARDDISK___________________________VB_VBxcxxxxxxxxxxxxxxx__:1
create fs deviceName:'/dev/disks/t10.ATA_____VBOX_HARDDISK___________________________VB_VBxcxxxxxxxxxxxxxxx__:1', fsShortName:'vmfs5', fsName:'LocalDatastore_001'
deviceFullPath:/dev/disks/t10.ATA_____VBOX_HARDDISK___________________________VB_VBxcxxxxxxxxxxxxxxx__:1 deviceFile:t10.ATA_____VBOX_HARDDISK___________________________VB_VBxcxxxxxxxxxxxxxxx__:1
VMFS5 file system creation is deprecated on a BIOS/MBR partition on device 't10.ATA_____VBOX_HARDDISK___________________________VB_VBxcxxxxxxxxxxxxxxx__:1'
Checking if remote hosts are using this device as a valid file system. This may take a few seconds...
Creating vmfs5 file system on &amp;quot;t10.ATA_____VBOX_HARDDISK___________________________VB_VBxcxxxxxxxxxxxxxxx__:1&amp;quot; with blockSize 1048576 and volume label &amp;quot;LocalDatastore_001&amp;quot;.
Successfully created new volume: 54d15e2c-eeeeeeee-9cff-080027b1c126
&lt;/code>&lt;/pre>
&lt;p>In this case, we create a vmfs5 datastore, with &lt;code>LocalDatastore_001&lt;/code> name and 1Mb block size.&lt;/p>
&lt;p>And to check that datastore is ready:&lt;/p>
&lt;pre>&lt;code>$ esxcli storage filesystem list
Mount Point Volume Name UUID Mounted Type Size Free
------------------------------------------------- ------------------ ----------------------------------- ------- ------ ----------- ----------
/vmfs/volumes/54d15e2c-eeeeeeee-9cff-080027b1c126 LocalDatastore_001 54d15e2c-eeeeeeee-9cff-080027b1c126 true VMFS-5 10468982784 9545187328
&lt;/code>&lt;/pre>
&lt;p>We are now ready to create VM.&lt;/p>
&lt;h2 id="dummy-virtual-machine">Dummy virtual machine&lt;/h2>
&lt;p>Sometimes, you may need to have empty, but working, virtual machines for testing. The following command create a dummy VM named &lt;em>TestVM&lt;/em> and stored on the local datastore:&lt;/p>
&lt;pre>&lt;code>$ vim-cmd vmsvc/createdummyvm testVM [LocalDatastore_001]/testVM/testVM.vmx
1
&lt;/code>&lt;/pre>
&lt;p>Checking:&lt;/p>
&lt;pre>&lt;code>$ vim-cmd vmsvc/getallvms
Vmid Name File Guest OS Version Annotation
1 testVM [LocalDatastore_001] testVM/testVM.vmx otherGuest vmx-10
&lt;/code>&lt;/pre>
&lt;p>Houra !&lt;/p>
&lt;p>Now we can play with this VM:&lt;/p>
&lt;p>Starting the VM:&lt;/p>
&lt;pre>&lt;code>$ vim-cmd vmsvc/power.on 1
Powering on VM:
&lt;/code>&lt;/pre>
&lt;p>Get runtime informations about the running VM:&lt;/p>
&lt;pre>&lt;code>$ vim-cmd vmsvc/get.runtime 1
Runtime information
(vim.vm.RuntimeInfo) {
dynamicType = &amp;lt;unset&amp;gt;,
host = 'vim.HostSystem:ha-host',
connectionState = &amp;quot;connected&amp;quot;,
powerState = &amp;quot;poweredOn&amp;quot;,
faultToleranceState = &amp;quot;notConfigured&amp;quot;,
dasVmProtection = (vim.vm.RuntimeInfo.DasProtectionState) null,
toolsInstallerMounted = false,
suspendTime = &amp;lt;unset&amp;gt;,
bootTime = &amp;quot;2015-02-04T00:28:55.507435Z&amp;quot;,
suspendInterval = 0,
question = (vim.vm.QuestionInfo) null,
memoryOverhead = 36478976,
maxCpuUsage = 2496,
maxMemoryUsage = 32,
numMksConnections = 0,
recordReplayState = &amp;quot;inactive&amp;quot;,
cleanPowerOff = &amp;lt;unset&amp;gt;,
needSecondaryReason = &amp;lt;unset&amp;gt;,
onlineStandby = false,
minRequiredEVCModeKey = &amp;lt;unset&amp;gt;,
consolidationNeeded = false,
featureRequirement = (vim.vm.FeatureRequirement) [
(vim.vm.FeatureRequirement) {
dynamicType = &amp;lt;unset&amp;gt;,
key = &amp;quot;cpuid.SSE3&amp;quot;,
featureName = &amp;quot;cpuid.SSE3&amp;quot;,
value = &amp;quot;Bool:Min:1&amp;quot;,
},
(vim.vm.FeatureRequirement) {
dynamicType = &amp;lt;unset&amp;gt;,
key = &amp;quot;cpuid.SSSE3&amp;quot;,
featureName = &amp;quot;cpuid.SSSE3&amp;quot;,
value = &amp;quot;Bool:Min:1&amp;quot;,
},
(vim.vm.FeatureRequirement) {
dynamicType = &amp;lt;unset&amp;gt;,
key = &amp;quot;cpuid.NX&amp;quot;,
featureName = &amp;quot;cpuid.NX&amp;quot;,
value = &amp;quot;Bool:Min:1&amp;quot;,
},
(vim.vm.FeatureRequirement) {
dynamicType = &amp;lt;unset&amp;gt;,
key = &amp;quot;cpuid.RDTSCP&amp;quot;,
featureName = &amp;quot;cpuid.RDTSCP&amp;quot;,
value = &amp;quot;Bool:Min:1&amp;quot;,
},
(vim.vm.FeatureRequirement) {
dynamicType = &amp;lt;unset&amp;gt;,
key = &amp;quot;cpuid.Intel&amp;quot;,
featureName = &amp;quot;cpuid.Intel&amp;quot;,
value = &amp;quot;Bool:Min:1&amp;quot;,
}
],
vFlashCacheAllocation = 0,
}
&lt;/code>&lt;/pre>
&lt;p>Power-off:&lt;/p>
&lt;pre>&lt;code>$ vim-cmd vmsvc/power.off 1
Powering off VM:
&lt;/code>&lt;/pre>
&lt;p>Get informations about the datastore location of VM:&lt;/p>
&lt;pre>&lt;code>$ vim-cmd vmsvc/get.datastores 1
name LocalDatastore_001
url /vmfs/volumes/54d15e2c-eeeeeeee-9cff-080027b1c126
capacity 10468982784
freeSpace 9544138752
accessible 1
type VMFS
multipleHostAccess &amp;lt;unset&amp;gt;
&lt;/code>&lt;/pre>
&lt;h2 id="imported-virtual-machine">Imported virtual machine&lt;/h2>
&lt;p>A dummy VM is usefull to test ESXi command line tools, but in some case you may want to test more complex VM settings. In that case, you can import an existing VM to your ESXi and run it.&lt;/p>
&lt;h3 id="prerequisites">Prerequisites&lt;/h3>
&lt;p>Create a virtual machine on virtual box with :&lt;/p>
&lt;ul>
&lt;li>SCSI/LsiLogic controller for main storage&lt;/li>
&lt;li>Bridged network connection (keep in mind the used mac address)&lt;/li>
&lt;li>Fixed IP settings&lt;/li>
&lt;/ul>
&lt;p>You'll also need the ovftools installed on your system: &lt;a href="https://www.vmware.com/support/developer/ovf/" title="Install OVFtools">see instructions on VMware website&lt;/a>&lt;/p>
&lt;h3 id="export">Export&lt;/h3>
&lt;p>To export a virtual machine on virtualbox you can use the File/Export menu or the following command line:&lt;/p>
&lt;pre>&lt;code>$ vboxmanage export CentosTest -o CentosTest.ova
0%...10%...
&lt;/code>&lt;/pre>
&lt;p>Next operation is to convert the .ova file to a &lt;code>.vmx&lt;/code> one that can be used on ESXi:&lt;/p>
&lt;pre>&lt;code>$ ovftool --lax CentosTest.ova CentosTest.vmx
Opening OVA source: CentosTest.ova
Opening VMX target: CentosTest.vmx
Warning:
- Line 25: Unsupported hardware family 'virtualbox-2.2'.
Writing VMX file: CentosTest.vmx
Transfer Completed
Warning:
- No manifest entry found for: 'CentosTest-disk1.vmdk'.
- No manifest file found.
Completed successfully
&lt;/code>&lt;/pre>
&lt;p>Now we have a &lt;code>.vmx&lt;/code> and its &lt;code>.vmdk&lt;/code> file:&lt;/p>
&lt;pre>&lt;code>$ du -ch *
976M CentosTest-disk1.vmdk
402M CentosTest.ova
12K CentosTest.vmx
1,4G total
&lt;/code>&lt;/pre>
&lt;h3 id="import">Import&lt;/h3>
&lt;p>To import the vmx&amp;amp;vmdk file as a VM to our nested ESXi we also use the ovftool:&lt;/p>
&lt;pre>&lt;code>$ ovftool \
--name=&amp;quot;CentosTest&amp;quot; \
-dm=thin -ds=LocalDatastore_001 \
--net:&amp;quot;bridged&amp;quot;=&amp;quot;VM Network&amp;quot; \
CentosTest.vmx vi://root@192.168.1.16/
Opening VMX source: CentosTest.vmx
Enter login information for target vi://192.168.1.16/
Username: root
Password: *********
Opening VI target: vi://root@192.168.1.16:443/
Warning:
- The specified operating system identifier '' (id: 79) is not supported on the selected host. It will be mapped to the following OS identifier: 'Other Linux (32-bit)'.
Deploying to VI: vi://root@192.168.1.16:443/
Transfer Completed
Completed successfully
&lt;/code>&lt;/pre>
&lt;p>This command will import the virtual machine on ESXi with following settings:&lt;/p>
&lt;ul>
&lt;li>&lt;code>-dm=thin&lt;/code> : force to use thin provisioning method for disk&lt;/li>
&lt;li>&lt;code>-ds=LocalDatastore_001&lt;/code> : target datastore&lt;/li>
&lt;li>&lt;code>--net:&amp;quot;bridged&amp;quot;=&amp;quot;VM Network&amp;quot;&lt;/code> : Map the bridged network to the &lt;code>VM Network&lt;/code> one on ESXi&lt;/li>
&lt;/ul>
&lt;p>We can check the import from the ESXi shell:&lt;/p>
&lt;pre>&lt;code>$ vim-cmd vmsvc/getallvms
Vmid Name File Guest OS Version Annotation
2 CentosTest [LocalDatastore_001] CentosTest/CentosTest.vmx otherLinuxGuest vmx-10
&lt;/code>&lt;/pre>
&lt;h3 id="enable-network-from-nested-vm">Enable network from nested-VM&lt;/h3>
&lt;p>To keep the mac address you already set in virtualBox:&lt;/p>
&lt;pre>&lt;code>$ sed -i &amp;quot;s/ethernet0\.addressType \= \&amp;quot;generated\&amp;quot;/ethernet0\.addressType \= \&amp;quot;static\&amp;quot;/g&amp;quot; /vmfs/volumes/LocalDatastore_001/CentosTest/CentosTest.vmx
echo &amp;quot;ethernet0.address=\&amp;quot;08:00:27:47:76:67\&amp;quot;&amp;quot; &amp;gt;&amp;gt; /vmfs/volumes/LocalDatastore_001/CentosTest/CentosTest.vmx
&lt;/code>&lt;/pre>
&lt;p>If you powerOn the VM now, you'll not be able to join it on the network from another computer than the nested ESXi. This limitation is link to the nested ESXi VM configuration. You'll need to enable &amp;quot;promiscuous mode&amp;quot; on the ESXi VM. By command line:&lt;/p>
&lt;pre>&lt;code>$ vboxmanage controlvm NestedESXi nicpromisc1 allow-all
&lt;/code>&lt;/pre>
&lt;p>With a poweredOn VM On ESXi you should now be able to join the LAN or to join nested VM from LAN too.&lt;/p>
&lt;h2 id="add-vnc-support-to-vm">Add VNC support to VM&lt;/h2>
&lt;p>If you want to be able to get a view or access to virtual machine, you have to setup VNC access on VM and on ESXi firewall.&lt;/p>
&lt;h3 id="vm-setup-for-vnc">VM setup for VNC&lt;/h3>
&lt;p>First step is to edit the VM vmx file to add some informations (&lt;em>VM needs to be powered-off&lt;/em>):&lt;/p>
&lt;pre>&lt;code>$ echo &amp;quot;RemoteDisplay.vnc.enabled = \&amp;quot;true\&amp;quot;
RemoteDisplay.vnc.port = \&amp;quot;5800\&amp;quot;
RemoteDisplay.vnc.password = \&amp;quot;125678\&amp;quot; \
RemoteDisplay.vnc.keymap = \&amp;quot;fr\&amp;quot;&amp;quot; &amp;gt;&amp;gt; /vmfs/volumes/LocalDatastore_001/CentosTest/CentosTest.vmx
&lt;/code>&lt;/pre>
&lt;p>Now we reload VM config file :&lt;/p>
&lt;pre>&lt;code>$ vim-cmd vmsvc/reload 2
&lt;/code>&lt;/pre>
&lt;p>You can start/stop/do-everything-you-want on your newly imported VM !&lt;/p>
&lt;h3 id="firewall-configuration-for-vnc">Firewall configuration for VNC&lt;/h3>
&lt;p>We create a folder on our Datastore to store the FW configuration files:&lt;/p>
&lt;pre>&lt;code>$ mkdir /vmfs/volumes/LocalDatastore_001/firewall/
&lt;/code>&lt;/pre>
&lt;p>And we create our first firewall custom script:&lt;/p>
&lt;pre>&lt;code>$ echo &amp;quot;&amp;lt;!-- Custom firewall configuration information --&amp;gt;
&amp;lt;ConfigRoot&amp;gt;
&amp;lt;!-- VNC --&amp;gt;
&amp;lt;service id='0038'&amp;gt;
&amp;lt;id&amp;gt;VNC&amp;lt;/id&amp;gt;
&amp;lt;rule id='0000'&amp;gt;
&amp;lt;direction&amp;gt;inbound&amp;lt;/direction&amp;gt;
&amp;lt;protocol&amp;gt;tcp&amp;lt;/protocol&amp;gt;
&amp;lt;porttype&amp;gt;dst&amp;lt;/porttype&amp;gt;
&amp;lt;port&amp;gt;
&amp;lt;begin&amp;gt;5800&amp;lt;/begin&amp;gt;
&amp;lt;end&amp;gt;5999&amp;lt;/end&amp;gt;
&amp;lt;/port&amp;gt;
&amp;lt;/rule&amp;gt;
&amp;lt;enabled&amp;gt;true&amp;lt;/enabled&amp;gt;
&amp;lt;required&amp;gt;false&amp;lt;/required&amp;gt;
&amp;lt;/service&amp;gt;
&amp;lt;/ConfigRoot&amp;gt;&amp;quot; &amp;gt; /vmfs/volumes/LocalDatastore_001/VPNtoVM.xml
&lt;/code>&lt;/pre>
&lt;p>This will create a new set of rules and rules for opening TCP ports 5800 to 5999 for VNC usage.&lt;/p>
&lt;p>Then we test our configuration file:&lt;/p>
&lt;pre>&lt;code>$ cp /vmfs/volumes/LocalDatastore_001/firewall/*.xml /etc/vmware/firewall/
$ esxcli network firewall refresh
$ esxcli network firewall ruleset list | grep VNC
VNC true
$ esxcli network firewall ruleset rule list | grep VNC
VNC Inbound TCP Dst 1234 1234
&lt;/code>&lt;/pre>
&lt;p>It seems OK but if you reboot the ESXi, these changes will be lost. In order to keep them working, we use the &lt;code>/etc/rc.local.d/local.sh&lt;/code> script to copy and refresh rules on starting process:&lt;/p>
&lt;pre>&lt;code>$ echo &amp;quot;$(cat /etc/rc.local.d/local.sh | grep -v exit)
# Copy custom firewall configurations
cp /vmfs/volumes/LocalDatastore_001/firewall/*.xml /etc/vmware/firewall/
esxcli network firewall refresh
exit 0&amp;quot; &amp;gt; /etc/rc.local.d/local.sh
&lt;/code>&lt;/pre>
&lt;p>And if you need to be more restrictive about the authorized IP address:&lt;/p>
&lt;pre>&lt;code>$ esxcli network firewall ruleset set --allowed-all false --ruleset-id=VNC
$ esxcli network firewall ruleset allowedip add --ip-address=192.168.1.0/24 --ruleset-id=VNC
&lt;/code>&lt;/pre>
&lt;p>... to only accept IP address from a subnet to access to VNC features.&lt;/p>
&lt;p>And you just need a VNC client software to access to your VM console with following settings:&lt;/p>
&lt;ul>
&lt;li>server IP : ip of your nested ESXi&lt;/li>
&lt;li>server port : port you choose for VNC settings on the VM&lt;/li>
&lt;li>password : VNC password on VM settings&lt;/li>
&lt;/ul>
&lt;figure>&lt;img src="https://vuptime.io/images/NestedVirtualMachine/NestedVirtualMachineVNC.png"/>&lt;figcaption>
&lt;h4>VNC access to a virtual machine&lt;/h4>
&lt;/figcaption>
&lt;/figure></description></item><item><title>Nested VMware ESXi with virtualbox</title><link>https://vuptime.io/post/2015-01-25-nested-esxi-virtualbox/</link><pubDate>Sun, 25 Jan 2015 00:00:00 +0000</pubDate><guid>https://vuptime.io/2015/01/25/nested-esxi-virtualbox/</guid><description>
&lt;p>For testing cases it could be very useful to host a nested (= virtualized) VMware ESXi on your desk or laptop machine. For my own needs, I had to install an ESXi on virtualbox. Here is my tutorial.&lt;/p>
&lt;h1 id="installation">Installation&lt;/h1>
&lt;h2 id="prerequisites">Prerequisites&lt;/h2>
&lt;p>In order to install an ESXi 5.5 you'll have to provide:&lt;/p>
&lt;ul>
&lt;li>64-bit x86 processor with at least 2 cores&lt;/li>
&lt;li>4 GB of RAM (we'll see how to deal if you don't have/want to give 4GB of RAM to the nested ESXi)&lt;/li>
&lt;li>Intel-VT or AMD-V compatible processors&lt;/li>
&lt;li>1 GB of disk for system&lt;/li>
&lt;/ul>
&lt;p>In order to create small virtual machines for tests, you'll have to add more disk space, in a second device.&lt;/p>
&lt;p>You'll also need an ESXi iso file for installation.&lt;/p>
&lt;h2 id="esxi-virtual-machine-creation">ESXi Virtual Machine creation&lt;/h2>
&lt;p>In virtualbox, create a new virtual machine with following settings:&lt;/p>
&lt;ul>
&lt;li>Choose the name&lt;/li>
&lt;li>Type: Linux&lt;/li>
&lt;li>GuestOS: Other Linux (64-bit)&lt;/li>
&lt;li>Memory: &amp;gt;= 4GB (or less if necessary)&lt;/li>
&lt;li>Create a new virtual disk device&lt;/li>
&lt;li>Choose one of disk type choice (no big difference)&lt;/li>
&lt;li>Dynamic space allocation&lt;/li>
&lt;li>Size: 1GB&lt;/li>
&lt;/ul>
&lt;p>When virtual machine is created, edit settings to set 2 vCPU cores:&lt;/p>
&lt;figure>&lt;img src="https://vuptime.io/images/ESXiVirtualBox/ESXiVirtualBox01.png"/>&lt;figcaption>
&lt;h4>Edit VM CPU settings&lt;/h4>
&lt;/figcaption>
&lt;/figure>
&lt;p>Then mount the iso file to the DVD device:&lt;/p>
&lt;figure>&lt;img src="https://vuptime.io/images/ESXiVirtualBox/ESXiVirtualBox02.png"/>&lt;figcaption>
&lt;h4>Add ISO file to the virtual machine&lt;/h4>
&lt;/figcaption>
&lt;/figure>
&lt;p>Then you can edit the network settings (I need to use the existing local network so I used &amp;quot;bridged adapter&amp;quot; setting:&lt;/p>
&lt;figure>&lt;img src="https://vuptime.io/images/ESXiVirtualBox/ESXiVirtualBox03.png"/>&lt;figcaption>
&lt;h4>Change network adapter settings&lt;/h4>
&lt;/figcaption>
&lt;/figure>
&lt;p>Then save changes in configuration and start virtual machine.&lt;/p>
&lt;h2 id="esxi-installation-and-setup">ESXi installation and setup&lt;/h2>
&lt;p>ESXi installer will be automatically started on the virtual machine. During the process, installer will load some libraries and modules and check the available &amp;quot;hardware&amp;quot; on the virtual machine. According to the hardware settings, it could take some time before the first human action:&lt;/p>
&lt;figure>&lt;img src="https://vuptime.io/images/ESXiVirtualBox/ESXiVirtualBox04.png"/>&lt;figcaption>
&lt;h4>First human action in ESXi installation process&lt;/h4>
&lt;/figcaption>
&lt;/figure>
&lt;h3 id="optional-bypassing-the-minimal-requirements-check">(optional) Bypassing the minimal requirements check&lt;/h3>
&lt;p>If you give less than minimal requirements to your nested ESXi virtual machine. You'll we need to bypass the requirements checks to be able to install ESXi. To do so, open ESXi console by pressing [ALT]+[F1].&lt;/p>
&lt;p>Then login with &amp;quot;root&amp;quot; and no password:&lt;/p>
&lt;figure>&lt;img src="https://vuptime.io/images/ESXiVirtualBox/ESXiVirtualBox05.png"/>&lt;figcaption>
&lt;h4>Login to the ESXi console&lt;/h4>
&lt;/figcaption>
&lt;/figure>
&lt;p>When logged in:&lt;/p>
&lt;pre>&lt;code>$ cd /usr/lib/vmware/weasel/util
$ rm upgrade_precheck.pyc
$ mv upgrade_precheck.py upgrade_precheck.py.old
$ cp upgrade_precheck.py.old upgrade_precheck.py
$ vi upgrade_precheck.py
&lt;/code>&lt;/pre>
&lt;p>You'll need to find the following line (simple way is to type [ESC]+&lt;code>/MEM_MIN&lt;/code>):&lt;/p>
&lt;pre>&lt;code>MEM_MIN_SIZE = (4*1024) * SIZE_MiB
&lt;/code>&lt;/pre>
&lt;p>Change the &amp;quot;4&amp;quot; according to the number of GB you can give to your machine:&lt;/p>
&lt;figure>&lt;img src="https://vuptime.io/images/ESXiVirtualBox/ESXiVirtualBox06.png"/>&lt;figcaption>
&lt;h4>Bypassing min-memory check&lt;/h4>
&lt;/figcaption>
&lt;/figure>
&lt;p>Save file and exit: [ESC]+&lt;code>:wq!&lt;/code>&lt;/p>
&lt;p>Kill the installer process:&lt;/p>
&lt;pre>&lt;code>$ ps -c | grep weasel
$ kill –9 &amp;lt;PYTHON PROCESS ID&amp;gt;
&lt;/code>&lt;/pre>
&lt;p>Then go back to the installer mode: [ALT]+[F2]&lt;/p>
&lt;h3 id="back-to-the-installation">Back to the installation&lt;/h3>
&lt;ul>
&lt;li>Press [Enter] to start installation process.&lt;/li>
&lt;li>[F11] to accept EULA&lt;/li>
&lt;li>Select the vbox disk for system installation and press [Enter]:&lt;/li>
&lt;/ul>
&lt;figure>&lt;img src="https://vuptime.io/images/ESXiVirtualBox/ESXiVirtualBox07.png"/>&lt;figcaption>
&lt;h4>Select boot device&lt;/h4>
&lt;/figcaption>
&lt;/figure>
&lt;ul>
&lt;li>Select a keyboard layout according to your computer and press [Enter]&lt;/li>
&lt;li>Enter a password and confirm&lt;/li>
&lt;li>Then wait for hardware checking process&lt;/li>
&lt;li>Installer will warn you about one or more hardware settings but should let you finish the installation process by pressing [Enter]:&lt;/li>
&lt;/ul>
&lt;figure>&lt;img src="https://vuptime.io/images/ESXiVirtualBox/ESXiVirtualBox08.png"/>&lt;figcaption>
&lt;h4>Last step of installation process&lt;/h4>
&lt;/figcaption>
&lt;/figure>
&lt;ul>
&lt;li>Press [F11] to start installation on disk.&lt;/li>
&lt;/ul>
&lt;figure>&lt;img src="https://vuptime.io/images/ESXiVirtualBox/ESXiVirtualBox09.png"/>&lt;figcaption>
&lt;h4>Installation in progress&lt;/h4>
&lt;/figcaption>
&lt;/figure>
&lt;p>When ended, you can restart the virtual machine and enjoy your new ESXi installation.&lt;/p>
&lt;h1 id="customize-your-nested-esxi">Customize your nested ESXI&lt;/h1>
&lt;p>Following step are optional.&lt;/p>
&lt;h2 id="ip-settings">IP settings&lt;/h2>
&lt;p>If you use the bridge network adapter and don't have a DHCP server, you may have to set the IP settings to the ESXi:&lt;/p>
&lt;p>When ESXi is started, press [ALT]+[F2] to open &amp;quot;edit settings&amp;quot; panel and login:&lt;/p>
&lt;figure>&lt;img src="https://vuptime.io/images/ESXiVirtualBox/ESXiVirtualBox10.png"/>&lt;figcaption>
&lt;h4>Login to the ESXi console&lt;/h4>
&lt;/figcaption>
&lt;/figure>
&lt;p>Select &lt;code>Configure Management network&lt;/code>:&lt;/p>
&lt;figure>&lt;img src="https://vuptime.io/images/ESXiVirtualBox/ESXiVirtualBox12.png"/>&lt;figcaption>
&lt;h4>Configure management network&lt;/h4>
&lt;/figcaption>
&lt;/figure>
&lt;p>Edit IP settings according to your LAN or your needs:&lt;/p>
&lt;figure>&lt;img src="https://vuptime.io/images/ESXiVirtualBox/ESXiVirtualBox11.png"/>&lt;figcaption>
&lt;h4>Change IP settings&lt;/h4>
&lt;/figcaption>
&lt;/figure>
&lt;p>Once it's done, press [ESC] then [Y] to validate and apply changes.&lt;/p>
&lt;h2 id="ssh-server">SSH Server&lt;/h2>
&lt;p>To simplify the access to the ESXi command line tools, I use the embedded SSH server. To enable it:&lt;/p>
&lt;figure>&lt;img src="https://vuptime.io/images/ESXiVirtualBox/ESXiVirtualBox13.png"/>&lt;figcaption>
&lt;h4>Enable SSH server in troubleshooting options&lt;/h4>
&lt;/figcaption>
&lt;/figure>
&lt;p>Then enable SSH server by selecting &lt;code>Enable SSH&lt;/code> and pressing [Enter]:&lt;/p>
&lt;figure>&lt;img src="https://vuptime.io/images/ESXiVirtualBox/ESXiVirtualBox14.png"/>&lt;figcaption>
&lt;h4>Enable SSH server&lt;/h4>
&lt;/figcaption>
&lt;/figure>
&lt;p>Now you can login to your server by ssh:&lt;/p>
&lt;pre>&lt;code>$ ssh root@192.168.1.16
Password: **********
The time and date of this login have been sent to the system logs.
VMware offers supported, powerful system administration tools. Please
see www.vmware.com/go/sysadmintools for details.
The ESXi Shell can be disabled by an administrative user. See the
vSphere Security documentation for more information.
~ # hostname
NestedESXi55.lan
&lt;/code>&lt;/pre>
&lt;p>I prefer to use SSH key to login. To copy you public key to the ESXi server:&lt;/p>
&lt;pre>&lt;code>$ cat ~/.ssh/id_rsa.pub | ssh root@192.168.1.16 &amp;quot;cat - &amp;gt;&amp;gt; /etc/ssh/keys-root/authorized_keys&amp;quot;
Password: *********
&lt;/code>&lt;/pre>
&lt;p>Then you can check the correct behavior of login with SSH key:&lt;/p>
&lt;pre>&lt;code>$ssh root@192.168.1.16
The time and date of this login have been sent to the system logs.
VMware offers supported, powerful system administration tools. Please
see www.vmware.com/go/sysadmintools for details.
The ESXi Shell can be disabled by an administrative user. See the
vSphere Security documentation for more information.
~ # hostname
NestedESXi55.lan
&lt;/code>&lt;/pre>
&lt;h1 id="conclusion">Conclusion&lt;/h1>
&lt;p>Installing a nested VMware ESXi on virtualbox is an easy way to test commands or to get used to ESXi command line usage. As we can bypass the minimal requirements checks, you do not need a huge computer to run the famous enterprise-class, &lt;a href="https://en.wikipedia.org/wiki/Hypervisor#Classification" title="Hypervisor">type-1&lt;/a> &lt;a href="https://en.wikipedia.org/wiki/Hypervisor" title="Hypervisor">hypervisor&lt;/a>. But with this kind of configuration, you'll not be able to run several virtual-machines in good conditions.&lt;/p></description></item><item><title>vCenter - changer le mot de passe de base de données</title><link>https://vuptime.io/post/2014-07-18-vcenter-changer-le-mot-de-passe-de-base-de-donnees/</link><pubDate>Fri, 18 Jul 2014 00:00:00 +0000</pubDate><guid>https://vuptime.io/2014/07/18/vcenter-changer-le-mot-de-passe-de-base-de-donnees/</guid><description>
&lt;p>Un petit article plus, pour me rappeler moi même de la manipulation que pour vraiment générer du contenu sur ce blog. Ce matin j'ai eu à changer, sur un vCenter Server, le mot de passe par lequel le service communique avec sa base de données, voici la manipulation.&lt;/p>
&lt;h2 id="changer-lutilisateur-de-bdd">Changer l'utilisateur de BDD&lt;/h2>
&lt;p>&lt;em>(si nécessaire)&lt;/em>&lt;/p>
&lt;p>Pour celà, il faut ouvrir l'éditeur de registre Windows: &lt;code>regedit.exe&lt;/code>&lt;/p>
&lt;p>Puis chercher le chemin: &lt;code>HKEY_LOCAL_MACHINE\SOFTWARE\VMware, Inc.\VMware VirtualCenter\DB&lt;/code>&lt;/p>
&lt;p>Dans ce dossier du registre, sont stockées les informations relatives à la connexion à la base de données du service vCenter.&lt;/p>
&lt;figure>&lt;img src="https://vuptime.io/images/vCenter_changeDBsettings_user.png"/>&lt;figcaption>
&lt;h4>Changement de l&amp;#39;utilisateur de bdd pour le service vCenter&lt;/h4>
&lt;/figcaption>
&lt;/figure>
&lt;p>Il suffit de mettre à jour la valeur nommée &amp;quot;2&amp;quot; avec votre éventuel nouvel utilisateur de base de données (et de relancer votre service après avoir mis à jour le mot de passe).&lt;/p>
&lt;h2 id="changer-le-mot-de-passe-daccès-à-la-bdd">Changer le mot de passe d'accès à la BDD&lt;/h2>
&lt;p>Si vous regardez la suite des clés de registre à l'emplacement de l'étape du dessus, vous remarquerez que l'entrée 3 stocke le mot de passe, haché, pour cet utilisateur (un truc genre: &lt;code>*P8Juhn9L7f3pFZsYcCYvZ....&lt;/code>). Pour le mettre à jour il ne suffit donc pas de modifier à la main cette valeur par votre nouveau mot de passe.&lt;/p>
&lt;p>Heureusement il y a un outil qui va vous aider à le faire: vpxd.exe&lt;/p>
&lt;p>Il faut se placer dans le dossier dans lequel vCenter Server est installé et lancer la commande avec l'argument &amp;quot;-p&amp;quot;:&lt;/p>
&lt;pre>&lt;code>C:&amp;gt; cd C:\Program Files\VMware\Infrastructure\VirtualCenter Server\
C:\Program Files\VMware\Infrastructure\VirtualCenter Server&amp;gt; vpxd.exe -p
------ In-memory logs start --------
2014-07-18T11:46:22.991+02:00 [05588 info 'Hooks'] Hooks Initialized
------ In-memory logs end --------
2014-07-18T11:46:23.209+02:00 [05588 info 'Default'] Initialized channel manager
2014-07-18T11:46:23.209+02:00 [05588 info 'Default'] Current working directory:
c:\Program Files\VMware\Infrastructure\VirtualCenter Server
2014-07-18T11:46:23.209+02:00 [05588 info 'Default'] Log path: C:\ProgramData\VM
ware\VMware VirtualCenter\Logs
2014-07-18T11:46:23.209+02:00 [05588 info 'Default'] Initializing SSL
2014-07-18T11:46:23.209+02:00 [05588 info 'Default'] Vmacore::InitSSL: doVersion
Check = true, handshakeTimeoutUs = 120000000
Enter new DB password:
again:
2014-07-18T11:46:40.718+02:00 [05588 info 'Default'] Reset DB password succeeded
.
C:\Program Files\VMware\Infrastructure\VirtualCenter Server&amp;gt;
&lt;/code>&lt;/pre>
&lt;p>Ensuite il faut relancer le service vCenter Server à l'aide du gestionnaire de services et le tour est joué.&lt;/p></description></item><item><title>PowerCli - Mise à jour du VMX de templates de machines virtuelles</title><link>https://vuptime.io/post/2021/05/06/vmware-event-broker-on-k8s-with-knative-part2/</link><pubDate>Mon, 12 May 2014 00:00:00 +0000</pubDate><guid>https://vuptime.io/2014/05/12/powercli-mise-jour-du-vmx-de-templates-de-machines-virtuelles/</guid><description>
&lt;p>Lorsqu'on gère plusieurs centaines de machines virtuelles, templates, virtual-appliance etc., on a pas spécialement envie de se palucher à la main, les opérations de mises-à-jour systématiques. En plus si vous cotoyez des gus comme &lt;a href="https://twitter.com/fdibot" title="Le compte twitter du (gentil) gus en question">@fdibot&lt;/a>, ça devient carrément un sacrilège d'envisager de faire à la main ce genre d'opération, si vous avez la possibilité de le scripter en powershell.&lt;/p>
&lt;p>Si on travaille sur un environnement Windows et VMware, l'API &amp;quot;&lt;a href="https://www.vmware.com/support/developer/PowerCLI/" title="Documentation de PowerCli">PowerCli&lt;/a>&amp;quot; est une facilité appréciable qui permet d'automatiser des tâches fastidieuses à réaliser à la main sur votre infrastructure vSphere. Le dernier exemple en date a été une demande pour modifier, rapidement, les paramètres VMX de templates de machines virtuelles. Or si la lecture de la configuration VMX d'une VM ou d'un template est aisée, l'écriture de modifications sur un template nécessite une petite pirouette que j'explique ici.&lt;/p>
&lt;h1 id="étape-par-étape">Étape par étape&lt;/h1>
&lt;h2 id="se-connecter-à-vcenter">Se connecter à vCenter&lt;/h2>
&lt;p>C'est l'étape la plus simple et la plus documentée sur Internet. Tout commence par l'ajout à votre contexte, du module adéquat qui va vous permettre d'utiliser l'extension &lt;code>PowerCli&lt;/code>:&lt;/p>
&lt;pre>&lt;code># load PowerCli Snapin
if ((Get-PSSnapin -Name VMware.Vimautomation.Core -ErrorAction SilentlyContinue) -eq $null ) {
Add-PsSnapin VMware.Vimautomation.Core
}
&lt;/code>&lt;/pre>
&lt;p>Ensuite on se connecte à notre vCenter Server préféré:&lt;/p>
&lt;pre>&lt;code># vCenter server
$VC = &amp;quot;monvcenter.domain.tld&amp;quot;
$Username = &amp;quot;domain\monuser&amp;quot;
# connecting vCenter
$Credentials = get-credential -credential $Username
Connect-VIServer -server $($VC.IP) -Credential $Credentials
&lt;/code>&lt;/pre>
&lt;h2 id="préparer-la-configuration-à-mettre-en-place">Préparer la configuration à mettre en place&lt;/h2>
&lt;p>Les paramètres d'un fichier VMX sont simplement composés d'un couple clé/valeur. Le type d'objet requis est &lt;code>VMware.Vim.optionvalue&lt;/code>, le tout ajouté à un type d'objet correspondant à la configuration (même partielle) d'une VM: &lt;code>VMware.Vim.VirtualMachineConfigSpec&lt;/code>.&lt;/p>
&lt;pre>&lt;code># config change for updateVMWareTools
$vmConfigSpec = New-Object VMware.Vim.VirtualMachineConfigSpec
$vmConfigSpec.extraconfig += New-Object VMware.Vim.optionvalue
$vmConfigSpec.extraconfig[0].Key=&amp;quot;isolation.tools.guestInitiatedUpgrade.disable&amp;quot;
$vmConfigSpec.extraconfig[0].Value=&amp;quot;false&amp;quot;
&lt;/code>&lt;/pre>
&lt;p>Ici on va placer à &amp;quot;vrai&amp;quot; toutes les valeurs (déjà existantes ou pas) de &lt;code>isolation.tools.guestInitiatedUpgrade.disable&lt;/code> (ce qui permettra de lancer la mise à jour des VMwareTools d'une machine, depuis l'OS de la VM).&lt;/p>
&lt;h2 id="appliquer-cette-modification-aux-templates">Appliquer cette modification aux templates&lt;/h2>
&lt;p>Dans le cas figure présenté ici, on ne va pas filtrer les templates sur lesquels appliquer ce changement de configuration. Il est toutefois envisageable de placer un filtre (via &lt;code>| filter&lt;/code>) ou de placer des tests &lt;code>if&lt;/code> pour, par exemple, ne sélectionner que les templates dont le &lt;code>GuestOS&lt;/code> déclaré est de type Windows.&lt;/p>
&lt;pre>&lt;code># update all templates
$templates = Get-template
foreach ($tpl in $templates) {
Write-host -foreground blue &amp;quot;Template: $($tpl.Name)&amp;quot;
Write-host -foreground gray &amp;quot; Converting to VM&amp;quot;
$vm = **Set-Template -Template $tpl -ToVM**
Write-host -foreground gray &amp;quot; updating VMX&amp;quot;
($vm | Get-View).ReconfigVM($vmConfigSpec)
Write-host -foreground gray &amp;quot; Converting to Template back&amp;quot;
**($vm | Get-View).MarkAsTemplate()** | Out-Null
Write-host -foreground gray &amp;quot;End of update process&amp;quot;process
}
&lt;/code>&lt;/pre>
&lt;p>L'astuce, si on peut appeler ça ainsi, est de réaliser la séquence suivante pour chaque template:&lt;/p>
&lt;ol>
&lt;li>conversion en machine virtuelle&lt;/li>
&lt;li>mise à jour du VMX&lt;/li>
&lt;li>conversion en template&lt;/li>
&lt;/ol>
&lt;p>C'est moche mais c'est rapide et ça fait bien le job.&lt;/p>
&lt;h2 id="quand-cest-terminé">Quand c'est terminé&lt;/h2>
&lt;p>On se déconnecte:&lt;/p>
&lt;pre>&lt;code># clean leave
Disconnect-VIServer -Confirm:$false
&lt;/code>&lt;/pre>
&lt;p>That's all folks !&lt;/p>
&lt;h1 id="la-version-complète">La version complète&lt;/h1>
&lt;p>La version complète du script présenté ici est disponible ici: &lt;a href="https://gist.github.com/lrivallain/b74a87c5c01a53ee242f#file-templatesvmxupdater-ps1" title="Le script sur mon profil github/gist">lrivallain &lt;em>(sur Github)&lt;/em> / TemplatesVmxUpdater.ps1&lt;/a>&lt;/p>
&lt;p>Et si certains ont trouvé plus rapide et moins sale, les commentaires sont là pour ça.&lt;/p></description></item></channel></rss>