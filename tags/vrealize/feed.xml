<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>vrealize on vUptime.io - Cloud builder(s)</title><link>vuptime.io/tags/vrealize/</link><description>Recent content in vrealize on vUptime.io - Cloud builder(s)</description><generator>Hugo -- gohugo.io</generator><copyright>Ludovic Rivallain and blog co-authors</copyright><lastBuildDate>Fri, 13 Dec 2019 00:00:00 +0000</lastBuildDate><atom:link href="vuptime.io/tags/vrealize/feed.xml" rel="self" type="application/rss+xml"/><item><title>Interact with the vRealize Automation IaaS objects on vRealize Orchestrator</title><link>vuptime.io/post/2019-12-13-use-iaas-object-in-vro/</link><pubDate>Fri, 13 Dec 2019 00:00:00 +0000</pubDate><guid>/2019/12/13/use-iaas-object-in-vro/</guid><description>
&lt;p>As described on another &lt;a href="vuptime.io/cards/vra-linqpad-explore-iaas-objects/">blog post&lt;/a>, vRA IaaS objects can be gathered using the model manager.
This article will show you how to interact with this kind of object using &lt;code>vRealize Orchestrator&lt;/code>.&lt;/p>
&lt;p>On this first sample, we are trying to get a virtual machine named &lt;code>TESTVM02&lt;/code> on the model manager.
The VirtualMachine object has a property called &lt;code>VirtualMachineName&lt;/code> that we can used to filter the virtual machine by its name.&lt;/p>
&lt;figure>&lt;img src="vuptime.io/images/iaas_vro/model_manager_vm.png"/>&lt;figcaption>
&lt;h4>Image&lt;/h4>
&lt;/figcaption>
&lt;/figure>
&lt;p>Here is the javascript code in order to get this virtual machine machine.
It will return a object of type &lt;a href="http://www.vroapi.com/Class/vCAC/7.2.0/VCACEntity">VCAC:Entity&lt;/a>.&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-javascript" data-lang="javascript">&lt;span class="ln"> 1&lt;/span>&lt;span class="c1">// Inputs : vcacHost : vCAC:vCACHOST
&lt;/span>&lt;span class="ln"> 2&lt;/span>&lt;span class="c1">&lt;/span>
&lt;span class="ln"> 3&lt;/span>&lt;span class="c1">// Define the virtual machine name to search
&lt;/span>&lt;span class="ln"> 4&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="kd">var&lt;/span> &lt;span class="nx">vmName&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s1">&amp;#39;TESTVM02&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln"> 5&lt;/span>
&lt;span class="ln"> 6&lt;/span>&lt;span class="c1">// Use the management model
&lt;/span>&lt;span class="ln"> 7&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="kd">var&lt;/span> &lt;span class="nx">modelName&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s1">&amp;#39;ManagementModelEntities.svc&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln"> 8&lt;/span>&lt;span class="c1">// Get the virtual machines object
&lt;/span>&lt;span class="ln"> 9&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="kd">var&lt;/span> &lt;span class="nx">entitySetName&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s1">&amp;#39;VirtualMachines&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln">10&lt;/span>&lt;span class="c1">// Filter the result by the property VirtualMachineName
&lt;/span>&lt;span class="ln">11&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="kd">var&lt;/span> &lt;span class="nx">filter&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;VirtualMachineName eq &amp;#39;&amp;#34;&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="nx">vmName&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="s2">&amp;#34;&amp;#39;&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln">12&lt;/span>&lt;span class="kd">var&lt;/span> &lt;span class="nx">orderBy&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kc">null&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln">13&lt;/span>&lt;span class="kd">var&lt;/span> &lt;span class="nx">top&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kc">null&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln">14&lt;/span>&lt;span class="kd">var&lt;/span> &lt;span class="nx">skip&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln">15&lt;/span>&lt;span class="kd">var&lt;/span> &lt;span class="nx">headers&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kc">null&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln">16&lt;/span>&lt;span class="kd">var&lt;/span> &lt;span class="nx">select&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kc">null&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln">17&lt;/span>
&lt;span class="ln">18&lt;/span>&lt;span class="c1">// Query the model manager
&lt;/span>&lt;span class="ln">19&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="kd">var&lt;/span> &lt;span class="nx">vms&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">vCACEntityManager&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">readModelEntitiesBySystemQuery&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">vcacHost&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">id&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">modelName&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">entitySetName&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">filter&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">orderBy&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">select&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">top&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">skip&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">headers&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="ln">20&lt;/span>&lt;span class="c1">// Check if the virtual machine has been found
&lt;/span>&lt;span class="ln">21&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">vms&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="kc">null&lt;/span> &lt;span class="o">||&lt;/span> &lt;span class="nx">vms&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="s1">&amp;#39;&amp;#39;&lt;/span>&lt;span class="p">){&lt;/span>
&lt;span class="ln">22&lt;/span> &lt;span class="kd">var&lt;/span> &lt;span class="nx">message&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s1">&amp;#39;There is no virtual machine named &amp;#39;&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="nx">vmName&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln">23&lt;/span> &lt;span class="nx">System&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">warn&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">message&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="ln">24&lt;/span>&lt;span class="p">}&lt;/span>
&lt;span class="ln">25&lt;/span>&lt;span class="k">else&lt;/span>&lt;span class="p">{&lt;/span>
&lt;span class="ln">26&lt;/span> &lt;span class="kd">var&lt;/span> &lt;span class="nx">message&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s1">&amp;#39;Virtual machine &amp;#39;&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="nx">vmName&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="s1">&amp;#39; found&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln">27&lt;/span> &lt;span class="nx">System&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">log&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">message&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="ln">28&lt;/span>&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Workflow in action :&lt;/p>
&lt;figure>&lt;img src="vuptime.io/images/iaas_vro/workflow_iaas_get_vm.png"/>&lt;figcaption>
&lt;h4>Image&lt;/h4>
&lt;/figcaption>
&lt;/figure>
&lt;p>Great ! Once the virtual machine captured, we can access to all its properties.
For instance, we need to know the vCPU and RAM configured on the virtual machine.
The request is simple, we'll use the method &lt;code>get_property&lt;/code> on the object &lt;code>VCAC:Entity&lt;/code>&lt;/p>
&lt;p>You just need to get the corresponding properties names:
&lt;figure>&lt;img src="vuptime.io/images/iaas_vro/model_manager_vm_request.png"/>&lt;figcaption>
&lt;h4>Image&lt;/h4>
&lt;/figcaption>
&lt;/figure>
&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-javascript" data-lang="javascript">&lt;span class="ln">1&lt;/span>&lt;span class="c1">// Get the first virtual machine on the result (There is only one as we used the filter)
&lt;/span>&lt;span class="ln">2&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="kd">var&lt;/span> &lt;span class="nx">vm&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">vms&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">];&lt;/span>
&lt;span class="ln">3&lt;/span>&lt;span class="kd">var&lt;/span> &lt;span class="nx">vmVcpu&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">vm&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">getProperty&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;VMCPUs&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="ln">4&lt;/span>&lt;span class="kd">var&lt;/span> &lt;span class="nx">vmRam&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">vm&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">getProperty&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;VMTotalMemoryMB&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="ln">5&lt;/span>&lt;span class="nx">System&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">log&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;The virtual machine &amp;#39;&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="nx">vmName&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="s1">&amp;#39; is configured &amp;#39;&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="nx">vmVcpu&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="s1">&amp;#39; vCPU and &amp;#39;&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="nx">vmRam&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="s1">&amp;#39; RAM&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;figure>&lt;img src="vuptime.io/images/iaas_vro/workflow_iaas_get_vm_vcpu_ram.png"/>&lt;figcaption>
&lt;h4>Image&lt;/h4>
&lt;/figcaption>
&lt;/figure>
&lt;p>Everything is working well, but now we also want to display the virtual machine hard-disks.
There is a property name called &lt;code>VMDiskHardware&lt;/code> but not directly accessible because this is a child object of &lt;code>VirtualMachine&lt;/code>.&lt;/p>
&lt;p>Using LINQPAD, we can access to this property by using the method &lt;code>expand&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-c#" data-lang="c#">&lt;span class="ln">1&lt;/span>&lt;span class="n">VirtualMachines&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">Expand&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;VMDiskHardware&amp;#34;&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="n">Where&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">v&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="n">v&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">VirtualMachineName&lt;/span> &lt;span class="p">==&lt;/span> &lt;span class="s">&amp;#34;TESTVM02&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;figure>&lt;img src="vuptime.io/images/iaas_vro/model_manager_vm_disks.png"/>&lt;figcaption>
&lt;h4>Image&lt;/h4>
&lt;/figcaption>
&lt;/figure>
&lt;p>With vRO, we have to use the the method &lt;code>get_link&lt;/code> of the corresponding &lt;code>VCAC:Entity&lt;/code>
This method has 2 parameters :&lt;/p>
&lt;ul>
&lt;li>The first one is your IaaS manager ( &lt;code>vCAC:vCACHost&lt;/code> object on vRO )&lt;/li>
&lt;li>The second is the link name ( the child object name ).&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-javascript" data-lang="javascript">&lt;span class="ln">1&lt;/span>&lt;span class="kd">var&lt;/span> &lt;span class="nx">vmDisks&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">vm&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">getLink&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">vcacHost&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;VMDiskHardware&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="ln">2&lt;/span>&lt;span class="k">for&lt;/span> &lt;span class="nx">each&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kd">var&lt;/span> &lt;span class="nx">vmDisk&lt;/span> &lt;span class="k">in&lt;/span> &lt;span class="nx">vmDisks&lt;/span>&lt;span class="p">){&lt;/span>
&lt;span class="ln">3&lt;/span> &lt;span class="nx">diskName&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">vmDisk&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">getProperty&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;DiskName&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="ln">4&lt;/span> &lt;span class="nx">diskSize&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">vmDisk&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">getProperty&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;Capacity&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="ln">5&lt;/span> &lt;span class="nx">System&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">log&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">diskName&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="s1">&amp;#39; is configured with &amp;#39;&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="nx">diskSize&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="s1">&amp;#39; GB&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="ln">6&lt;/span>
&lt;span class="ln">7&lt;/span>&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;figure>&lt;img src="vuptime.io/images/iaas_vro/workflow_iaas_get_vm_disks.png"/>&lt;figcaption>
&lt;h4>Image&lt;/h4>
&lt;/figcaption>
&lt;/figure>
&lt;p>Perfect ! We can now request the IaaS database in order to get a lot of usefull information to extend the use on vRealize Automation.&lt;/p>
&lt;p>To end this blog post, here is another sample to get the VirtualMachine created after a defined date :&lt;/p>
&lt;figure>&lt;img src="vuptime.io/images/iaas_vro/model_manager_vm_date.png"/>&lt;figcaption>
&lt;h4>Image&lt;/h4>
&lt;/figcaption>
&lt;/figure>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-javascript" data-lang="javascript">&lt;span class="ln"> 1&lt;/span>&lt;span class="c1">// Inputs : startDate : Date; vcacHost : vCAC:vCACHOST
&lt;/span>&lt;span class="ln"> 2&lt;/span>&lt;span class="c1">&lt;/span>
&lt;span class="ln"> 3&lt;/span>&lt;span class="nx">startDateFormatted&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">System&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">formatDate&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">startDate&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;yyyy-MM-dd&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="s1">&amp;#39;T00:00:00&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln"> 4&lt;/span>
&lt;span class="ln"> 5&lt;/span>&lt;span class="c1">//Define the model name
&lt;/span>&lt;span class="ln"> 6&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="kd">var&lt;/span> &lt;span class="nx">modelName&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s1">&amp;#39;ManagementModelEntities.svc&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln"> 7&lt;/span>&lt;span class="c1">//Get the virtual machines
&lt;/span>&lt;span class="ln"> 8&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="kd">var&lt;/span> &lt;span class="nx">entitySetName&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s1">&amp;#39;VirtualMachines&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln"> 9&lt;/span>
&lt;span class="ln">10&lt;/span>&lt;span class="c1">//Get all the vcac vm created after the defined date
&lt;/span>&lt;span class="ln">11&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="kd">var&lt;/span> &lt;span class="nx">filter&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;VMCreationDate ge datetime&amp;#39;&amp;#34;&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="nx">startDateFormatted&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="s2">&amp;#34;&amp;#39;&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln">12&lt;/span>&lt;span class="kd">var&lt;/span> &lt;span class="nx">orderBy&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kc">null&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln">13&lt;/span>&lt;span class="kd">var&lt;/span> &lt;span class="nx">top&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kc">null&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln">14&lt;/span>&lt;span class="kd">var&lt;/span> &lt;span class="nx">skip&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln">15&lt;/span>&lt;span class="kd">var&lt;/span> &lt;span class="nx">headers&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kc">null&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln">16&lt;/span>&lt;span class="kd">var&lt;/span> &lt;span class="nx">select&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kc">null&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln">17&lt;/span>
&lt;span class="ln">18&lt;/span>&lt;span class="c1">//Query the database
&lt;/span>&lt;span class="ln">19&lt;/span>&lt;span class="c1">&lt;/span>&lt;span class="kd">var&lt;/span> &lt;span class="nx">vms&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">vCACEntityManager&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">readModelEntitiesBySystemQuery&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">vcacHost&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">id&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">modelName&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">entitySetName&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">filter&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">orderBy&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">select&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">top&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">skip&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">headers&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="ln">20&lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">vms&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="kc">null&lt;/span> &lt;span class="o">||&lt;/span> &lt;span class="nx">vms&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="s1">&amp;#39;&amp;#39;&lt;/span>&lt;span class="p">){&lt;/span>
&lt;span class="ln">21&lt;/span> &lt;span class="kd">var&lt;/span> &lt;span class="nx">message&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s1">&amp;#39;There is no created virtual machine after &amp;#39;&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="nx">startDateFormatted&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="ln">22&lt;/span> &lt;span class="nx">System&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">warn&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">message&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="ln">23&lt;/span>&lt;span class="p">}&lt;/span>
&lt;span class="ln">24&lt;/span>&lt;span class="k">else&lt;/span>&lt;span class="p">{&lt;/span>
&lt;span class="ln">25&lt;/span> &lt;span class="kd">var&lt;/span> &lt;span class="nx">message&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s1">&amp;#39;There is &amp;#39;&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="nx">vms&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">length&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="s1">&amp;#39; created virtual machine after &amp;#39;&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="nx">startDateFormatted&lt;/span>
&lt;span class="ln">26&lt;/span> &lt;span class="nx">System&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">log&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">message&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="ln">27&lt;/span>&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;figure>&lt;img src="vuptime.io/images/iaas_vro/workflow_iaas_get_vm_by_date.png"/>&lt;figcaption>
&lt;h4>Image&lt;/h4>
&lt;/figcaption>
&lt;/figure>
&lt;p>You are now ready the use the IaaS object directly in vRO ;)&lt;/p></description></item><item><title>New release of VMware vRealize Orchestrator package diff tool</title><link>vuptime.io/post/2019-08-05-released-vro-package-diff_v2/</link><pubDate>Mon, 05 Aug 2019 00:00:00 +0000</pubDate><guid>/2019/08/05/released-vro-package-diff_v2/</guid><description>
&lt;p>About a year ago, I published a small tool to compare two VMware vRealize Orchestrator packages file: &lt;a href="vuptime.io/2018/02/28/vmware-vrealizeorchestrator-package-diff-python-tool/">vRO Package Diff&lt;/a>. Initial version was a simple python script accepting 2 files as arguments and without any input controls.&lt;/p>
&lt;p>Today, I publish a v2 of the tool with the following changes:&lt;/p>
&lt;ul>
&lt;li>&lt;code>vro-package-diff&lt;/code> is now a Pypi hosted project: &lt;a href="https://pypi.org/project/vro-package-diff/">vro-package-diff&lt;/a> and so, can be installed with &lt;code>pip install&lt;/code> command.&lt;/li>
&lt;li>An endpoit &lt;code>vro-diff&lt;/code> to access to the tool from any path location.&lt;/li>
&lt;li>Usage of &lt;a href="https://click.palletsprojects.com/">&lt;code>click&lt;/code>&lt;/a> to manage:
&lt;ul>
&lt;li>inputs packages&lt;/li>
&lt;li>help&lt;/li>
&lt;li>legend display&lt;/li>
&lt;li>test feature&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>A &lt;em>test&lt;/em> feature&lt;/li>
&lt;li>Documentation is hosted on &lt;a href="https://vro-package-diff.readthedocs.io">vro-package-diff.readthedocs.io&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://travis-ci.org/lrivallain/vro-package-diff/">Travis pipeline&lt;/a>&lt;/li>
&lt;/ul>
&lt;figure>&lt;img src="vuptime.io/images/vro-diff-package/vro-diff-package_v2.png"/>&lt;figcaption>
&lt;h4>Sample output of vro-diff-package&lt;/h4>
&lt;/figcaption>
&lt;/figure>
&lt;h2 id="install-the-new-version">Install the new version&lt;/h2>
&lt;p>From a python environment with &lt;code>pip&lt;/code> installed:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="ln">1&lt;/span>pip install vro-package-diff
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="usage">Usage&lt;/h2>
&lt;h3 id="get-the-help">Get the help&lt;/h3>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="ln"> 1&lt;/span>vro-diff --help
&lt;span class="ln"> 2&lt;/span>Usage: vro-diff &lt;span class="o">[&lt;/span>OPTIONS&lt;span class="o">]&lt;/span> REFERENCE_PACKAGE COMPARED_PACKAGE
&lt;span class="ln"> 3&lt;/span>
&lt;span class="ln"> 4&lt;/span>Start a diff operation between two vRO packages.
&lt;span class="ln"> 5&lt;/span>
&lt;span class="ln"> 6&lt;/span>REFERENCE_PACKAGE is the package you want to use as &lt;span class="nb">source&lt;/span>
&lt;span class="ln"> 7&lt;/span>COMPARED_PACKAGE is the one you want to compare with reference one
&lt;span class="ln"> 8&lt;/span>
&lt;span class="ln"> 9&lt;/span>Options:
&lt;span class="ln">10&lt;/span>-l, --legend Display the legend after the diff table
&lt;span class="ln">11&lt;/span>-t, --test Exit with &lt;span class="sb">`&lt;/span>0&lt;span class="sb">`&lt;/span> &lt;span class="k">if&lt;/span> package can be safely imported. Else, returns
&lt;span class="ln">12&lt;/span> the number of errors
&lt;span class="ln">13&lt;/span>-h, --help Show this message and exit.
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="examples">Examples&lt;/h3>
&lt;p>Compare two packages:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="ln">1&lt;/span>vro-diff tests/data/package_v1.0.package tests/data/package_v1.1.package
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Compare, then display legend (&lt;code>--legend&lt;/code>):&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="ln">1&lt;/span>vro-diff --legend --test tests/data/package_v1.0.package tests/data/package_v1.1.package
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Compare, then exit with error if there is conflicts (&lt;code>-–test&lt;/code>):&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="ln">1&lt;/span>vro-diff --test tests/data/package_v1.0.package tests/data/package_v1.1.package
&lt;span class="ln">2&lt;/span>&lt;span class="nb">echo&lt;/span> &lt;span class="nv">$?&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>The script will exit with the number of items with a conflict situation.&lt;/p>
&lt;p>This &lt;code>-–test&lt;/code> option can be usefull to implement CI/CD pipelines to compare, then upload(if there is no conflict) vRO packages.&lt;/p>
&lt;h3 id="contributions">Contributions&lt;/h3>
&lt;p>This tool needs vRO users to be tested and improved based on feedback and &lt;a href="https://github.com/lrivallain/vro-package-diff/graphs/contributors">contributions&lt;/a>: Feel free to &lt;a href="https://github.com/lrivallain/vro-package-diff/issues/new">open issue&lt;/a> or &lt;a href="https://github.com/lrivallain/vro-package-diff/compare">create pull request&lt;/a>.&lt;/p></description></item><item><title>VMware vRealize orchestrator package diff python tool</title><link>vuptime.io/post/2018-02-28-vmware-vrealizeorchestrator-package-diff-python-tool/</link><pubDate>Wed, 28 Feb 2018 00:00:00 +0000</pubDate><guid>/2018/02/28/vmware-vrealizeorchestrator-package-diff-python-tool/</guid><description>
&lt;p>I have recently published a draft tool to provide a table-formated diff of two vRealize Orchestrator packages.&lt;/p>
&lt;p>Project is available on &lt;a href="https://github.com/lrivallain/vro-package-diff/">GitHub project&lt;/a> and will evolve in futur to support more package item's types and to provide better information about differences.&lt;/p>
&lt;figure>&lt;img src="vuptime.io/images/vro-diff-package/vro-package-diff-sample.png"/>&lt;figcaption>
&lt;h4>Sample of output&lt;/h4>
&lt;/figcaption>
&lt;/figure>
&lt;h2 id="installation">Installation&lt;/h2>
&lt;p>&lt;strong>Requirements:&lt;/strong> Python 3 and &lt;code>pip&lt;/code> installed.&lt;/p>
&lt;p>Download:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="ln">1&lt;/span>git clone https://github.com/lrivallain/vro-package-diff.git
&lt;span class="ln">2&lt;/span>&lt;span class="nb">cd&lt;/span> vro-package-diff
&lt;/code>&lt;/pre>&lt;/div>&lt;p>(optionnal) Create python virtualenv:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="ln">1&lt;/span>virtualenv -p python3 --no-site-packages venv
&lt;span class="ln">2&lt;/span>. venv/bin/activate
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Install required python packages:&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="ln">1&lt;/span>pip install -r requirements.txt
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="usage">Usage&lt;/h2>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="ln">1&lt;/span>python ./vro_package_diff.py packageA.package packageB.package
&lt;/code>&lt;/pre>&lt;/div>&lt;p>With:&lt;/p>
&lt;ul>
&lt;li>&lt;code>packageA.package&lt;/code> : oldest package file&lt;/li>
&lt;li>&lt;code>packageB.package&lt;/code> : newest package file&lt;/li>
&lt;/ul>
&lt;h2 id="logs">Logs&lt;/h2>
&lt;p>Execution logs are saved in the &lt;code>diff.log&lt;/code> file. The file is overwritten at each execution of the diff tool.&lt;/p></description></item></channel></rss>